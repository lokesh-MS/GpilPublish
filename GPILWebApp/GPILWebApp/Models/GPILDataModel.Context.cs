//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GPILWebApp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using ViewModel.LOGIN;
    using ViewModel;

    public partial class GREEN_LEAF_TRACEABILITYEntities : DbContext
    {
        public GREEN_LEAF_TRACEABILITYEntities()
            : base("name=GREEN_LEAF_TRACEABILITYEntities")
        {
        }
       

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C_> C_ { get; set; }
        public virtual DbSet<BC_Batch_Details> BC_Batch_Details { get; set; }
        public virtual DbSet<BC_Batch_Header> BC_Batch_Header { get; set; }
        public virtual DbSet<BC_InterGrade> BC_InterGrade { get; set; }
        public virtual DbSet<GPIL_3ROWDATA_DTLS> GPIL_3ROWDATA_DTLS { get; set; }
        public virtual DbSet<GPIL_3ROWDATA_HDR> GPIL_3ROWDATA_HDR { get; set; }
        public virtual DbSet<GPIL_BANK_NAME_LIST> GPIL_BANK_NAME_LIST { get; set; }
        public virtual DbSet<GPIL_BG_INFORMATION> GPIL_BG_INFORMATION { get; set; }
        public virtual DbSet<GPIL_BG_TRANSACTION> GPIL_BG_TRANSACTION { get; set; }
        public virtual DbSet<GPIL_BUYER_VS_CLASSIFIER_GRD_MASTER> GPIL_BUYER_VS_CLASSIFIER_GRD_MASTER { get; set; }
        public virtual DbSet<GPIL_CLASSIFICATION_DTLS> GPIL_CLASSIFICATION_DTLS { get; set; }
        public virtual DbSet<GPIL_CLASSIFICATION_DTLS_TEMP> GPIL_CLASSIFICATION_DTLS_TEMP { get; set; }
        public virtual DbSet<GPIL_CLASSIFICATION_HDR> GPIL_CLASSIFICATION_HDR { get; set; }
        public virtual DbSet<GPIL_CLASSIFICATION_HDR_TEMP> GPIL_CLASSIFICATION_HDR_TEMP { get; set; }
        public virtual DbSet<GPIL_CLASSIFY_SUFFIX> GPIL_CLASSIFY_SUFFIX { get; set; }
        public virtual DbSet<GPIL_CLUSTER_MASTER> GPIL_CLUSTER_MASTER { get; set; }


        
        




        public virtual DbSet<GPIL_COMPANY_MASTER> GPIL_COMPANY_MASTER { get; set; }
        public virtual DbSet<GPIL_COMPETITION_DTLS> GPIL_COMPETITION_DTLS { get; set; }
        public virtual DbSet<GPIL_COMPETITION_HDR> GPIL_COMPETITION_HDR { get; set; }
        public virtual DbSet<GPIL_CROP_MASTER> GPIL_CROP_MASTER { get; set; }

        public virtual DbSet<QualityLab> GPIL_CHEMISTRY_DATA { get; set; }
        public virtual DbSet<GPIL_CROP_TRANS_DTLS> GPIL_CROP_TRANS_DTLS { get; set; }
        public virtual DbSet<GPIL_CROP_TRANS_DTLS_TEMP> GPIL_CROP_TRANS_DTLS_TEMP { get; set; }
        public virtual DbSet<GPIL_CROP_TRANS_HDR> GPIL_CROP_TRANS_HDR { get; set; }
        public virtual DbSet<GPIL_CROP_TRANS_HDR_TEMP> GPIL_CROP_TRANS_HDR_TEMP { get; set; }
        public virtual DbSet<GPIL_DAILYSTOCK_BACKUP> GPIL_DAILYSTOCK_BACKUP { get; set; }
        public virtual DbSet<GPIL_FACTORY_DISPATCH_GRADE_DTLS> GPIL_FACTORY_DISPATCH_GRADE_DTLS { get; set; }
        public virtual DbSet<GPIL_FARMER_CROP_HISTORY> GPIL_FARMER_CROP_HISTORY { get; set; }
        public virtual DbSet<GPIL_FARMER_FREIGHT_CHARGE_MASTER> GPIL_FARMER_FREIGHT_CHARGE_MASTER { get; set; }
        public virtual DbSet<GPIL_FARMER_FREIGHT_MASTER> GPIL_FARMER_FREIGHT_MASTER { get; set; }
        public virtual DbSet<GPIL_FARMER_LOAN_TRANSACTION> GPIL_FARMER_LOAN_TRANSACTION { get; set; }
        public virtual DbSet<GPIL_FARMER_LOAN_TRANSACTIONS> GPIL_FARMER_LOAN_TRANSACTIONS { get; set; }
        public virtual DbSet<GPIL_FARMER_MASTER> GPIL_FARMER_MASTER { get; set; }
        //public virtual DbSet<FarmerMaster_FarmerCropHistory> FarmerMaster_FarmerCropHistory { get; set; }
        public virtual DbSet<GPIL_FARMER_MASTER_backup> GPIL_FARMER_MASTER_backup { get; set; }
        public virtual DbSet<GPIL_FARMER_MASTER_NEW> GPIL_FARMER_MASTER_NEW { get; set; }
        public virtual DbSet<GPIL_FARMER_PURCHASE_TRANSACTIONS> GPIL_FARMER_PURCHASE_TRANSACTIONS { get; set; }
        public virtual DbSet<GPIL_FARMER_PURCHS_REMARKS> GPIL_FARMER_PURCHS_REMARKS { get; set; }
        public virtual DbSet<GPIL_FARMER_VILLAGE_FREIGHT_MASTER> GPIL_FARMER_VILLAGE_FREIGHT_MASTER { get; set; }
        public virtual DbSet<GPIL_FUMIGATION_DTLS> GPIL_FUMIGATION_DTLS { get; set; }
        public virtual DbSet<GPIL_FUMIGATION_DTLS_TEMP> GPIL_FUMIGATION_DTLS_TEMP { get; set; }
        public virtual DbSet<GPIL_FUMIGATION_HDR> GPIL_FUMIGATION_HDR { get; set; }
        public virtual DbSet<GPIL_FUMIGATION_HDR_TEMP> GPIL_FUMIGATION_HDR_TEMP { get; set; }
        public virtual DbSet<GPIL_GRADING_DTLS> GPIL_GRADING_DTLS { get; set; }
        public virtual DbSet<GPIL_GRADING_DTLS_TEMP> GPIL_GRADING_DTLS_TEMP { get; set; }
        public virtual DbSet<GPIL_GRADING_HDR> GPIL_GRADING_HDR { get; set; }
        public virtual DbSet<GPIL_GRADING_HDR_TEMP> GPIL_GRADING_HDR_TEMP { get; set; }
        public virtual DbSet<GPIL_GRADING_NONSUFFIX_ITEM> GPIL_GRADING_NONSUFFIX_ITEM { get; set; }
        public virtual DbSet<GPIL_ITEM_MASTER> GPIL_ITEM_MASTER { get; set; }
        public virtual DbSet<GPIL_MAX_MIN_VALUE> GPIL_MAX_MIN_VALUE { get; set; }
        public virtual DbSet<GPIL_OPERATION_RECIPE> GPIL_OPERATION_RECIPE { get; set; }
        public virtual DbSet<GPIL_ORGN_MASTER> GPIL_ORGN_MASTER { get; set; }
        public virtual DbSet<GPIL_PROCESS_ORDER_CAPTURE> GPIL_PROCESS_ORDER_CAPTURE { get; set; }
        public virtual DbSet<GPIL_REJECTION_TYPE> GPIL_REJECTION_TYPE { get; set; }
        public virtual DbSet<GPIL_REMARKS> GPIL_REMARKS { get; set; }
        public virtual DbSet<GPIL_SERVICE_CHARGE_CHART> GPIL_SERVICE_CHARGE_CHART { get; set; }
        public virtual DbSet<GPIL_SERVICE_CHARGE_INFO> GPIL_SERVICE_CHARGE_INFO { get; set; }
        public virtual DbSet<GPIL_SERVICE_CHARGE_MASTER> GPIL_SERVICE_CHARGE_MASTER { get; set; }
        public virtual DbSet<GPIL_SHIP_MISS> GPIL_SHIP_MISS { get; set; }
        public virtual DbSet<GPIL_SHIPMENT_DTLS> GPIL_SHIPMENT_DTLS { get; set; }
        public virtual DbSet<GPIL_SHIPMENT_DTLS_TEMP> GPIL_SHIPMENT_DTLS_TEMP { get; set; }
        public virtual DbSet<GPIL_SHIPMENT_HDR> GPIL_SHIPMENT_HDR { get; set; }
        public virtual DbSet<GPIL_SHIPMENT_HDR_TEMP> GPIL_SHIPMENT_HDR_TEMP { get; set; }
        public virtual DbSet<GPIL_SO_RESERVATION_DTLS> GPIL_SO_RESERVATION_DTLS { get; set; }
        public virtual DbSet<GPIL_SO_RESERVATION_DTLS_TEMP> GPIL_SO_RESERVATION_DTLS_TEMP { get; set; }
        public virtual DbSet<GPIL_SO_RESERVATION_HDR> GPIL_SO_RESERVATION_HDR { get; set; }
        public virtual DbSet<GPIL_SO_RESERVATION_HDR_TEMP> GPIL_SO_RESERVATION_HDR_TEMP { get; set; }
        public virtual DbSet<GPIL_SOIL_MASTER> GPIL_SOIL_MASTER { get; set; }
        public virtual DbSet<GPIL_STACK_MASTER> GPIL_STACK_MASTER { get; set; }
        public virtual DbSet<GPIL_STOCK> GPIL_STOCK { get; set; }
        public virtual DbSet<GPIL_SUBINVENTORY> GPIL_SUBINVENTORY { get; set; }
        public virtual DbSet<GPIL_SUPP_PURCHS_DTLS> GPIL_SUPP_PURCHS_DTLS { get; set; }
        public virtual DbSet<GPIL_SUPP_PURCHS_HDR> GPIL_SUPP_PURCHS_HDR { get; set; }
        public virtual DbSet<GPIL_SUPPLIER_MASTER> GPIL_SUPPLIER_MASTER { get; set; }
        public virtual DbSet<GPIL_TAP_FARM_PURCHS_DTLS> GPIL_TAP_FARM_PURCHS_DTLS { get; set; }
        public virtual DbSet<GPIL_TAP_FARM_PURCHS_HDR> GPIL_TAP_FARM_PURCHS_HDR { get; set; }
        public virtual DbSet<GPIL_THRESH_RECON_DTLS_1> GPIL_THRESH_RECON_DTLS_1 { get; set; }
        public virtual DbSet<GPIL_THRESH_RECON_DTLS_1_TEMP> GPIL_THRESH_RECON_DTLS_1_TEMP { get; set; }
        public virtual DbSet<GPIL_THRESH_RECON_DTLS_2> GPIL_THRESH_RECON_DTLS_2 { get; set; }
        public virtual DbSet<GPIL_THRESH_RECON_DTLS_2_TEMP> GPIL_THRESH_RECON_DTLS_2_TEMP { get; set; }
        public virtual DbSet<GPIL_THRESH_RECON_HDR> GPIL_THRESH_RECON_HDR { get; set; }
        public virtual DbSet<PoReceipt> GPIL_Leaf_Po_Details { get; set; }

        public virtual DbSet<GPIL_THRESH_RECON_HDR_TEMP> GPIL_THRESH_RECON_HDR_TEMP { get; set; }
        public virtual DbSet<GPIL_THRESH_RECON_ISSUE_GRADE_DTLS> GPIL_THRESH_RECON_ISSUE_GRADE_DTLS { get; set; }
        public virtual DbSet<Login> GPIL_USER_MASTER1 { get; set; }
        public virtual DbSet<GPIL_USER_MASTER> GPIL_USER_MASTER { get; set; }
        public virtual DbSet<GPIL_USER_RIGHTS> GPIL_USER_RIGHTS { get; set; }
        public virtual DbSet<GPIL_VARIETY_MASTER> GPIL_VARIETY_MASTER { get; set; }
        public virtual DbSet<GPIL_VARIETY_SEASON_MASTER> GPIL_VARIETY_SEASON_MASTER { get; set; }
        public virtual DbSet<GPIL_VILLAGE_MASTER> GPIL_VILLAGE_MASTER { get; set; }
        public virtual DbSet<mCas> mCases { get; set; }
        public virtual DbSet<mChemicalDetail> mChemicalDetails { get; set; }
        public virtual DbSet<mCountry> mCountries { get; set; }
        public virtual DbSet<mCropYear> mCropYears { get; set; }
        public virtual DbSet<mGrade> mGrades { get; set; }
        public virtual DbSet<mJobType> mJobTypes { get; set; }
        public virtual DbSet<mLocation> mLocations { get; set; }
        public virtual DbSet<mRate> mRates { get; set; }
        public virtual DbSet<mStack> mStacks { get; set; }
        public virtual DbSet<mSupplier> mSuppliers { get; set; }
        public virtual DbSet<mTransporter> mTransporters { get; set; }
        public virtual DbSet<mUser> mUsers { get; set; }
        public virtual DbSet<mVariety> mVarieties { get; set; }
        public virtual DbSet<mWebSetting> mWebSettings { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tBarcodeDetail> tBarcodeDetails { get; set; }
        public virtual DbSet<tCaseDetail> tCaseDetails { get; set; }
        public virtual DbSet<tDispatchDetail> tDispatchDetails { get; set; }
        public virtual DbSet<tDispatchNote> tDispatchNotes { get; set; }
        public virtual DbSet<tFactoryDetail> tFactoryDetails { get; set; }
        public virtual DbSet<tMaxLP5> tMaxLP5 { get; set; }
        public virtual DbSet<tPrintAllocation> tPrintAllocations { get; set; }
        public virtual DbSet<BC_ERP_IOT_DTL> BC_ERP_IOT_DTL { get; set; }
        public virtual DbSet<BC_WMS_LEAF_ASN_D> BC_WMS_LEAF_ASN_D { get; set; }
        public virtual DbSet<GPIL_BG_INFO> GPIL_BG_INFO { get; set; }
        public virtual DbSet<GPIL_Chemical_Targets> GPIL_Chemical_Targets { get; set; }
        public virtual DbSet<GPIL_Chemistry_Reports> GPIL_Chemistry_Reports { get; set; }
        public virtual DbSet<GPIL_FARMER_FATHERS_NAME> GPIL_FARMER_FATHERS_NAME { get; set; }
        public virtual DbSet<GPIL_FINANCIAL_YEAR> GPIL_FINANCIAL_YEAR { get; set; }
        public virtual DbSet<GPIL_LOG> GPIL_LOG { get; set; }
        public virtual DbSet<GPIL_PPGRD_MASTER> GPIL_PPGRD_MASTER { get; set; }
        public virtual DbSet<GPIL_PROJECT_FORMS> GPIL_PROJECT_FORMS { get; set; }
        public virtual DbSet<GPIL_RATE_MASTER> GPIL_RATE_MASTER { get; set; }
        public virtual DbSet<GPIL_Subsidue_Master> GPIL_Subsidue_Master { get; set; }
        public virtual DbSet<GPIL_USER_PERMISSION> GPIL_USER_PERMISSION { get; set; }
        public virtual DbSet<ITEM_MASTER> ITEM_MASTER { get; set; }
        public virtual DbSet<mDownloadTable> mDownloadTables { get; set; }
        public virtual DbSet<temp1> temp1 { get; set; }
        public virtual DbSet<temp2> temp2 { get; set; }
        public virtual DbSet<tempUploading> tempUploadings { get; set; }
        public virtual DbSet<tVersionDetail> tVersionDetails { get; set; }
        public virtual DbSet<HS_TRANSACTION_LOG> HS_TRANSACTION_LOG { get; set; }
    
        public virtual int Classificationprocess(ObjectParameter sts)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Classificationprocess", sts);
        }
    
        public virtual int CloseSalesNo(string refNo, ObjectParameter status)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("refNo", refNo) :
                new ObjectParameter("refNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CloseSalesNo", refNoParameter, status);
        }
    
        public virtual int CloseShipmentNo(string refNo, ObjectParameter status)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("refNo", refNo) :
                new ObjectParameter("refNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CloseShipmentNo", refNoParameter, status);
        }
    
        public virtual int CROPTRANSFERPROCESS(ObjectParameter sts)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CROPTRANSFERPROCESS", sts);
        }
    
        public virtual int FUMIGATION_BATCH(string refNo, ObjectParameter status)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("refNo", refNo) :
                new ObjectParameter("refNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FUMIGATION_BATCH", refNoParameter, status);
        }
    
        public virtual int GenerateFumigationHeader(string shpYear, string frmOrgnCode, string toOrgnCode, ObjectParameter shpNo, ObjectParameter cntsno)
        {
            var shpYearParameter = shpYear != null ?
                new ObjectParameter("shpYear", shpYear) :
                new ObjectParameter("shpYear", typeof(string));
    
            var frmOrgnCodeParameter = frmOrgnCode != null ?
                new ObjectParameter("frmOrgnCode", frmOrgnCode) :
                new ObjectParameter("frmOrgnCode", typeof(string));
    
            var toOrgnCodeParameter = toOrgnCode != null ?
                new ObjectParameter("toOrgnCode", toOrgnCode) :
                new ObjectParameter("toOrgnCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateFumigationHeader", shpYearParameter, frmOrgnCodeParameter, toOrgnCodeParameter, shpNo, cntsno);
        }
    
        public virtual int GenerateSalesNo(string shpYear, string frmOrgnCode, string toOrgnCode, ObjectParameter shpNo, ObjectParameter cntsno)
        {
            var shpYearParameter = shpYear != null ?
                new ObjectParameter("shpYear", shpYear) :
                new ObjectParameter("shpYear", typeof(string));
    
            var frmOrgnCodeParameter = frmOrgnCode != null ?
                new ObjectParameter("frmOrgnCode", frmOrgnCode) :
                new ObjectParameter("frmOrgnCode", typeof(string));
    
            var toOrgnCodeParameter = toOrgnCode != null ?
                new ObjectParameter("toOrgnCode", toOrgnCode) :
                new ObjectParameter("toOrgnCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateSalesNo", shpYearParameter, frmOrgnCodeParameter, toOrgnCodeParameter, shpNo, cntsno);
        }
    
        public virtual int GenerateShipmentNo(string shpYear, string frmOrgnCode, string toOrgnCode, ObjectParameter shpNo, ObjectParameter cntsno)
        {
            var shpYearParameter = shpYear != null ?
                new ObjectParameter("shpYear", shpYear) :
                new ObjectParameter("shpYear", typeof(string));
    
            var frmOrgnCodeParameter = frmOrgnCode != null ?
                new ObjectParameter("frmOrgnCode", frmOrgnCode) :
                new ObjectParameter("frmOrgnCode", typeof(string));
    
            var toOrgnCodeParameter = toOrgnCode != null ?
                new ObjectParameter("toOrgnCode", toOrgnCode) :
                new ObjectParameter("toOrgnCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateShipmentNo", shpYearParameter, frmOrgnCodeParameter, toOrgnCodeParameter, shpNo, cntsno);
        }
    
        public virtual ObjectResult<GetFarmerPurchaseSummaryDetails_Result> GetFarmerPurchaseSummaryDetails(string crop, string variety)
        {
            var cropParameter = crop != null ?
                new ObjectParameter("Crop", crop) :
                new ObjectParameter("Crop", typeof(string));
    
            var varietyParameter = variety != null ?
                new ObjectParameter("variety", variety) :
                new ObjectParameter("variety", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFarmerPurchaseSummaryDetails_Result>("GetFarmerPurchaseSummaryDetails", cropParameter, varietyParameter);
        }
    
        public virtual int GPI_stock(string pO_NO, string iTEM_NAME, Nullable<int> qUANTITY, Nullable<double> pRICE_PER_QUANTITY, string item_Category)
        {
            var pO_NOParameter = pO_NO != null ?
                new ObjectParameter("PO_NO", pO_NO) :
                new ObjectParameter("PO_NO", typeof(string));
    
            var iTEM_NAMEParameter = iTEM_NAME != null ?
                new ObjectParameter("ITEM_NAME", iTEM_NAME) :
                new ObjectParameter("ITEM_NAME", typeof(string));
    
            var qUANTITYParameter = qUANTITY.HasValue ?
                new ObjectParameter("QUANTITY", qUANTITY) :
                new ObjectParameter("QUANTITY", typeof(int));
    
            var pRICE_PER_QUANTITYParameter = pRICE_PER_QUANTITY.HasValue ?
                new ObjectParameter("PRICE_PER_QUANTITY", pRICE_PER_QUANTITY) :
                new ObjectParameter("PRICE_PER_QUANTITY", typeof(double));
    
            var item_CategoryParameter = item_Category != null ?
                new ObjectParameter("Item_Category", item_Category) :
                new ObjectParameter("Item_Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GPI_stock", pO_NOParameter, iTEM_NAMEParameter, qUANTITYParameter, pRICE_PER_QUANTITYParameter, item_CategoryParameter);
        }
    
        public virtual int GPIL_SP_CLASSIFICATION_TRANSFER(string bATCHTEMPREF, ObjectParameter rESULT, ObjectParameter oUTPUT)
        {
            var bATCHTEMPREFParameter = bATCHTEMPREF != null ?
                new ObjectParameter("BATCHTEMPREF", bATCHTEMPREF) :
                new ObjectParameter("BATCHTEMPREF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GPIL_SP_CLASSIFICATION_TRANSFER", bATCHTEMPREFParameter, rESULT, oUTPUT);
        }
    
        public virtual int GPIL_SP_CREATE_HEADER_REF(string pROCESS, string fINANCIAL_YEAR, string fROM_ORGNCODE, string rECEIVER_CODE, string rECIPE_CODE, ObjectParameter pERMANENT_REF, ObjectParameter rEF_SERIALNO, ObjectParameter rESULT, ObjectParameter eRROR)
        {
            var pROCESSParameter = pROCESS != null ?
                new ObjectParameter("PROCESS", pROCESS) :
                new ObjectParameter("PROCESS", typeof(string));
    
            var fINANCIAL_YEARParameter = fINANCIAL_YEAR != null ?
                new ObjectParameter("FINANCIAL_YEAR", fINANCIAL_YEAR) :
                new ObjectParameter("FINANCIAL_YEAR", typeof(string));
    
            var fROM_ORGNCODEParameter = fROM_ORGNCODE != null ?
                new ObjectParameter("FROM_ORGNCODE", fROM_ORGNCODE) :
                new ObjectParameter("FROM_ORGNCODE", typeof(string));
    
            var rECEIVER_CODEParameter = rECEIVER_CODE != null ?
                new ObjectParameter("RECEIVER_CODE", rECEIVER_CODE) :
                new ObjectParameter("RECEIVER_CODE", typeof(string));
    
            var rECIPE_CODEParameter = rECIPE_CODE != null ?
                new ObjectParameter("RECIPE_CODE", rECIPE_CODE) :
                new ObjectParameter("RECIPE_CODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GPIL_SP_CREATE_HEADER_REF", pROCESSParameter, fINANCIAL_YEARParameter, fROM_ORGNCODEParameter, rECEIVER_CODEParameter, rECIPE_CODEParameter, pERMANENT_REF, rEF_SERIALNO, rESULT, eRROR);
        }
    
        public virtual int GPIL_SP_CROP_TRANSFER(string bATCHTEMPREF, ObjectParameter rESULT, ObjectParameter oUTPUT)
        {
            var bATCHTEMPREFParameter = bATCHTEMPREF != null ?
                new ObjectParameter("BATCHTEMPREF", bATCHTEMPREF) :
                new ObjectParameter("BATCHTEMPREF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GPIL_SP_CROP_TRANSFER", bATCHTEMPREFParameter, rESULT, oUTPUT);
        }
    
        public virtual int GPIL_SP_CROPTRANSFER(string tempbatch, ObjectParameter sts)
        {
            var tempbatchParameter = tempbatch != null ?
                new ObjectParameter("tempbatch", tempbatch) :
                new ObjectParameter("tempbatch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GPIL_SP_CROPTRANSFER", tempbatchParameter, sts);
        }
    
        public virtual int GPIL_SP_DISPATCH(string dISPATCHNO, ObjectParameter rESULT, ObjectParameter oUTPUT)
        {
            var dISPATCHNOParameter = dISPATCHNO != null ?
                new ObjectParameter("DISPATCHNO", dISPATCHNO) :
                new ObjectParameter("DISPATCHNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GPIL_SP_DISPATCH", dISPATCHNOParameter, rESULT, oUTPUT);
        }
    
        public virtual int GPIL_SP_DISPATCH_RELOCATE(string oLDSHIPMENTNO, string rELOCATEORGN, ObjectParameter rESULT, ObjectParameter oUTPUT)
        {
            var oLDSHIPMENTNOParameter = oLDSHIPMENTNO != null ?
                new ObjectParameter("OLDSHIPMENTNO", oLDSHIPMENTNO) :
                new ObjectParameter("OLDSHIPMENTNO", typeof(string));
    
            var rELOCATEORGNParameter = rELOCATEORGN != null ?
                new ObjectParameter("RELOCATEORGN", rELOCATEORGN) :
                new ObjectParameter("RELOCATEORGN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GPIL_SP_DISPATCH_RELOCATE", oLDSHIPMENTNOParameter, rELOCATEORGNParameter, rESULT, oUTPUT);
        }
    
        public virtual ObjectResult<GPIL_SP_FUMIGATION_Result> GPIL_SP_FUMIGATION(string bATCHTEMPREF, ObjectParameter rESULT, ObjectParameter oUTPUT)
        {
            var bATCHTEMPREFParameter = bATCHTEMPREF != null ?
                new ObjectParameter("BATCHTEMPREF", bATCHTEMPREF) :
                new ObjectParameter("BATCHTEMPREF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GPIL_SP_FUMIGATION_Result>("GPIL_SP_FUMIGATION", bATCHTEMPREFParameter, rESULT, oUTPUT);
        }
    
        public virtual ObjectResult<GPIL_SP_GET_USER_PERMISSION_Result> GPIL_SP_GET_USER_PERMISSION(string empId)
        {
            var empIdParameter = empId != null ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GPIL_SP_GET_USER_PERMISSION_Result>("GPIL_SP_GET_USER_PERMISSION", empIdParameter);
        }
    
        public virtual int GPIL_SP_GRADING(string bATCHTEMPREF, ObjectParameter rESULT, ObjectParameter oUTPUT)
        {
            var bATCHTEMPREFParameter = bATCHTEMPREF != null ?
                new ObjectParameter("BATCHTEMPREF", bATCHTEMPREF) :
                new ObjectParameter("BATCHTEMPREF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GPIL_SP_GRADING", bATCHTEMPREFParameter, rESULT, oUTPUT);
        }
    
        public virtual int GPIL_SP_RECEIPT(string rECEIVEDSHIPMENTNO, string rECEIVEDBY, ObjectParameter rESULT, ObjectParameter oUTPUT)
        {
            var rECEIVEDSHIPMENTNOParameter = rECEIVEDSHIPMENTNO != null ?
                new ObjectParameter("RECEIVEDSHIPMENTNO", rECEIVEDSHIPMENTNO) :
                new ObjectParameter("RECEIVEDSHIPMENTNO", typeof(string));
    
            var rECEIVEDBYParameter = rECEIVEDBY != null ?
                new ObjectParameter("RECEIVEDBY", rECEIVEDBY) :
                new ObjectParameter("RECEIVEDBY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GPIL_SP_RECEIPT", rECEIVEDSHIPMENTNOParameter, rECEIVEDBYParameter, rESULT, oUTPUT);
        }
    
        public virtual int GPIL_SP_REDIRECT(string oLDSHIPMENTNO, string rEDIRECTORGN, string sENDBY, ObjectParameter rESULT, ObjectParameter oUTPUT)
        {
            var oLDSHIPMENTNOParameter = oLDSHIPMENTNO != null ?
                new ObjectParameter("OLDSHIPMENTNO", oLDSHIPMENTNO) :
                new ObjectParameter("OLDSHIPMENTNO", typeof(string));
    
            var rEDIRECTORGNParameter = rEDIRECTORGN != null ?
                new ObjectParameter("REDIRECTORGN", rEDIRECTORGN) :
                new ObjectParameter("REDIRECTORGN", typeof(string));
    
            var sENDBYParameter = sENDBY != null ?
                new ObjectParameter("SENDBY", sENDBY) :
                new ObjectParameter("SENDBY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GPIL_SP_REDIRECT", oLDSHIPMENTNOParameter, rEDIRECTORGNParameter, sENDBYParameter, rESULT, oUTPUT);
        }
    
        public virtual int GPIL_SP_SALES(string dISPATCHNO, ObjectParameter rESULT, ObjectParameter oUTPUT)
        {
            var dISPATCHNOParameter = dISPATCHNO != null ?
                new ObjectParameter("DISPATCHNO", dISPATCHNO) :
                new ObjectParameter("DISPATCHNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GPIL_SP_SALES", dISPATCHNOParameter, rESULT, oUTPUT);
        }
    
        public virtual int GPIL_SP_THRESHING(string bATCHTEMPREF, ObjectParameter rESULT, ObjectParameter oUTPUT)
        {
            var bATCHTEMPREFParameter = bATCHTEMPREF != null ?
                new ObjectParameter("BATCHTEMPREF", bATCHTEMPREF) :
                new ObjectParameter("BATCHTEMPREF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GPIL_SP_THRESHING", bATCHTEMPREFParameter, rESULT, oUTPUT);
        }
    
        public virtual int GPIL_SP_THRESHING_WMS_RECEIPT(string bATCHTEMPREF, ObjectParameter rESULT, ObjectParameter oUTPUT)
        {
            var bATCHTEMPREFParameter = bATCHTEMPREF != null ?
                new ObjectParameter("BATCHTEMPREF", bATCHTEMPREF) :
                new ObjectParameter("BATCHTEMPREF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GPIL_SP_THRESHING_WMS_RECEIPT", bATCHTEMPREFParameter, rESULT, oUTPUT);
        }
    
        public virtual int GradingIssueProcess(ObjectParameter sts)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GradingIssueProcess", sts);
        }
    
        public virtual int InsertItemCategoryMaster(string crop, string itemcode, string itemcategory, string itemdescription, string quantity)
        {
            var cropParameter = crop != null ?
                new ObjectParameter("crop", crop) :
                new ObjectParameter("crop", typeof(string));
    
            var itemcodeParameter = itemcode != null ?
                new ObjectParameter("itemcode", itemcode) :
                new ObjectParameter("itemcode", typeof(string));
    
            var itemcategoryParameter = itemcategory != null ?
                new ObjectParameter("itemcategory", itemcategory) :
                new ObjectParameter("itemcategory", typeof(string));
    
            var itemdescriptionParameter = itemdescription != null ?
                new ObjectParameter("itemdescription", itemdescription) :
                new ObjectParameter("itemdescription", typeof(string));
    
            var quantityParameter = quantity != null ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertItemCategoryMaster", cropParameter, itemcodeParameter, itemcategoryParameter, itemdescriptionParameter, quantityParameter);
        }
    
        public virtual int InsertItemMaster(string cROP, string vARIETY, string iTEM_CODE, string uOM, string dESC)
        {
            var cROPParameter = cROP != null ?
                new ObjectParameter("CROP", cROP) :
                new ObjectParameter("CROP", typeof(string));
    
            var vARIETYParameter = vARIETY != null ?
                new ObjectParameter("VARIETY", vARIETY) :
                new ObjectParameter("VARIETY", typeof(string));
    
            var iTEM_CODEParameter = iTEM_CODE != null ?
                new ObjectParameter("ITEM_CODE", iTEM_CODE) :
                new ObjectParameter("ITEM_CODE", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var dESCParameter = dESC != null ?
                new ObjectParameter("DESC", dESC) :
                new ObjectParameter("DESC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertItemMaster", cROPParameter, vARIETYParameter, iTEM_CODEParameter, uOMParameter, dESCParameter);
        }
    
        public virtual int InsertItemMaster1(string iTEM_CODE, string uOM, string dESC, string action)
        {
            var iTEM_CODEParameter = iTEM_CODE != null ?
                new ObjectParameter("ITEM_CODE", iTEM_CODE) :
                new ObjectParameter("ITEM_CODE", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var dESCParameter = dESC != null ?
                new ObjectParameter("DESC", dESC) :
                new ObjectParameter("DESC", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertItemMaster1", iTEM_CODEParameter, uOMParameter, dESCParameter, actionParameter);
        }
    
        public virtual int PO_RECEIPTS(string cROP, string pO_NO, string rECEIPT_NO, string iNVOICE_DATE, string sUPLIER, Nullable<double> tOTAL_AMOUNT, string gST_NO)
        {
            var cROPParameter = cROP != null ?
                new ObjectParameter("CROP", cROP) :
                new ObjectParameter("CROP", typeof(string));
    
            var pO_NOParameter = pO_NO != null ?
                new ObjectParameter("PO_NO", pO_NO) :
                new ObjectParameter("PO_NO", typeof(string));
    
            var rECEIPT_NOParameter = rECEIPT_NO != null ?
                new ObjectParameter("RECEIPT_NO", rECEIPT_NO) :
                new ObjectParameter("RECEIPT_NO", typeof(string));
    
            var iNVOICE_DATEParameter = iNVOICE_DATE != null ?
                new ObjectParameter("INVOICE_DATE", iNVOICE_DATE) :
                new ObjectParameter("INVOICE_DATE", typeof(string));
    
            var sUPLIERParameter = sUPLIER != null ?
                new ObjectParameter("SUPLIER", sUPLIER) :
                new ObjectParameter("SUPLIER", typeof(string));
    
            var tOTAL_AMOUNTParameter = tOTAL_AMOUNT.HasValue ?
                new ObjectParameter("TOTAL_AMOUNT", tOTAL_AMOUNT) :
                new ObjectParameter("TOTAL_AMOUNT", typeof(double));
    
            var gST_NOParameter = gST_NO != null ?
                new ObjectParameter("GST_NO", gST_NO) :
                new ObjectParameter("GST_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_RECEIPTS", cROPParameter, pO_NOParameter, rECEIPT_NOParameter, iNVOICE_DATEParameter, sUPLIERParameter, tOTAL_AMOUNTParameter, gST_NOParameter);
        }
    
        public virtual int PO_RECEIPTS_DETAILS(string pO_NO, string iTEM_CODE, string iNVOICE_NO, string sUBSIDY_TYPE, string iTEM_CATEGORY, Nullable<int> qUANTITY, Nullable<double> aMOUNT, Nullable<int> cGST_PERCENTAGE, Nullable<double> cGST_VALUE, Nullable<int> sGST_PERCENTAGE, Nullable<double> sGST_VALUE, Nullable<double> tOTAL_AMOUNT, Nullable<double> pRICE_PER_PIECE)
        {
            var pO_NOParameter = pO_NO != null ?
                new ObjectParameter("PO_NO", pO_NO) :
                new ObjectParameter("PO_NO", typeof(string));
    
            var iTEM_CODEParameter = iTEM_CODE != null ?
                new ObjectParameter("ITEM_CODE", iTEM_CODE) :
                new ObjectParameter("ITEM_CODE", typeof(string));
    
            var iNVOICE_NOParameter = iNVOICE_NO != null ?
                new ObjectParameter("INVOICE_NO", iNVOICE_NO) :
                new ObjectParameter("INVOICE_NO", typeof(string));
    
            var sUBSIDY_TYPEParameter = sUBSIDY_TYPE != null ?
                new ObjectParameter("SUBSIDY_TYPE", sUBSIDY_TYPE) :
                new ObjectParameter("SUBSIDY_TYPE", typeof(string));
    
            var iTEM_CATEGORYParameter = iTEM_CATEGORY != null ?
                new ObjectParameter("ITEM_CATEGORY", iTEM_CATEGORY) :
                new ObjectParameter("ITEM_CATEGORY", typeof(string));
    
            var qUANTITYParameter = qUANTITY.HasValue ?
                new ObjectParameter("QUANTITY", qUANTITY) :
                new ObjectParameter("QUANTITY", typeof(int));
    
            var aMOUNTParameter = aMOUNT.HasValue ?
                new ObjectParameter("AMOUNT", aMOUNT) :
                new ObjectParameter("AMOUNT", typeof(double));
    
            var cGST_PERCENTAGEParameter = cGST_PERCENTAGE.HasValue ?
                new ObjectParameter("CGST_PERCENTAGE", cGST_PERCENTAGE) :
                new ObjectParameter("CGST_PERCENTAGE", typeof(int));
    
            var cGST_VALUEParameter = cGST_VALUE.HasValue ?
                new ObjectParameter("CGST_VALUE", cGST_VALUE) :
                new ObjectParameter("CGST_VALUE", typeof(double));
    
            var sGST_PERCENTAGEParameter = sGST_PERCENTAGE.HasValue ?
                new ObjectParameter("SGST_PERCENTAGE", sGST_PERCENTAGE) :
                new ObjectParameter("SGST_PERCENTAGE", typeof(int));
    
            var sGST_VALUEParameter = sGST_VALUE.HasValue ?
                new ObjectParameter("SGST_VALUE", sGST_VALUE) :
                new ObjectParameter("SGST_VALUE", typeof(double));
    
            var tOTAL_AMOUNTParameter = tOTAL_AMOUNT.HasValue ?
                new ObjectParameter("TOTAL_AMOUNT", tOTAL_AMOUNT) :
                new ObjectParameter("TOTAL_AMOUNT", typeof(double));
    
            var pRICE_PER_PIECEParameter = pRICE_PER_PIECE.HasValue ?
                new ObjectParameter("PRICE_PER_PIECE", pRICE_PER_PIECE) :
                new ObjectParameter("PRICE_PER_PIECE", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PO_RECEIPTS_DETAILS", pO_NOParameter, iTEM_CODEParameter, iNVOICE_NOParameter, sUBSIDY_TYPEParameter, iTEM_CATEGORYParameter, qUANTITYParameter, aMOUNTParameter, cGST_PERCENTAGEParameter, cGST_VALUEParameter, sGST_PERCENTAGEParameter, sGST_VALUEParameter, tOTAL_AMOUNTParameter, pRICE_PER_PIECEParameter);
        }
    
        public virtual int RedirectShipmentNo(string refNo, string sndorgcd, string recevorgcd, string sendby, ObjectParameter status)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("refNo", refNo) :
                new ObjectParameter("refNo", typeof(string));
    
            var sndorgcdParameter = sndorgcd != null ?
                new ObjectParameter("sndorgcd", sndorgcd) :
                new ObjectParameter("sndorgcd", typeof(string));
    
            var recevorgcdParameter = recevorgcd != null ?
                new ObjectParameter("recevorgcd", recevorgcd) :
                new ObjectParameter("recevorgcd", typeof(string));
    
            var sendbyParameter = sendby != null ?
                new ObjectParameter("sendby", sendby) :
                new ObjectParameter("sendby", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RedirectShipmentNo", refNoParameter, sndorgcdParameter, recevorgcdParameter, sendbyParameter, status);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_CREATE_GRADETRANSFER(string oRGBATCHNO, string oRGCD, string rECIPE, ObjectParameter sTATUS)
        {
            var oRGBATCHNOParameter = oRGBATCHNO != null ?
                new ObjectParameter("ORGBATCHNO", oRGBATCHNO) :
                new ObjectParameter("ORGBATCHNO", typeof(string));
    
            var oRGCDParameter = oRGCD != null ?
                new ObjectParameter("ORGCD", oRGCD) :
                new ObjectParameter("ORGCD", typeof(string));
    
            var rECIPEParameter = rECIPE != null ?
                new ObjectParameter("RECIPE", rECIPE) :
                new ObjectParameter("RECIPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_GRADETRANSFER", oRGBATCHNOParameter, oRGCDParameter, rECIPEParameter, sTATUS);
        }
    
        public virtual int SP_CREATE_GRADNGBATCH(string rEFBATCNO, string gRDBATCNO, string oRGCD, string gRADE, string sTATUS)
        {
            var rEFBATCNOParameter = rEFBATCNO != null ?
                new ObjectParameter("REFBATCNO", rEFBATCNO) :
                new ObjectParameter("REFBATCNO", typeof(string));
    
            var gRDBATCNOParameter = gRDBATCNO != null ?
                new ObjectParameter("GRDBATCNO", gRDBATCNO) :
                new ObjectParameter("GRDBATCNO", typeof(string));
    
            var oRGCDParameter = oRGCD != null ?
                new ObjectParameter("ORGCD", oRGCD) :
                new ObjectParameter("ORGCD", typeof(string));
    
            var gRADEParameter = gRADE != null ?
                new ObjectParameter("GRADE", gRADE) :
                new ObjectParameter("GRADE", typeof(string));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_GRADNGBATCH", rEFBATCNOParameter, gRDBATCNOParameter, oRGCDParameter, gRADEParameter, sTATUSParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<sp_DownloadData_Result> sp_DownloadData(string locCode)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DownloadData_Result>("sp_DownloadData", locCodeParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_ERPInterface_Result> sp_ERPInterface(string locCode, Nullable<int> pickListNo, Nullable<int> lP5No)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var pickListNoParameter = pickListNo.HasValue ?
                new ObjectParameter("PickListNo", pickListNo) :
                new ObjectParameter("PickListNo", typeof(int));
    
            var lP5NoParameter = lP5No.HasValue ?
                new ObjectParameter("LP5No", lP5No) :
                new ObjectParameter("LP5No", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ERPInterface_Result>("sp_ERPInterface", locCodeParameter, pickListNoParameter, lP5NoParameter);
        }
    
        public virtual int sp_ErrorLog_Ins(string locCode, string userName, string formName, string eventName, string sqlQuery, string errorMsg)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var formNameParameter = formName != null ?
                new ObjectParameter("FormName", formName) :
                new ObjectParameter("FormName", typeof(string));
    
            var eventNameParameter = eventName != null ?
                new ObjectParameter("EventName", eventName) :
                new ObjectParameter("EventName", typeof(string));
    
            var sqlQueryParameter = sqlQuery != null ?
                new ObjectParameter("SqlQuery", sqlQuery) :
                new ObjectParameter("SqlQuery", typeof(string));
    
            var errorMsgParameter = errorMsg != null ?
                new ObjectParameter("ErrorMsg", errorMsg) :
                new ObjectParameter("ErrorMsg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ErrorLog_Ins", locCodeParameter, userNameParameter, formNameParameter, eventNameParameter, sqlQueryParameter, errorMsgParameter);
        }
    
        public virtual ObjectResult<SP_GetMasterDetails_Result> SP_GetMasterDetails(string flag, string orgnType, string orgnCode)
        {
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            var orgnTypeParameter = orgnType != null ?
                new ObjectParameter("OrgnType", orgnType) :
                new ObjectParameter("OrgnType", typeof(string));
    
            var orgnCodeParameter = orgnCode != null ?
                new ObjectParameter("OrgnCode", orgnCode) :
                new ObjectParameter("OrgnCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetMasterDetails_Result>("SP_GetMasterDetails", flagParameter, orgnTypeParameter, orgnCodeParameter);
        }
    
        public virtual ObjectResult<sp_GetStockStatus_Result> sp_GetStockStatus(string locCode)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetStockStatus_Result>("sp_GetStockStatus", locCodeParameter);
        }
    
        public virtual ObjectResult<Sp_GetUserDetails_Result> Sp_GetUserDetails(Nullable<int> action, string iD)
        {
            var actionParameter = action.HasValue ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(int));
    
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetUserDetails_Result>("Sp_GetUserDetails", actionParameter, iDParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_InsertHeaderID(Nullable<int> action, string headerID, string organizationCode, string purchaseType, string buyerCode, string purchaseDocNo, string dateOfPurchase, string crop, string variety, string createdBy, string createdDate, string status)
        {
            var actionParameter = action.HasValue ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(int));
    
            var headerIDParameter = headerID != null ?
                new ObjectParameter("HeaderID", headerID) :
                new ObjectParameter("HeaderID", typeof(string));
    
            var organizationCodeParameter = organizationCode != null ?
                new ObjectParameter("OrganizationCode", organizationCode) :
                new ObjectParameter("OrganizationCode", typeof(string));
    
            var purchaseTypeParameter = purchaseType != null ?
                new ObjectParameter("PurchaseType", purchaseType) :
                new ObjectParameter("PurchaseType", typeof(string));
    
            var buyerCodeParameter = buyerCode != null ?
                new ObjectParameter("BuyerCode", buyerCode) :
                new ObjectParameter("BuyerCode", typeof(string));
    
            var purchaseDocNoParameter = purchaseDocNo != null ?
                new ObjectParameter("PurchaseDocNo", purchaseDocNo) :
                new ObjectParameter("PurchaseDocNo", typeof(string));
    
            var dateOfPurchaseParameter = dateOfPurchase != null ?
                new ObjectParameter("DateOfPurchase", dateOfPurchase) :
                new ObjectParameter("DateOfPurchase", typeof(string));
    
            var cropParameter = crop != null ?
                new ObjectParameter("Crop", crop) :
                new ObjectParameter("Crop", typeof(string));
    
            var varietyParameter = variety != null ?
                new ObjectParameter("Variety", variety) :
                new ObjectParameter("Variety", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var createdDateParameter = createdDate != null ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertHeaderID", actionParameter, headerIDParameter, organizationCodeParameter, purchaseTypeParameter, buyerCodeParameter, purchaseDocNoParameter, dateOfPurchaseParameter, cropParameter, varietyParameter, createdByParameter, createdDateParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_mChemicalDetails_Sel_Result> sp_mChemicalDetails_Sel(string gradeName, string caseCode)
        {
            var gradeNameParameter = gradeName != null ?
                new ObjectParameter("GradeName", gradeName) :
                new ObjectParameter("GradeName", typeof(string));
    
            var caseCodeParameter = caseCode != null ?
                new ObjectParameter("CaseCode", caseCode) :
                new ObjectParameter("CaseCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_mChemicalDetails_Sel_Result>("sp_mChemicalDetails_Sel", gradeNameParameter, caseCodeParameter);
        }
    
        public virtual ObjectResult<sp_mCropYears_Result> sp_mCropYears(string cropYearName)
        {
            var cropYearNameParameter = cropYearName != null ?
                new ObjectParameter("CropYearName", cropYearName) :
                new ObjectParameter("CropYearName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_mCropYears_Result>("sp_mCropYears", cropYearNameParameter);
        }
    
        public virtual int sp_mTbl_AllRows(string tblName)
        {
            var tblNameParameter = tblName != null ?
                new ObjectParameter("TblName", tblName) :
                new ObjectParameter("TblName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_mTbl_AllRows", tblNameParameter);
        }
    
        public virtual ObjectResult<sp_mUser_UpdPwd_Result> sp_mUser_UpdPwd(string locCode, string userName, string oldPwd, string newPwd, string modifiedBy, Nullable<bool> resetPwd)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var oldPwdParameter = oldPwd != null ?
                new ObjectParameter("OldPwd", oldPwd) :
                new ObjectParameter("OldPwd", typeof(string));
    
            var newPwdParameter = newPwd != null ?
                new ObjectParameter("NewPwd", newPwd) :
                new ObjectParameter("NewPwd", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            var resetPwdParameter = resetPwd.HasValue ?
                new ObjectParameter("ResetPwd", resetPwd) :
                new ObjectParameter("ResetPwd", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_mUser_UpdPwd_Result>("sp_mUser_UpdPwd", locCodeParameter, userNameParameter, oldPwdParameter, newPwdParameter, modifiedByParameter, resetPwdParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_SaveFarmer(string farmCode, string farmName, string fatherName, string villageCode, string soilType, string addr1, string addr2, string addr3, string addr4, string addr5, string addr6, string country, string pinCode, string telNo, string mobile, string mail, string accNo, string bank, string branch, string ifscCode, string userId)
        {
            var farmCodeParameter = farmCode != null ?
                new ObjectParameter("FarmCode", farmCode) :
                new ObjectParameter("FarmCode", typeof(string));
    
            var farmNameParameter = farmName != null ?
                new ObjectParameter("FarmName", farmName) :
                new ObjectParameter("FarmName", typeof(string));
    
            var fatherNameParameter = fatherName != null ?
                new ObjectParameter("FatherName", fatherName) :
                new ObjectParameter("FatherName", typeof(string));
    
            var villageCodeParameter = villageCode != null ?
                new ObjectParameter("VillageCode", villageCode) :
                new ObjectParameter("VillageCode", typeof(string));
    
            var soilTypeParameter = soilType != null ?
                new ObjectParameter("SoilType", soilType) :
                new ObjectParameter("SoilType", typeof(string));
    
            var addr1Parameter = addr1 != null ?
                new ObjectParameter("Addr1", addr1) :
                new ObjectParameter("Addr1", typeof(string));
    
            var addr2Parameter = addr2 != null ?
                new ObjectParameter("Addr2", addr2) :
                new ObjectParameter("Addr2", typeof(string));
    
            var addr3Parameter = addr3 != null ?
                new ObjectParameter("Addr3", addr3) :
                new ObjectParameter("Addr3", typeof(string));
    
            var addr4Parameter = addr4 != null ?
                new ObjectParameter("Addr4", addr4) :
                new ObjectParameter("Addr4", typeof(string));
    
            var addr5Parameter = addr5 != null ?
                new ObjectParameter("Addr5", addr5) :
                new ObjectParameter("Addr5", typeof(string));
    
            var addr6Parameter = addr6 != null ?
                new ObjectParameter("Addr6", addr6) :
                new ObjectParameter("Addr6", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var pinCodeParameter = pinCode != null ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(string));
    
            var telNoParameter = telNo != null ?
                new ObjectParameter("TelNo", telNo) :
                new ObjectParameter("TelNo", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            var accNoParameter = accNo != null ?
                new ObjectParameter("AccNo", accNo) :
                new ObjectParameter("AccNo", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var ifscCodeParameter = ifscCode != null ?
                new ObjectParameter("IfscCode", ifscCode) :
                new ObjectParameter("IfscCode", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SaveFarmer", farmCodeParameter, farmNameParameter, fatherNameParameter, villageCodeParameter, soilTypeParameter, addr1Parameter, addr2Parameter, addr3Parameter, addr4Parameter, addr5Parameter, addr6Parameter, countryParameter, pinCodeParameter, telNoParameter, mobileParameter, mailParameter, accNoParameter, bankParameter, branchParameter, ifscCodeParameter, userIdParameter);
        }
    
        public virtual int sp_SaveFarmerCropHistory(string hisCode, string farmCode, string crop, string variety, string mobile, string mail, string accNo, string bank, string branch, string ifscCode, string userId)
        {
            var hisCodeParameter = hisCode != null ?
                new ObjectParameter("HisCode", hisCode) :
                new ObjectParameter("HisCode", typeof(string));
    
            var farmCodeParameter = farmCode != null ?
                new ObjectParameter("FarmCode", farmCode) :
                new ObjectParameter("FarmCode", typeof(string));
    
            var cropParameter = crop != null ?
                new ObjectParameter("Crop", crop) :
                new ObjectParameter("Crop", typeof(string));
    
            var varietyParameter = variety != null ?
                new ObjectParameter("Variety", variety) :
                new ObjectParameter("Variety", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            var accNoParameter = accNo != null ?
                new ObjectParameter("AccNo", accNo) :
                new ObjectParameter("AccNo", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var ifscCodeParameter = ifscCode != null ?
                new ObjectParameter("IfscCode", ifscCode) :
                new ObjectParameter("IfscCode", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SaveFarmerCropHistory", hisCodeParameter, farmCodeParameter, cropParameter, varietyParameter, mobileParameter, mailParameter, accNoParameter, bankParameter, branchParameter, ifscCodeParameter, userIdParameter);
        }
    
        public virtual int SP_SPECIAL_GRADING(ObjectParameter sts)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SPECIAL_GRADING", sts);
        }
    
        public virtual int SP_SPECIAL_GRADING_BATCH(string splgrdbacth, ObjectParameter sts)
        {
            var splgrdbacthParameter = splgrdbacth != null ?
                new ObjectParameter("splgrdbacth", splgrdbacth) :
                new ObjectParameter("splgrdbacth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SPECIAL_GRADING_BATCH", splgrdbacthParameter, sts);
        }
    
        public virtual ObjectResult<sp_tBarcodeDetails_CaseBarcode_Result> sp_tBarcodeDetails_CaseBarcode(string locCode, string caseBarCode)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var caseBarCodeParameter = caseBarCode != null ?
                new ObjectParameter("CaseBarCode", caseBarCode) :
                new ObjectParameter("CaseBarCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tBarcodeDetails_CaseBarcode_Result>("sp_tBarcodeDetails_CaseBarcode", locCodeParameter, caseBarCodeParameter);
        }
    
        public virtual ObjectResult<string> sp_tBarcodeDetails_CaseNo(string yearCode, string pMRunNo)
        {
            var yearCodeParameter = yearCode != null ?
                new ObjectParameter("YearCode", yearCode) :
                new ObjectParameter("YearCode", typeof(string));
    
            var pMRunNoParameter = pMRunNo != null ?
                new ObjectParameter("PMRunNo", pMRunNo) :
                new ObjectParameter("PMRunNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_tBarcodeDetails_CaseNo", yearCodeParameter, pMRunNoParameter);
        }
    
        public virtual ObjectResult<sp_tBarcodeDetails_Chk_Result> sp_tBarcodeDetails_Chk(string locCode, string cropYearCode, string pMRunNo, string caseNo, string gradeCode)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var cropYearCodeParameter = cropYearCode != null ?
                new ObjectParameter("CropYearCode", cropYearCode) :
                new ObjectParameter("CropYearCode", typeof(string));
    
            var pMRunNoParameter = pMRunNo != null ?
                new ObjectParameter("PMRunNo", pMRunNo) :
                new ObjectParameter("PMRunNo", typeof(string));
    
            var caseNoParameter = caseNo != null ?
                new ObjectParameter("CaseNo", caseNo) :
                new ObjectParameter("CaseNo", typeof(string));
    
            var gradeCodeParameter = gradeCode != null ?
                new ObjectParameter("GradeCode", gradeCode) :
                new ObjectParameter("GradeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tBarcodeDetails_Chk_Result>("sp_tBarcodeDetails_Chk", locCodeParameter, cropYearCodeParameter, pMRunNoParameter, caseNoParameter, gradeCodeParameter);
        }
    
        public virtual int sp_tBarcodeDetails_Ins(string locCode, string cropYearCode, string pMRunNo, string caseNo, string accCaseNo, string labelType, string gradeCode, string caseCode, string varietyCode, string supplierCode, string countryCode, string moisture, string grossWeight, string netWeight, Nullable<byte> status, string printedBy, Nullable<bool> isPSW, string caseBarCode, Nullable<bool> isExistingStock, Nullable<byte> d_Stts, string dateOfPacking)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var cropYearCodeParameter = cropYearCode != null ?
                new ObjectParameter("CropYearCode", cropYearCode) :
                new ObjectParameter("CropYearCode", typeof(string));
    
            var pMRunNoParameter = pMRunNo != null ?
                new ObjectParameter("PMRunNo", pMRunNo) :
                new ObjectParameter("PMRunNo", typeof(string));
    
            var caseNoParameter = caseNo != null ?
                new ObjectParameter("CaseNo", caseNo) :
                new ObjectParameter("CaseNo", typeof(string));
    
            var accCaseNoParameter = accCaseNo != null ?
                new ObjectParameter("AccCaseNo", accCaseNo) :
                new ObjectParameter("AccCaseNo", typeof(string));
    
            var labelTypeParameter = labelType != null ?
                new ObjectParameter("LabelType", labelType) :
                new ObjectParameter("LabelType", typeof(string));
    
            var gradeCodeParameter = gradeCode != null ?
                new ObjectParameter("GradeCode", gradeCode) :
                new ObjectParameter("GradeCode", typeof(string));
    
            var caseCodeParameter = caseCode != null ?
                new ObjectParameter("CaseCode", caseCode) :
                new ObjectParameter("CaseCode", typeof(string));
    
            var varietyCodeParameter = varietyCode != null ?
                new ObjectParameter("VarietyCode", varietyCode) :
                new ObjectParameter("VarietyCode", typeof(string));
    
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var moistureParameter = moisture != null ?
                new ObjectParameter("Moisture", moisture) :
                new ObjectParameter("Moisture", typeof(string));
    
            var grossWeightParameter = grossWeight != null ?
                new ObjectParameter("GrossWeight", grossWeight) :
                new ObjectParameter("GrossWeight", typeof(string));
    
            var netWeightParameter = netWeight != null ?
                new ObjectParameter("NetWeight", netWeight) :
                new ObjectParameter("NetWeight", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var printedByParameter = printedBy != null ?
                new ObjectParameter("PrintedBy", printedBy) :
                new ObjectParameter("PrintedBy", typeof(string));
    
            var isPSWParameter = isPSW.HasValue ?
                new ObjectParameter("IsPSW", isPSW) :
                new ObjectParameter("IsPSW", typeof(bool));
    
            var caseBarCodeParameter = caseBarCode != null ?
                new ObjectParameter("CaseBarCode", caseBarCode) :
                new ObjectParameter("CaseBarCode", typeof(string));
    
            var isExistingStockParameter = isExistingStock.HasValue ?
                new ObjectParameter("IsExistingStock", isExistingStock) :
                new ObjectParameter("IsExistingStock", typeof(bool));
    
            var d_SttsParameter = d_Stts.HasValue ?
                new ObjectParameter("D_Stts", d_Stts) :
                new ObjectParameter("D_Stts", typeof(byte));
    
            var dateOfPackingParameter = dateOfPacking != null ?
                new ObjectParameter("DateOfPacking", dateOfPacking) :
                new ObjectParameter("DateOfPacking", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tBarcodeDetails_Ins", locCodeParameter, cropYearCodeParameter, pMRunNoParameter, caseNoParameter, accCaseNoParameter, labelTypeParameter, gradeCodeParameter, caseCodeParameter, varietyCodeParameter, supplierCodeParameter, countryCodeParameter, moistureParameter, grossWeightParameter, netWeightParameter, statusParameter, printedByParameter, isPSWParameter, caseBarCodeParameter, isExistingStockParameter, d_SttsParameter, dateOfPackingParameter);
        }
    
        public virtual ObjectResult<string> sp_tBarcodeDetails_RunNo(string yearCode)
        {
            var yearCodeParameter = yearCode != null ?
                new ObjectParameter("YearCode", yearCode) :
                new ObjectParameter("YearCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_tBarcodeDetails_RunNo", yearCodeParameter);
        }
    
        public virtual int sp_tBarcodeDetails_Transfer(string locCode, string cropYearCode, string pMRunNo, string caseNo, string newPMRunNo, string newCaseNo, string newAccCaseNo, string labelType, string gradeCode, string caseCode, string varietyCode, string moisture, string grossWeight, string netWeight, string newCropYearCode, string newGradeCode, string newVarietyCode, string modifiedBy, Nullable<byte> status, string caseBarcode, string voidBarcode)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var cropYearCodeParameter = cropYearCode != null ?
                new ObjectParameter("CropYearCode", cropYearCode) :
                new ObjectParameter("CropYearCode", typeof(string));
    
            var pMRunNoParameter = pMRunNo != null ?
                new ObjectParameter("PMRunNo", pMRunNo) :
                new ObjectParameter("PMRunNo", typeof(string));
    
            var caseNoParameter = caseNo != null ?
                new ObjectParameter("CaseNo", caseNo) :
                new ObjectParameter("CaseNo", typeof(string));
    
            var newPMRunNoParameter = newPMRunNo != null ?
                new ObjectParameter("NewPMRunNo", newPMRunNo) :
                new ObjectParameter("NewPMRunNo", typeof(string));
    
            var newCaseNoParameter = newCaseNo != null ?
                new ObjectParameter("NewCaseNo", newCaseNo) :
                new ObjectParameter("NewCaseNo", typeof(string));
    
            var newAccCaseNoParameter = newAccCaseNo != null ?
                new ObjectParameter("NewAccCaseNo", newAccCaseNo) :
                new ObjectParameter("NewAccCaseNo", typeof(string));
    
            var labelTypeParameter = labelType != null ?
                new ObjectParameter("LabelType", labelType) :
                new ObjectParameter("LabelType", typeof(string));
    
            var gradeCodeParameter = gradeCode != null ?
                new ObjectParameter("GradeCode", gradeCode) :
                new ObjectParameter("GradeCode", typeof(string));
    
            var caseCodeParameter = caseCode != null ?
                new ObjectParameter("CaseCode", caseCode) :
                new ObjectParameter("CaseCode", typeof(string));
    
            var varietyCodeParameter = varietyCode != null ?
                new ObjectParameter("VarietyCode", varietyCode) :
                new ObjectParameter("VarietyCode", typeof(string));
    
            var moistureParameter = moisture != null ?
                new ObjectParameter("Moisture", moisture) :
                new ObjectParameter("Moisture", typeof(string));
    
            var grossWeightParameter = grossWeight != null ?
                new ObjectParameter("GrossWeight", grossWeight) :
                new ObjectParameter("GrossWeight", typeof(string));
    
            var netWeightParameter = netWeight != null ?
                new ObjectParameter("NetWeight", netWeight) :
                new ObjectParameter("NetWeight", typeof(string));
    
            var newCropYearCodeParameter = newCropYearCode != null ?
                new ObjectParameter("NewCropYearCode", newCropYearCode) :
                new ObjectParameter("NewCropYearCode", typeof(string));
    
            var newGradeCodeParameter = newGradeCode != null ?
                new ObjectParameter("NewGradeCode", newGradeCode) :
                new ObjectParameter("NewGradeCode", typeof(string));
    
            var newVarietyCodeParameter = newVarietyCode != null ?
                new ObjectParameter("NewVarietyCode", newVarietyCode) :
                new ObjectParameter("NewVarietyCode", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var caseBarcodeParameter = caseBarcode != null ?
                new ObjectParameter("CaseBarcode", caseBarcode) :
                new ObjectParameter("CaseBarcode", typeof(string));
    
            var voidBarcodeParameter = voidBarcode != null ?
                new ObjectParameter("VoidBarcode", voidBarcode) :
                new ObjectParameter("VoidBarcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tBarcodeDetails_Transfer", locCodeParameter, cropYearCodeParameter, pMRunNoParameter, caseNoParameter, newPMRunNoParameter, newCaseNoParameter, newAccCaseNoParameter, labelTypeParameter, gradeCodeParameter, caseCodeParameter, varietyCodeParameter, moistureParameter, grossWeightParameter, netWeightParameter, newCropYearCodeParameter, newGradeCodeParameter, newVarietyCodeParameter, modifiedByParameter, statusParameter, caseBarcodeParameter, voidBarcodeParameter);
        }
    
        public virtual int sp_tCaseDetail_TempPickListNo_Upd(string locCode, Nullable<int> tempPickListNo, string gradeCode, Nullable<int> noOfCases, string stts)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var tempPickListNoParameter = tempPickListNo.HasValue ?
                new ObjectParameter("TempPickListNo", tempPickListNo) :
                new ObjectParameter("TempPickListNo", typeof(int));
    
            var gradeCodeParameter = gradeCode != null ?
                new ObjectParameter("GradeCode", gradeCode) :
                new ObjectParameter("GradeCode", typeof(string));
    
            var noOfCasesParameter = noOfCases.HasValue ?
                new ObjectParameter("NoOfCases", noOfCases) :
                new ObjectParameter("NoOfCases", typeof(int));
    
            var sttsParameter = stts != null ?
                new ObjectParameter("Stts", stts) :
                new ObjectParameter("Stts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tCaseDetail_TempPickListNo_Upd", locCodeParameter, tempPickListNoParameter, gradeCodeParameter, noOfCasesParameter, sttsParameter);
        }
    
        public virtual ObjectResult<sp_tCaseDetails_CaseBarcode_Result> sp_tCaseDetails_CaseBarcode(string locCode, string caseBarCode)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var caseBarCodeParameter = caseBarCode != null ?
                new ObjectParameter("CaseBarCode", caseBarCode) :
                new ObjectParameter("CaseBarCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tCaseDetails_CaseBarcode_Result>("sp_tCaseDetails_CaseBarcode", locCodeParameter, caseBarCodeParameter);
        }
    
        public virtual ObjectResult<sp_tCaseDetails_Fum_Result> sp_tCaseDetails_Fum(string locCode, string queryType)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var queryTypeParameter = queryType != null ?
                new ObjectParameter("QueryType", queryType) :
                new ObjectParameter("QueryType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tCaseDetails_Fum_Result>("sp_tCaseDetails_Fum", locCodeParameter, queryTypeParameter);
        }
    
        public virtual ObjectResult<sp_tCaseDetails_Ins_Result> sp_tCaseDetails_Ins(string locCode, string caseBarCode, string toLocCode, Nullable<byte> status, Nullable<bool> isExistingStock, Nullable<byte> d_Stts)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var caseBarCodeParameter = caseBarCode != null ?
                new ObjectParameter("CaseBarCode", caseBarCode) :
                new ObjectParameter("CaseBarCode", typeof(string));
    
            var toLocCodeParameter = toLocCode != null ?
                new ObjectParameter("ToLocCode", toLocCode) :
                new ObjectParameter("ToLocCode", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var isExistingStockParameter = isExistingStock.HasValue ?
                new ObjectParameter("IsExistingStock", isExistingStock) :
                new ObjectParameter("IsExistingStock", typeof(bool));
    
            var d_SttsParameter = d_Stts.HasValue ?
                new ObjectParameter("D_Stts", d_Stts) :
                new ObjectParameter("D_Stts", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tCaseDetails_Ins_Result>("sp_tCaseDetails_Ins", locCodeParameter, caseBarCodeParameter, toLocCodeParameter, statusParameter, isExistingStockParameter, d_SttsParameter);
        }
    
        public virtual ObjectResult<sp_tCaseDetails_LP5No_Result> sp_tCaseDetails_LP5No(string locCode, Nullable<int> pickListNo, Nullable<int> lP5No)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var pickListNoParameter = pickListNo.HasValue ?
                new ObjectParameter("PickListNo", pickListNo) :
                new ObjectParameter("PickListNo", typeof(int));
    
            var lP5NoParameter = lP5No.HasValue ?
                new ObjectParameter("LP5No", lP5No) :
                new ObjectParameter("LP5No", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tCaseDetails_LP5No_Result>("sp_tCaseDetails_LP5No", locCodeParameter, pickListNoParameter, lP5NoParameter);
        }
    
        public virtual ObjectResult<sp_tCaseDetails_PickListNo_Result> sp_tCaseDetails_PickListNo(string locCode, Nullable<int> pickListNo, Nullable<byte> status)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var pickListNoParameter = pickListNo.HasValue ?
                new ObjectParameter("PickListNo", pickListNo) :
                new ObjectParameter("PickListNo", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tCaseDetails_PickListNo_Result>("sp_tCaseDetails_PickListNo", locCodeParameter, pickListNoParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_tCaseDetails_Sel_Result> sp_tCaseDetails_Sel(string locCode, Nullable<int> pickListNo, Nullable<int> lP5No, string cropYearCode, string gradeCode, string caseCode, string varietyCode)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var pickListNoParameter = pickListNo.HasValue ?
                new ObjectParameter("PickListNo", pickListNo) :
                new ObjectParameter("PickListNo", typeof(int));
    
            var lP5NoParameter = lP5No.HasValue ?
                new ObjectParameter("LP5No", lP5No) :
                new ObjectParameter("LP5No", typeof(int));
    
            var cropYearCodeParameter = cropYearCode != null ?
                new ObjectParameter("CropYearCode", cropYearCode) :
                new ObjectParameter("CropYearCode", typeof(string));
    
            var gradeCodeParameter = gradeCode != null ?
                new ObjectParameter("GradeCode", gradeCode) :
                new ObjectParameter("GradeCode", typeof(string));
    
            var caseCodeParameter = caseCode != null ?
                new ObjectParameter("CaseCode", caseCode) :
                new ObjectParameter("CaseCode", typeof(string));
    
            var varietyCodeParameter = varietyCode != null ?
                new ObjectParameter("VarietyCode", varietyCode) :
                new ObjectParameter("VarietyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tCaseDetails_Sel_Result>("sp_tCaseDetails_Sel", locCodeParameter, pickListNoParameter, lP5NoParameter, cropYearCodeParameter, gradeCodeParameter, caseCodeParameter, varietyCodeParameter);
        }
    
        public virtual int sp_tCaseDetails_Upd(string locCode, string stackID, string caseBarCode, Nullable<int> pickListNo, Nullable<byte> status, string putawayBy, Nullable<int> fumEndOn, Nullable<int> fumExpiredOn, string fumigatedBy, string stts)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var stackIDParameter = stackID != null ?
                new ObjectParameter("StackID", stackID) :
                new ObjectParameter("StackID", typeof(string));
    
            var caseBarCodeParameter = caseBarCode != null ?
                new ObjectParameter("CaseBarCode", caseBarCode) :
                new ObjectParameter("CaseBarCode", typeof(string));
    
            var pickListNoParameter = pickListNo.HasValue ?
                new ObjectParameter("PickListNo", pickListNo) :
                new ObjectParameter("PickListNo", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var putawayByParameter = putawayBy != null ?
                new ObjectParameter("PutawayBy", putawayBy) :
                new ObjectParameter("PutawayBy", typeof(string));
    
            var fumEndOnParameter = fumEndOn.HasValue ?
                new ObjectParameter("FumEndOn", fumEndOn) :
                new ObjectParameter("FumEndOn", typeof(int));
    
            var fumExpiredOnParameter = fumExpiredOn.HasValue ?
                new ObjectParameter("FumExpiredOn", fumExpiredOn) :
                new ObjectParameter("FumExpiredOn", typeof(int));
    
            var fumigatedByParameter = fumigatedBy != null ?
                new ObjectParameter("FumigatedBy", fumigatedBy) :
                new ObjectParameter("FumigatedBy", typeof(string));
    
            var sttsParameter = stts != null ?
                new ObjectParameter("Stts", stts) :
                new ObjectParameter("Stts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tCaseDetails_Upd", locCodeParameter, stackIDParameter, caseBarCodeParameter, pickListNoParameter, statusParameter, putawayByParameter, fumEndOnParameter, fumExpiredOnParameter, fumigatedByParameter, sttsParameter);
        }
    
        public virtual int sp_tDispatchDetails_Ins(string locCode, Nullable<int> pickListNo, Nullable<int> lP5No, string lRNo, Nullable<System.DateTime> lRDate, string transporterCode, string truckNo, string toLocCode, string aWBNo, Nullable<bool> isLP5Note, string remarks, string dispatchedBy)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var pickListNoParameter = pickListNo.HasValue ?
                new ObjectParameter("PickListNo", pickListNo) :
                new ObjectParameter("PickListNo", typeof(int));
    
            var lP5NoParameter = lP5No.HasValue ?
                new ObjectParameter("LP5No", lP5No) :
                new ObjectParameter("LP5No", typeof(int));
    
            var lRNoParameter = lRNo != null ?
                new ObjectParameter("LRNo", lRNo) :
                new ObjectParameter("LRNo", typeof(string));
    
            var lRDateParameter = lRDate.HasValue ?
                new ObjectParameter("LRDate", lRDate) :
                new ObjectParameter("LRDate", typeof(System.DateTime));
    
            var transporterCodeParameter = transporterCode != null ?
                new ObjectParameter("TransporterCode", transporterCode) :
                new ObjectParameter("TransporterCode", typeof(string));
    
            var truckNoParameter = truckNo != null ?
                new ObjectParameter("TruckNo", truckNo) :
                new ObjectParameter("TruckNo", typeof(string));
    
            var toLocCodeParameter = toLocCode != null ?
                new ObjectParameter("ToLocCode", toLocCode) :
                new ObjectParameter("ToLocCode", typeof(string));
    
            var aWBNoParameter = aWBNo != null ?
                new ObjectParameter("AWBNo", aWBNo) :
                new ObjectParameter("AWBNo", typeof(string));
    
            var isLP5NoteParameter = isLP5Note.HasValue ?
                new ObjectParameter("IsLP5Note", isLP5Note) :
                new ObjectParameter("IsLP5Note", typeof(bool));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var dispatchedByParameter = dispatchedBy != null ?
                new ObjectParameter("DispatchedBy", dispatchedBy) :
                new ObjectParameter("DispatchedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tDispatchDetails_Ins", locCodeParameter, pickListNoParameter, lP5NoParameter, lRNoParameter, lRDateParameter, transporterCodeParameter, truckNoParameter, toLocCodeParameter, aWBNoParameter, isLP5NoteParameter, remarksParameter, dispatchedByParameter);
        }
    
        public virtual int sp_tDispatchNote_Ins(string locCode, Nullable<int> pickListNo, string pickerCode, string dispatchType, string toLocCode, string gradeCodes, string casesPerGrade, string plannedBy)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var pickListNoParameter = pickListNo.HasValue ?
                new ObjectParameter("PickListNo", pickListNo) :
                new ObjectParameter("PickListNo", typeof(int));
    
            var pickerCodeParameter = pickerCode != null ?
                new ObjectParameter("PickerCode", pickerCode) :
                new ObjectParameter("PickerCode", typeof(string));
    
            var dispatchTypeParameter = dispatchType != null ?
                new ObjectParameter("DispatchType", dispatchType) :
                new ObjectParameter("DispatchType", typeof(string));
    
            var toLocCodeParameter = toLocCode != null ?
                new ObjectParameter("ToLocCode", toLocCode) :
                new ObjectParameter("ToLocCode", typeof(string));
    
            var gradeCodesParameter = gradeCodes != null ?
                new ObjectParameter("GradeCodes", gradeCodes) :
                new ObjectParameter("GradeCodes", typeof(string));
    
            var casesPerGradeParameter = casesPerGrade != null ?
                new ObjectParameter("CasesPerGrade", casesPerGrade) :
                new ObjectParameter("CasesPerGrade", typeof(string));
    
            var plannedByParameter = plannedBy != null ?
                new ObjectParameter("PlannedBy", plannedBy) :
                new ObjectParameter("PlannedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tDispatchNote_Ins", locCodeParameter, pickListNoParameter, pickerCodeParameter, dispatchTypeParameter, toLocCodeParameter, gradeCodesParameter, casesPerGradeParameter, plannedByParameter);
        }
    
        public virtual int sp_tPrintAllocation_Ins(Nullable<int> iD, string cropYearCode, string pMRunNo, string locCode, string gradeCode, string caseNoFrom, string caseNoTo, string casesToPrint, string maxCaseNo, Nullable<byte> d_Stts, string plannedBy, Nullable<bool> isExistingStock)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cropYearCodeParameter = cropYearCode != null ?
                new ObjectParameter("CropYearCode", cropYearCode) :
                new ObjectParameter("CropYearCode", typeof(string));
    
            var pMRunNoParameter = pMRunNo != null ?
                new ObjectParameter("PMRunNo", pMRunNo) :
                new ObjectParameter("PMRunNo", typeof(string));
    
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            var gradeCodeParameter = gradeCode != null ?
                new ObjectParameter("GradeCode", gradeCode) :
                new ObjectParameter("GradeCode", typeof(string));
    
            var caseNoFromParameter = caseNoFrom != null ?
                new ObjectParameter("CaseNoFrom", caseNoFrom) :
                new ObjectParameter("CaseNoFrom", typeof(string));
    
            var caseNoToParameter = caseNoTo != null ?
                new ObjectParameter("CaseNoTo", caseNoTo) :
                new ObjectParameter("CaseNoTo", typeof(string));
    
            var casesToPrintParameter = casesToPrint != null ?
                new ObjectParameter("CasesToPrint", casesToPrint) :
                new ObjectParameter("CasesToPrint", typeof(string));
    
            var maxCaseNoParameter = maxCaseNo != null ?
                new ObjectParameter("MaxCaseNo", maxCaseNo) :
                new ObjectParameter("MaxCaseNo", typeof(string));
    
            var d_SttsParameter = d_Stts.HasValue ?
                new ObjectParameter("D_Stts", d_Stts) :
                new ObjectParameter("D_Stts", typeof(byte));
    
            var plannedByParameter = plannedBy != null ?
                new ObjectParameter("PlannedBy", plannedBy) :
                new ObjectParameter("PlannedBy", typeof(string));
    
            var isExistingStockParameter = isExistingStock.HasValue ?
                new ObjectParameter("IsExistingStock", isExistingStock) :
                new ObjectParameter("IsExistingStock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tPrintAllocation_Ins", iDParameter, cropYearCodeParameter, pMRunNoParameter, locCodeParameter, gradeCodeParameter, caseNoFromParameter, caseNoToParameter, casesToPrintParameter, maxCaseNoParameter, d_SttsParameter, plannedByParameter, isExistingStockParameter);
        }
    
        public virtual ObjectResult<sp_UpAndDownRpt_Result> sp_UpAndDownRpt(string fromDate, string toDate, string crop, string variety)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var cropParameter = crop != null ?
                new ObjectParameter("Crop", crop) :
                new ObjectParameter("Crop", typeof(string));
    
            var varietyParameter = variety != null ?
                new ObjectParameter("Variety", variety) :
                new ObjectParameter("Variety", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UpAndDownRpt_Result>("sp_UpAndDownRpt", fromDateParameter, toDateParameter, cropParameter, varietyParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sp_UploadData(string locCode)
        {
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UploadData", locCodeParameter);
        }
    
        public virtual int spReturnNull()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReturnNull");
        }
    
        public virtual int SUBSIDYDETAILS(string cROP, string item_Category, string item_code, string po_no, Nullable<double> priceperPiece, Nullable<int> quantity, Nullable<double> total, Nullable<int> gPI_PERCENT, Nullable<double> gPI_VALUE, Nullable<int> pMI_PERCENT, Nullable<double> pMI_VALUE, Nullable<double> fARMER_VALUE, Nullable<double> gPI_PER_PIECE, Nullable<double> pMI_PER_PIECE, Nullable<double> fARMER_PER_PIECE, Nullable<int> fARMER_PERCENT)
        {
            var cROPParameter = cROP != null ?
                new ObjectParameter("CROP", cROP) :
                new ObjectParameter("CROP", typeof(string));
    
            var item_CategoryParameter = item_Category != null ?
                new ObjectParameter("Item_Category", item_Category) :
                new ObjectParameter("Item_Category", typeof(string));
    
            var item_codeParameter = item_code != null ?
                new ObjectParameter("Item_code", item_code) :
                new ObjectParameter("Item_code", typeof(string));
    
            var po_noParameter = po_no != null ?
                new ObjectParameter("Po_no", po_no) :
                new ObjectParameter("Po_no", typeof(string));
    
            var priceperPieceParameter = priceperPiece.HasValue ?
                new ObjectParameter("PriceperPiece", priceperPiece) :
                new ObjectParameter("PriceperPiece", typeof(double));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(double));
    
            var gPI_PERCENTParameter = gPI_PERCENT.HasValue ?
                new ObjectParameter("GPI_PERCENT", gPI_PERCENT) :
                new ObjectParameter("GPI_PERCENT", typeof(int));
    
            var gPI_VALUEParameter = gPI_VALUE.HasValue ?
                new ObjectParameter("GPI_VALUE", gPI_VALUE) :
                new ObjectParameter("GPI_VALUE", typeof(double));
    
            var pMI_PERCENTParameter = pMI_PERCENT.HasValue ?
                new ObjectParameter("PMI_PERCENT", pMI_PERCENT) :
                new ObjectParameter("PMI_PERCENT", typeof(int));
    
            var pMI_VALUEParameter = pMI_VALUE.HasValue ?
                new ObjectParameter("PMI_VALUE", pMI_VALUE) :
                new ObjectParameter("PMI_VALUE", typeof(double));
    
            var fARMER_VALUEParameter = fARMER_VALUE.HasValue ?
                new ObjectParameter("FARMER_VALUE", fARMER_VALUE) :
                new ObjectParameter("FARMER_VALUE", typeof(double));
    
            var gPI_PER_PIECEParameter = gPI_PER_PIECE.HasValue ?
                new ObjectParameter("GPI_PER_PIECE", gPI_PER_PIECE) :
                new ObjectParameter("GPI_PER_PIECE", typeof(double));
    
            var pMI_PER_PIECEParameter = pMI_PER_PIECE.HasValue ?
                new ObjectParameter("PMI_PER_PIECE", pMI_PER_PIECE) :
                new ObjectParameter("PMI_PER_PIECE", typeof(double));
    
            var fARMER_PER_PIECEParameter = fARMER_PER_PIECE.HasValue ?
                new ObjectParameter("FARMER_PER_PIECE", fARMER_PER_PIECE) :
                new ObjectParameter("FARMER_PER_PIECE", typeof(double));
    
            var fARMER_PERCENTParameter = fARMER_PERCENT.HasValue ?
                new ObjectParameter("FARMER_PERCENT", fARMER_PERCENT) :
                new ObjectParameter("FARMER_PERCENT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SUBSIDYDETAILS", cROPParameter, item_CategoryParameter, item_codeParameter, po_noParameter, priceperPieceParameter, quantityParameter, totalParameter, gPI_PERCENTParameter, gPI_VALUEParameter, pMI_PERCENTParameter, pMI_VALUEParameter, fARMER_VALUEParameter, gPI_PER_PIECEParameter, pMI_PER_PIECEParameter, fARMER_PER_PIECEParameter, fARMER_PERCENTParameter);
        }
    
        public virtual int SubsidyHeader(string pO_NO, string fARMER_CODE, string fARMER_NAME, string fATHERS_NAME, string vILLAGE, Nullable<System.DateTime> dATE, Nullable<int> sLIP_NO)
        {
            var pO_NOParameter = pO_NO != null ?
                new ObjectParameter("PO_NO", pO_NO) :
                new ObjectParameter("PO_NO", typeof(string));
    
            var fARMER_CODEParameter = fARMER_CODE != null ?
                new ObjectParameter("FARMER_CODE", fARMER_CODE) :
                new ObjectParameter("FARMER_CODE", typeof(string));
    
            var fARMER_NAMEParameter = fARMER_NAME != null ?
                new ObjectParameter("FARMER_NAME", fARMER_NAME) :
                new ObjectParameter("FARMER_NAME", typeof(string));
    
            var fATHERS_NAMEParameter = fATHERS_NAME != null ?
                new ObjectParameter("FATHERS_NAME", fATHERS_NAME) :
                new ObjectParameter("FATHERS_NAME", typeof(string));
    
            var vILLAGEParameter = vILLAGE != null ?
                new ObjectParameter("VILLAGE", vILLAGE) :
                new ObjectParameter("VILLAGE", typeof(string));
    
            var dATEParameter = dATE.HasValue ?
                new ObjectParameter("DATE", dATE) :
                new ObjectParameter("DATE", typeof(System.DateTime));
    
            var sLIP_NOParameter = sLIP_NO.HasValue ?
                new ObjectParameter("SLIP_NO", sLIP_NO) :
                new ObjectParameter("SLIP_NO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubsidyHeader", pO_NOParameter, fARMER_CODEParameter, fARMER_NAMEParameter, fATHERS_NAMEParameter, vILLAGEParameter, dATEParameter, sLIP_NOParameter);
        }
    
        public virtual int SUBSIDYMASTER(Nullable<int> cROP, string iTEM_CATEGORY, Nullable<int> gPI, Nullable<int> pMI, Nullable<int> fARMER)
        {
            var cROPParameter = cROP.HasValue ?
                new ObjectParameter("CROP", cROP) :
                new ObjectParameter("CROP", typeof(int));
    
            var iTEM_CATEGORYParameter = iTEM_CATEGORY != null ?
                new ObjectParameter("ITEM_CATEGORY", iTEM_CATEGORY) :
                new ObjectParameter("ITEM_CATEGORY", typeof(string));
    
            var gPIParameter = gPI.HasValue ?
                new ObjectParameter("GPI", gPI) :
                new ObjectParameter("GPI", typeof(int));
    
            var pMIParameter = pMI.HasValue ?
                new ObjectParameter("PMI", pMI) :
                new ObjectParameter("PMI", typeof(int));
    
            var fARMERParameter = fARMER.HasValue ?
                new ObjectParameter("FARMER", fARMER) :
                new ObjectParameter("FARMER", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SUBSIDYMASTER", cROPParameter, iTEM_CATEGORYParameter, gPIParameter, pMIParameter, fARMERParameter);
        }
    
        public virtual int SUBSIDYMASTER1(string cROP, string iTEM_CATEGORY, Nullable<int> gPI, Nullable<int> pMI, Nullable<int> fARMER)
        {
            var cROPParameter = cROP != null ?
                new ObjectParameter("CROP", cROP) :
                new ObjectParameter("CROP", typeof(string));
    
            var iTEM_CATEGORYParameter = iTEM_CATEGORY != null ?
                new ObjectParameter("ITEM_CATEGORY", iTEM_CATEGORY) :
                new ObjectParameter("ITEM_CATEGORY", typeof(string));
    
            var gPIParameter = gPI.HasValue ?
                new ObjectParameter("GPI", gPI) :
                new ObjectParameter("GPI", typeof(int));
    
            var pMIParameter = pMI.HasValue ?
                new ObjectParameter("PMI", pMI) :
                new ObjectParameter("PMI", typeof(int));
    
            var fARMERParameter = fARMER.HasValue ?
                new ObjectParameter("FARMER", fARMER) :
                new ObjectParameter("FARMER", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SUBSIDYMASTER1", cROPParameter, iTEM_CATEGORYParameter, gPIParameter, pMIParameter, fARMERParameter);
        }
    
        public virtual int THRESHING_BATCH(string tempbatch, ObjectParameter sts)
        {
            var tempbatchParameter = tempbatch != null ?
                new ObjectParameter("tempbatch", tempbatch) :
                new ObjectParameter("tempbatch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("THRESHING_BATCH", tempbatchParameter, sts);
        }
    
        public virtual int THRESHINGPROCESS(ObjectParameter sts)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("THRESHINGPROCESS", sts);
        }
    
        public virtual int UpdateReceipt(string shipno, string usrcd, ObjectParameter status)
        {
            var shipnoParameter = shipno != null ?
                new ObjectParameter("Shipno", shipno) :
                new ObjectParameter("Shipno", typeof(string));
    
            var usrcdParameter = usrcd != null ?
                new ObjectParameter("usrcd", usrcd) :
                new ObjectParameter("usrcd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateReceipt", shipnoParameter, usrcdParameter, status);
        }
    
        public virtual int WMS_FUMIGATION_CLOSE(string bATCHNO, ObjectParameter eRR)
        {
            var bATCHNOParameter = bATCHNO != null ?
                new ObjectParameter("BATCHNO", bATCHNO) :
                new ObjectParameter("BATCHNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WMS_FUMIGATION_CLOSE", bATCHNOParameter, eRR);
        }
    
        public virtual int WMS_FUMIGATION_START(string bATCHNO, string eRR)
        {
            var bATCHNOParameter = bATCHNO != null ?
                new ObjectParameter("BATCHNO", bATCHNO) :
                new ObjectParameter("BATCHNO", typeof(string));
    
            var eRRParameter = eRR != null ?
                new ObjectParameter("ERR", eRR) :
                new ObjectParameter("ERR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WMS_FUMIGATION_START", bATCHNOParameter, eRRParameter);
        }
    
        public virtual int WMS_PackedGradeTransfer(string batchNo, string locCode, ObjectParameter err)
        {
            var batchNoParameter = batchNo != null ?
                new ObjectParameter("batchNo", batchNo) :
                new ObjectParameter("batchNo", typeof(string));
    
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WMS_PackedGradeTransfer", batchNoParameter, locCodeParameter, err);
        }
    
        public virtual int WMS_Receipt(string shipment, string locCode, ObjectParameter err)
        {
            var shipmentParameter = shipment != null ?
                new ObjectParameter("Shipment", shipment) :
                new ObjectParameter("Shipment", typeof(string));
    
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WMS_Receipt", shipmentParameter, locCodeParameter, err);
        }
    
        public virtual int WMS_SupplierPurchase(string batchNo, ObjectParameter err)
        {
            var batchNoParameter = batchNo != null ?
                new ObjectParameter("batchNo", batchNo) :
                new ObjectParameter("batchNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WMS_SupplierPurchase", batchNoParameter, err);
        }
    
        public virtual int WMS_Threshing(string batchNo, string locCode, ObjectParameter err)
        {
            var batchNoParameter = batchNo != null ?
                new ObjectParameter("batchNo", batchNo) :
                new ObjectParameter("batchNo", typeof(string));
    
            var locCodeParameter = locCode != null ?
                new ObjectParameter("LocCode", locCode) :
                new ObjectParameter("LocCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WMS_Threshing", batchNoParameter, locCodeParameter, err);
        }
    
        public virtual int WMSChemicalDetailsUpdation(string sHIPMENTNO, ObjectParameter eRR)
        {
            var sHIPMENTNOParameter = sHIPMENTNO != null ?
                new ObjectParameter("SHIPMENTNO", sHIPMENTNO) :
                new ObjectParameter("SHIPMENTNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WMSChemicalDetailsUpdation", sHIPMENTNOParameter, eRR);
        }
    
        public virtual int WMSDISPATCH_LOCAL(string sHIPMENTNO, ObjectParameter eRR)
        {
            var sHIPMENTNOParameter = sHIPMENTNO != null ?
                new ObjectParameter("SHIPMENTNO", sHIPMENTNO) :
                new ObjectParameter("SHIPMENTNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WMSDISPATCH_LOCAL", sHIPMENTNOParameter, eRR);
        }
    
        public virtual int WSP_InsertBGTransaction(string tRANS_ID, string tRANS_TYPE, string oRGN_CODE, string cROP, string vARIETY, Nullable<double> pREVIOUS_BG_AMOUNT, Nullable<double> pREVIOUS_UTILIZED_AMOUNT, Nullable<double> tRANS_AMOUNT, Nullable<double> bG_AMOUNT, Nullable<double> uTILIZED_AMOUNT, string bG_DATE, string cREATED_BY, string cREATED_DATE, string sTATUS)
        {
            var tRANS_IDParameter = tRANS_ID != null ?
                new ObjectParameter("TRANS_ID", tRANS_ID) :
                new ObjectParameter("TRANS_ID", typeof(string));
    
            var tRANS_TYPEParameter = tRANS_TYPE != null ?
                new ObjectParameter("TRANS_TYPE", tRANS_TYPE) :
                new ObjectParameter("TRANS_TYPE", typeof(string));
    
            var oRGN_CODEParameter = oRGN_CODE != null ?
                new ObjectParameter("ORGN_CODE", oRGN_CODE) :
                new ObjectParameter("ORGN_CODE", typeof(string));
    
            var cROPParameter = cROP != null ?
                new ObjectParameter("CROP", cROP) :
                new ObjectParameter("CROP", typeof(string));
    
            var vARIETYParameter = vARIETY != null ?
                new ObjectParameter("VARIETY", vARIETY) :
                new ObjectParameter("VARIETY", typeof(string));
    
            var pREVIOUS_BG_AMOUNTParameter = pREVIOUS_BG_AMOUNT.HasValue ?
                new ObjectParameter("PREVIOUS_BG_AMOUNT", pREVIOUS_BG_AMOUNT) :
                new ObjectParameter("PREVIOUS_BG_AMOUNT", typeof(double));
    
            var pREVIOUS_UTILIZED_AMOUNTParameter = pREVIOUS_UTILIZED_AMOUNT.HasValue ?
                new ObjectParameter("PREVIOUS_UTILIZED_AMOUNT", pREVIOUS_UTILIZED_AMOUNT) :
                new ObjectParameter("PREVIOUS_UTILIZED_AMOUNT", typeof(double));
    
            var tRANS_AMOUNTParameter = tRANS_AMOUNT.HasValue ?
                new ObjectParameter("TRANS_AMOUNT", tRANS_AMOUNT) :
                new ObjectParameter("TRANS_AMOUNT", typeof(double));
    
            var bG_AMOUNTParameter = bG_AMOUNT.HasValue ?
                new ObjectParameter("BG_AMOUNT", bG_AMOUNT) :
                new ObjectParameter("BG_AMOUNT", typeof(double));
    
            var uTILIZED_AMOUNTParameter = uTILIZED_AMOUNT.HasValue ?
                new ObjectParameter("UTILIZED_AMOUNT", uTILIZED_AMOUNT) :
                new ObjectParameter("UTILIZED_AMOUNT", typeof(double));
    
            var bG_DATEParameter = bG_DATE != null ?
                new ObjectParameter("BG_DATE", bG_DATE) :
                new ObjectParameter("BG_DATE", typeof(string));
    
            var cREATED_BYParameter = cREATED_BY != null ?
                new ObjectParameter("CREATED_BY", cREATED_BY) :
                new ObjectParameter("CREATED_BY", typeof(string));
    
            var cREATED_DATEParameter = cREATED_DATE != null ?
                new ObjectParameter("CREATED_DATE", cREATED_DATE) :
                new ObjectParameter("CREATED_DATE", typeof(string));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WSP_InsertBGTransaction", tRANS_IDParameter, tRANS_TYPEParameter, oRGN_CODEParameter, cROPParameter, vARIETYParameter, pREVIOUS_BG_AMOUNTParameter, pREVIOUS_UTILIZED_AMOUNTParameter, tRANS_AMOUNTParameter, bG_AMOUNTParameter, uTILIZED_AMOUNTParameter, bG_DATEParameter, cREATED_BYParameter, cREATED_DATEParameter, sTATUSParameter);
        }
    
        public virtual int WSP_InsertCompetitionDTLS(string hEADER_ID, string dETAIL_ID, string cOMPANY_CODE, Nullable<int> nO_OF_BALES, Nullable<double> hIGHEST_BID, Nullable<double> lOWEST_BID, string sTATUS, string hEADER_STATUS, string cREATED_BY, string cREATED_DATE)
        {
            var hEADER_IDParameter = hEADER_ID != null ?
                new ObjectParameter("HEADER_ID", hEADER_ID) :
                new ObjectParameter("HEADER_ID", typeof(string));
    
            var dETAIL_IDParameter = dETAIL_ID != null ?
                new ObjectParameter("DETAIL_ID", dETAIL_ID) :
                new ObjectParameter("DETAIL_ID", typeof(string));
    
            var cOMPANY_CODEParameter = cOMPANY_CODE != null ?
                new ObjectParameter("COMPANY_CODE", cOMPANY_CODE) :
                new ObjectParameter("COMPANY_CODE", typeof(string));
    
            var nO_OF_BALESParameter = nO_OF_BALES.HasValue ?
                new ObjectParameter("NO_OF_BALES", nO_OF_BALES) :
                new ObjectParameter("NO_OF_BALES", typeof(int));
    
            var hIGHEST_BIDParameter = hIGHEST_BID.HasValue ?
                new ObjectParameter("HIGHEST_BID", hIGHEST_BID) :
                new ObjectParameter("HIGHEST_BID", typeof(double));
    
            var lOWEST_BIDParameter = lOWEST_BID.HasValue ?
                new ObjectParameter("LOWEST_BID", lOWEST_BID) :
                new ObjectParameter("LOWEST_BID", typeof(double));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var hEADER_STATUSParameter = hEADER_STATUS != null ?
                new ObjectParameter("HEADER_STATUS", hEADER_STATUS) :
                new ObjectParameter("HEADER_STATUS", typeof(string));
    
            var cREATED_BYParameter = cREATED_BY != null ?
                new ObjectParameter("CREATED_BY", cREATED_BY) :
                new ObjectParameter("CREATED_BY", typeof(string));
    
            var cREATED_DATEParameter = cREATED_DATE != null ?
                new ObjectParameter("CREATED_DATE", cREATED_DATE) :
                new ObjectParameter("CREATED_DATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WSP_InsertCompetitionDTLS", hEADER_IDParameter, dETAIL_IDParameter, cOMPANY_CODEParameter, nO_OF_BALESParameter, hIGHEST_BIDParameter, lOWEST_BIDParameter, sTATUSParameter, hEADER_STATUSParameter, cREATED_BYParameter, cREATED_DATEParameter);
        }
    
        public virtual int WSP_InsertCompetitionHDR(string hEADER_ID, string oRGN_CODE, string rEPORT_NO, string rEPORT_DATE, string bUYER_CODE, string cROP, string vARIETY, Nullable<int> tOT_SOLD_BALES, Nullable<int> nB_NS_BALES, Nullable<int> tOT_OFF_BALES, Nullable<double> fLOOR_HB, Nullable<double> fLOOR_LB, Nullable<double> gPIL_HB, Nullable<double> gPIL_LB, string cLSTR_OFF_TODAY, string cLSTR_OFF_TOMORROW, string qTY_MRKTD_DATE, Nullable<int> bALES_MRKTD, Nullable<double> qTY_MRKTD, Nullable<double> aVG_PRICE_MRKTD, string aTTRIBUTE1, string cREATED_BY, string cREATED_DATE, string sTATUS)
        {
            var hEADER_IDParameter = hEADER_ID != null ?
                new ObjectParameter("HEADER_ID", hEADER_ID) :
                new ObjectParameter("HEADER_ID", typeof(string));
    
            var oRGN_CODEParameter = oRGN_CODE != null ?
                new ObjectParameter("ORGN_CODE", oRGN_CODE) :
                new ObjectParameter("ORGN_CODE", typeof(string));
    
            var rEPORT_NOParameter = rEPORT_NO != null ?
                new ObjectParameter("REPORT_NO", rEPORT_NO) :
                new ObjectParameter("REPORT_NO", typeof(string));
    
            var rEPORT_DATEParameter = rEPORT_DATE != null ?
                new ObjectParameter("REPORT_DATE", rEPORT_DATE) :
                new ObjectParameter("REPORT_DATE", typeof(string));
    
            var bUYER_CODEParameter = bUYER_CODE != null ?
                new ObjectParameter("BUYER_CODE", bUYER_CODE) :
                new ObjectParameter("BUYER_CODE", typeof(string));
    
            var cROPParameter = cROP != null ?
                new ObjectParameter("CROP", cROP) :
                new ObjectParameter("CROP", typeof(string));
    
            var vARIETYParameter = vARIETY != null ?
                new ObjectParameter("VARIETY", vARIETY) :
                new ObjectParameter("VARIETY", typeof(string));
    
            var tOT_SOLD_BALESParameter = tOT_SOLD_BALES.HasValue ?
                new ObjectParameter("TOT_SOLD_BALES", tOT_SOLD_BALES) :
                new ObjectParameter("TOT_SOLD_BALES", typeof(int));
    
            var nB_NS_BALESParameter = nB_NS_BALES.HasValue ?
                new ObjectParameter("NB_NS_BALES", nB_NS_BALES) :
                new ObjectParameter("NB_NS_BALES", typeof(int));
    
            var tOT_OFF_BALESParameter = tOT_OFF_BALES.HasValue ?
                new ObjectParameter("TOT_OFF_BALES", tOT_OFF_BALES) :
                new ObjectParameter("TOT_OFF_BALES", typeof(int));
    
            var fLOOR_HBParameter = fLOOR_HB.HasValue ?
                new ObjectParameter("FLOOR_HB", fLOOR_HB) :
                new ObjectParameter("FLOOR_HB", typeof(double));
    
            var fLOOR_LBParameter = fLOOR_LB.HasValue ?
                new ObjectParameter("FLOOR_LB", fLOOR_LB) :
                new ObjectParameter("FLOOR_LB", typeof(double));
    
            var gPIL_HBParameter = gPIL_HB.HasValue ?
                new ObjectParameter("GPIL_HB", gPIL_HB) :
                new ObjectParameter("GPIL_HB", typeof(double));
    
            var gPIL_LBParameter = gPIL_LB.HasValue ?
                new ObjectParameter("GPIL_LB", gPIL_LB) :
                new ObjectParameter("GPIL_LB", typeof(double));
    
            var cLSTR_OFF_TODAYParameter = cLSTR_OFF_TODAY != null ?
                new ObjectParameter("CLSTR_OFF_TODAY", cLSTR_OFF_TODAY) :
                new ObjectParameter("CLSTR_OFF_TODAY", typeof(string));
    
            var cLSTR_OFF_TOMORROWParameter = cLSTR_OFF_TOMORROW != null ?
                new ObjectParameter("CLSTR_OFF_TOMORROW", cLSTR_OFF_TOMORROW) :
                new ObjectParameter("CLSTR_OFF_TOMORROW", typeof(string));
    
            var qTY_MRKTD_DATEParameter = qTY_MRKTD_DATE != null ?
                new ObjectParameter("QTY_MRKTD_DATE", qTY_MRKTD_DATE) :
                new ObjectParameter("QTY_MRKTD_DATE", typeof(string));
    
            var bALES_MRKTDParameter = bALES_MRKTD.HasValue ?
                new ObjectParameter("BALES_MRKTD", bALES_MRKTD) :
                new ObjectParameter("BALES_MRKTD", typeof(int));
    
            var qTY_MRKTDParameter = qTY_MRKTD.HasValue ?
                new ObjectParameter("QTY_MRKTD", qTY_MRKTD) :
                new ObjectParameter("QTY_MRKTD", typeof(double));
    
            var aVG_PRICE_MRKTDParameter = aVG_PRICE_MRKTD.HasValue ?
                new ObjectParameter("AVG_PRICE_MRKTD", aVG_PRICE_MRKTD) :
                new ObjectParameter("AVG_PRICE_MRKTD", typeof(double));
    
            var aTTRIBUTE1Parameter = aTTRIBUTE1 != null ?
                new ObjectParameter("ATTRIBUTE1", aTTRIBUTE1) :
                new ObjectParameter("ATTRIBUTE1", typeof(string));
    
            var cREATED_BYParameter = cREATED_BY != null ?
                new ObjectParameter("CREATED_BY", cREATED_BY) :
                new ObjectParameter("CREATED_BY", typeof(string));
    
            var cREATED_DATEParameter = cREATED_DATE != null ?
                new ObjectParameter("CREATED_DATE", cREATED_DATE) :
                new ObjectParameter("CREATED_DATE", typeof(string));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WSP_InsertCompetitionHDR", hEADER_IDParameter, oRGN_CODEParameter, rEPORT_NOParameter, rEPORT_DATEParameter, bUYER_CODEParameter, cROPParameter, vARIETYParameter, tOT_SOLD_BALESParameter, nB_NS_BALESParameter, tOT_OFF_BALESParameter, fLOOR_HBParameter, fLOOR_LBParameter, gPIL_HBParameter, gPIL_LBParameter, cLSTR_OFF_TODAYParameter, cLSTR_OFF_TOMORROWParameter, qTY_MRKTD_DATEParameter, bALES_MRKTDParameter, qTY_MRKTDParameter, aVG_PRICE_MRKTDParameter, aTTRIBUTE1Parameter, cREATED_BYParameter, cREATED_DATEParameter, sTATUSParameter);
        }
    
        public virtual int WSP_InsertCompetitionProcess(string hEADER_ID, string oRGN_CODE, string rEPORT_NO, string rEPORT_DATE, string bUYER_CODE, string cROP, string vARIETY, Nullable<int> tOT_SOLD_BALES, Nullable<int> nB_NS_BALES, Nullable<int> tOT_OFF_BALES, Nullable<double> fLOOR_HB, Nullable<double> fLOOR_LB, Nullable<double> gPIL_HB, Nullable<double> gPIL_LB, string cLSTR_OFF_TODAY, string cLSTR_OFF_TOMORROW, string qTY_MRKTD_DATE, Nullable<int> bALES_MRKTD, Nullable<double> qTY_MRKTD, Nullable<double> aVG_PRICE_MRKTD, string aTTRIBUTE1, string cREATED_BY, string cREATED_DATE, string dETAIL_ID, string cOMPANY_CODE, Nullable<int> nO_OF_BALES, Nullable<double> hIGHEST_BID, Nullable<double> lOWEST_BID, string sTATUS, string hEADER_STATUS)
        {
            var hEADER_IDParameter = hEADER_ID != null ?
                new ObjectParameter("HEADER_ID", hEADER_ID) :
                new ObjectParameter("HEADER_ID", typeof(string));
    
            var oRGN_CODEParameter = oRGN_CODE != null ?
                new ObjectParameter("ORGN_CODE", oRGN_CODE) :
                new ObjectParameter("ORGN_CODE", typeof(string));
    
            var rEPORT_NOParameter = rEPORT_NO != null ?
                new ObjectParameter("REPORT_NO", rEPORT_NO) :
                new ObjectParameter("REPORT_NO", typeof(string));
    
            var rEPORT_DATEParameter = rEPORT_DATE != null ?
                new ObjectParameter("REPORT_DATE", rEPORT_DATE) :
                new ObjectParameter("REPORT_DATE", typeof(string));
    
            var bUYER_CODEParameter = bUYER_CODE != null ?
                new ObjectParameter("BUYER_CODE", bUYER_CODE) :
                new ObjectParameter("BUYER_CODE", typeof(string));
    
            var cROPParameter = cROP != null ?
                new ObjectParameter("CROP", cROP) :
                new ObjectParameter("CROP", typeof(string));
    
            var vARIETYParameter = vARIETY != null ?
                new ObjectParameter("VARIETY", vARIETY) :
                new ObjectParameter("VARIETY", typeof(string));
    
            var tOT_SOLD_BALESParameter = tOT_SOLD_BALES.HasValue ?
                new ObjectParameter("TOT_SOLD_BALES", tOT_SOLD_BALES) :
                new ObjectParameter("TOT_SOLD_BALES", typeof(int));
    
            var nB_NS_BALESParameter = nB_NS_BALES.HasValue ?
                new ObjectParameter("NB_NS_BALES", nB_NS_BALES) :
                new ObjectParameter("NB_NS_BALES", typeof(int));
    
            var tOT_OFF_BALESParameter = tOT_OFF_BALES.HasValue ?
                new ObjectParameter("TOT_OFF_BALES", tOT_OFF_BALES) :
                new ObjectParameter("TOT_OFF_BALES", typeof(int));
    
            var fLOOR_HBParameter = fLOOR_HB.HasValue ?
                new ObjectParameter("FLOOR_HB", fLOOR_HB) :
                new ObjectParameter("FLOOR_HB", typeof(double));
    
            var fLOOR_LBParameter = fLOOR_LB.HasValue ?
                new ObjectParameter("FLOOR_LB", fLOOR_LB) :
                new ObjectParameter("FLOOR_LB", typeof(double));
    
            var gPIL_HBParameter = gPIL_HB.HasValue ?
                new ObjectParameter("GPIL_HB", gPIL_HB) :
                new ObjectParameter("GPIL_HB", typeof(double));
    
            var gPIL_LBParameter = gPIL_LB.HasValue ?
                new ObjectParameter("GPIL_LB", gPIL_LB) :
                new ObjectParameter("GPIL_LB", typeof(double));
    
            var cLSTR_OFF_TODAYParameter = cLSTR_OFF_TODAY != null ?
                new ObjectParameter("CLSTR_OFF_TODAY", cLSTR_OFF_TODAY) :
                new ObjectParameter("CLSTR_OFF_TODAY", typeof(string));
    
            var cLSTR_OFF_TOMORROWParameter = cLSTR_OFF_TOMORROW != null ?
                new ObjectParameter("CLSTR_OFF_TOMORROW", cLSTR_OFF_TOMORROW) :
                new ObjectParameter("CLSTR_OFF_TOMORROW", typeof(string));
    
            var qTY_MRKTD_DATEParameter = qTY_MRKTD_DATE != null ?
                new ObjectParameter("QTY_MRKTD_DATE", qTY_MRKTD_DATE) :
                new ObjectParameter("QTY_MRKTD_DATE", typeof(string));
    
            var bALES_MRKTDParameter = bALES_MRKTD.HasValue ?
                new ObjectParameter("BALES_MRKTD", bALES_MRKTD) :
                new ObjectParameter("BALES_MRKTD", typeof(int));
    
            var qTY_MRKTDParameter = qTY_MRKTD.HasValue ?
                new ObjectParameter("QTY_MRKTD", qTY_MRKTD) :
                new ObjectParameter("QTY_MRKTD", typeof(double));
    
            var aVG_PRICE_MRKTDParameter = aVG_PRICE_MRKTD.HasValue ?
                new ObjectParameter("AVG_PRICE_MRKTD", aVG_PRICE_MRKTD) :
                new ObjectParameter("AVG_PRICE_MRKTD", typeof(double));
    
            var aTTRIBUTE1Parameter = aTTRIBUTE1 != null ?
                new ObjectParameter("ATTRIBUTE1", aTTRIBUTE1) :
                new ObjectParameter("ATTRIBUTE1", typeof(string));
    
            var cREATED_BYParameter = cREATED_BY != null ?
                new ObjectParameter("CREATED_BY", cREATED_BY) :
                new ObjectParameter("CREATED_BY", typeof(string));
    
            var cREATED_DATEParameter = cREATED_DATE != null ?
                new ObjectParameter("CREATED_DATE", cREATED_DATE) :
                new ObjectParameter("CREATED_DATE", typeof(string));
    
            var dETAIL_IDParameter = dETAIL_ID != null ?
                new ObjectParameter("DETAIL_ID", dETAIL_ID) :
                new ObjectParameter("DETAIL_ID", typeof(string));
    
            var cOMPANY_CODEParameter = cOMPANY_CODE != null ?
                new ObjectParameter("COMPANY_CODE", cOMPANY_CODE) :
                new ObjectParameter("COMPANY_CODE", typeof(string));
    
            var nO_OF_BALESParameter = nO_OF_BALES.HasValue ?
                new ObjectParameter("NO_OF_BALES", nO_OF_BALES) :
                new ObjectParameter("NO_OF_BALES", typeof(int));
    
            var hIGHEST_BIDParameter = hIGHEST_BID.HasValue ?
                new ObjectParameter("HIGHEST_BID", hIGHEST_BID) :
                new ObjectParameter("HIGHEST_BID", typeof(double));
    
            var lOWEST_BIDParameter = lOWEST_BID.HasValue ?
                new ObjectParameter("LOWEST_BID", lOWEST_BID) :
                new ObjectParameter("LOWEST_BID", typeof(double));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var hEADER_STATUSParameter = hEADER_STATUS != null ?
                new ObjectParameter("HEADER_STATUS", hEADER_STATUS) :
                new ObjectParameter("HEADER_STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WSP_InsertCompetitionProcess", hEADER_IDParameter, oRGN_CODEParameter, rEPORT_NOParameter, rEPORT_DATEParameter, bUYER_CODEParameter, cROPParameter, vARIETYParameter, tOT_SOLD_BALESParameter, nB_NS_BALESParameter, tOT_OFF_BALESParameter, fLOOR_HBParameter, fLOOR_LBParameter, gPIL_HBParameter, gPIL_LBParameter, cLSTR_OFF_TODAYParameter, cLSTR_OFF_TOMORROWParameter, qTY_MRKTD_DATEParameter, bALES_MRKTDParameter, qTY_MRKTDParameter, aVG_PRICE_MRKTDParameter, aTTRIBUTE1Parameter, cREATED_BYParameter, cREATED_DATEParameter, dETAIL_IDParameter, cOMPANY_CODEParameter, nO_OF_BALESParameter, hIGHEST_BIDParameter, lOWEST_BIDParameter, sTATUSParameter, hEADER_STATUSParameter);
        }
    
        public virtual int WSP_InsertPurchasedBale(string hEADER_ID, string aTTRIBUTE3, string bUYER_GRADE, string tB_LOT_NO, string tBGR_NO, string tB_GRADE, Nullable<double> nET_WT, Nullable<double> rATE, string fARMER_CODE, string gPIL_BALE_NUMBER, string crop, string variety, string rEJE_STATUS, string sTATUS, string hEADER_STATUS, Nullable<double> pATTA_CHARGE, Nullable<double> sERVICE_CHARGES, Nullable<double> sERVICE_CHARGE_AMT, Nullable<double> sERVICE_TAX, Nullable<double> sERVICE_TAX_AMT, string cREATED_BY, string createdDate, string gRADE)
        {
            var hEADER_IDParameter = hEADER_ID != null ?
                new ObjectParameter("HEADER_ID", hEADER_ID) :
                new ObjectParameter("HEADER_ID", typeof(string));
    
            var aTTRIBUTE3Parameter = aTTRIBUTE3 != null ?
                new ObjectParameter("ATTRIBUTE3", aTTRIBUTE3) :
                new ObjectParameter("ATTRIBUTE3", typeof(string));
    
            var bUYER_GRADEParameter = bUYER_GRADE != null ?
                new ObjectParameter("BUYER_GRADE", bUYER_GRADE) :
                new ObjectParameter("BUYER_GRADE", typeof(string));
    
            var tB_LOT_NOParameter = tB_LOT_NO != null ?
                new ObjectParameter("TB_LOT_NO", tB_LOT_NO) :
                new ObjectParameter("TB_LOT_NO", typeof(string));
    
            var tBGR_NOParameter = tBGR_NO != null ?
                new ObjectParameter("TBGR_NO", tBGR_NO) :
                new ObjectParameter("TBGR_NO", typeof(string));
    
            var tB_GRADEParameter = tB_GRADE != null ?
                new ObjectParameter("TB_GRADE", tB_GRADE) :
                new ObjectParameter("TB_GRADE", typeof(string));
    
            var nET_WTParameter = nET_WT.HasValue ?
                new ObjectParameter("NET_WT", nET_WT) :
                new ObjectParameter("NET_WT", typeof(double));
    
            var rATEParameter = rATE.HasValue ?
                new ObjectParameter("RATE", rATE) :
                new ObjectParameter("RATE", typeof(double));
    
            var fARMER_CODEParameter = fARMER_CODE != null ?
                new ObjectParameter("FARMER_CODE", fARMER_CODE) :
                new ObjectParameter("FARMER_CODE", typeof(string));
    
            var gPIL_BALE_NUMBERParameter = gPIL_BALE_NUMBER != null ?
                new ObjectParameter("GPIL_BALE_NUMBER", gPIL_BALE_NUMBER) :
                new ObjectParameter("GPIL_BALE_NUMBER", typeof(string));
    
            var cropParameter = crop != null ?
                new ObjectParameter("Crop", crop) :
                new ObjectParameter("Crop", typeof(string));
    
            var varietyParameter = variety != null ?
                new ObjectParameter("Variety", variety) :
                new ObjectParameter("Variety", typeof(string));
    
            var rEJE_STATUSParameter = rEJE_STATUS != null ?
                new ObjectParameter("REJE_STATUS", rEJE_STATUS) :
                new ObjectParameter("REJE_STATUS", typeof(string));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var hEADER_STATUSParameter = hEADER_STATUS != null ?
                new ObjectParameter("HEADER_STATUS", hEADER_STATUS) :
                new ObjectParameter("HEADER_STATUS", typeof(string));
    
            var pATTA_CHARGEParameter = pATTA_CHARGE.HasValue ?
                new ObjectParameter("PATTA_CHARGE", pATTA_CHARGE) :
                new ObjectParameter("PATTA_CHARGE", typeof(double));
    
            var sERVICE_CHARGESParameter = sERVICE_CHARGES.HasValue ?
                new ObjectParameter("SERVICE_CHARGES", sERVICE_CHARGES) :
                new ObjectParameter("SERVICE_CHARGES", typeof(double));
    
            var sERVICE_CHARGE_AMTParameter = sERVICE_CHARGE_AMT.HasValue ?
                new ObjectParameter("SERVICE_CHARGE_AMT", sERVICE_CHARGE_AMT) :
                new ObjectParameter("SERVICE_CHARGE_AMT", typeof(double));
    
            var sERVICE_TAXParameter = sERVICE_TAX.HasValue ?
                new ObjectParameter("SERVICE_TAX", sERVICE_TAX) :
                new ObjectParameter("SERVICE_TAX", typeof(double));
    
            var sERVICE_TAX_AMTParameter = sERVICE_TAX_AMT.HasValue ?
                new ObjectParameter("SERVICE_TAX_AMT", sERVICE_TAX_AMT) :
                new ObjectParameter("SERVICE_TAX_AMT", typeof(double));
    
            var cREATED_BYParameter = cREATED_BY != null ?
                new ObjectParameter("CREATED_BY", cREATED_BY) :
                new ObjectParameter("CREATED_BY", typeof(string));
    
            var createdDateParameter = createdDate != null ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(string));
    
            var gRADEParameter = gRADE != null ?
                new ObjectParameter("GRADE", gRADE) :
                new ObjectParameter("GRADE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WSP_InsertPurchasedBale", hEADER_IDParameter, aTTRIBUTE3Parameter, bUYER_GRADEParameter, tB_LOT_NOParameter, tBGR_NOParameter, tB_GRADEParameter, nET_WTParameter, rATEParameter, fARMER_CODEParameter, gPIL_BALE_NUMBERParameter, cropParameter, varietyParameter, rEJE_STATUSParameter, sTATUSParameter, hEADER_STATUSParameter, pATTA_CHARGEParameter, sERVICE_CHARGESParameter, sERVICE_CHARGE_AMTParameter, sERVICE_TAXParameter, sERVICE_TAX_AMTParameter, cREATED_BYParameter, createdDateParameter, gRADEParameter);
        }
    
        public virtual int WSP_UpdateBGInformation(string iNFO_ID, string oRGN_CODE, string cROP, string vARIETY, Nullable<double> bG_AMOUNT, Nullable<double> uTILIZED_AMOUNT, string bG_DATE, string lAST_UPDATED_BY, string lAST_UPDATED_DATE, string sTATUS)
        {
            var iNFO_IDParameter = iNFO_ID != null ?
                new ObjectParameter("INFO_ID", iNFO_ID) :
                new ObjectParameter("INFO_ID", typeof(string));
    
            var oRGN_CODEParameter = oRGN_CODE != null ?
                new ObjectParameter("ORGN_CODE", oRGN_CODE) :
                new ObjectParameter("ORGN_CODE", typeof(string));
    
            var cROPParameter = cROP != null ?
                new ObjectParameter("CROP", cROP) :
                new ObjectParameter("CROP", typeof(string));
    
            var vARIETYParameter = vARIETY != null ?
                new ObjectParameter("VARIETY", vARIETY) :
                new ObjectParameter("VARIETY", typeof(string));
    
            var bG_AMOUNTParameter = bG_AMOUNT.HasValue ?
                new ObjectParameter("BG_AMOUNT", bG_AMOUNT) :
                new ObjectParameter("BG_AMOUNT", typeof(double));
    
            var uTILIZED_AMOUNTParameter = uTILIZED_AMOUNT.HasValue ?
                new ObjectParameter("UTILIZED_AMOUNT", uTILIZED_AMOUNT) :
                new ObjectParameter("UTILIZED_AMOUNT", typeof(double));
    
            var bG_DATEParameter = bG_DATE != null ?
                new ObjectParameter("BG_DATE", bG_DATE) :
                new ObjectParameter("BG_DATE", typeof(string));
    
            var lAST_UPDATED_BYParameter = lAST_UPDATED_BY != null ?
                new ObjectParameter("LAST_UPDATED_BY", lAST_UPDATED_BY) :
                new ObjectParameter("LAST_UPDATED_BY", typeof(string));
    
            var lAST_UPDATED_DATEParameter = lAST_UPDATED_DATE != null ?
                new ObjectParameter("LAST_UPDATED_DATE", lAST_UPDATED_DATE) :
                new ObjectParameter("LAST_UPDATED_DATE", typeof(string));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WSP_UpdateBGInformation", iNFO_IDParameter, oRGN_CODEParameter, cROPParameter, vARIETYParameter, bG_AMOUNTParameter, uTILIZED_AMOUNTParameter, bG_DATEParameter, lAST_UPDATED_BYParameter, lAST_UPDATED_DATEParameter, sTATUSParameter);
        }
    
        public virtual ObjectResult<WSP_Validate_User_Result> WSP_Validate_User(string uSER_ID, string password)
        {
            var uSER_IDParameter = uSER_ID != null ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WSP_Validate_User_Result>("WSP_Validate_User", uSER_IDParameter, passwordParameter);
        }
    }
}
