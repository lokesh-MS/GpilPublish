@model IEnumerable<GPILWebApp.ViewModel.Verificationn.CompleteDispatch>
@{
    ViewBag.Root = "Verification";
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 style="text-align:center; color:#438EB9">DISPATCH COMPLETE</h2>
<hr />

<div class="row">
    <div class="col-sm-5">
        <div class="form-sm-3">
           
           
        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-sm-3">
            <button id="btnSubmit" class="btn btn-success btn-sm" onclick="GetCompleteData()">GETCOMPLETEDATA</button>
            @*<button type="submit" value="Submit" id="btnSubmit" class="btn btn-sm btn-success" onclick="GetCompleteData()">

                GET COMPLETE DATA

            </button>*@
        </div>
    </div>
    <div class="col-sm-4">
        <div class="form-sm-3">

          
        </div>
    </div>
</div>


<div class="row">

    <div id="alert_placeholder"></div>
    <span id="message"></span>


</div>


<div class="row">
    <div class="col-xs-12">
        <h3 class="header smaller lighter blue"></h3>

        <div class="clearfix">
            <div class="pull-right tableTools-container2"></div>
        </div>
        <div class="table-header">
            Results for "COMPLETE DISPATCH"
        </div>


        <div class="form-horizondal" id="frmdetl" style="overflow-y: scroll; overflow-x: scroll; height:auto">
            <table id="dynamic-tabl" class="table table-striped table-bordered table-hover alert-dark table-condensed">
                <thead>
                    <tr>
                        <th>
                            SNo
                        </th>
                        <th>
                            Shipment Number
                        </th>
                        <th>
                            Sender Location
                        </th>
                        <th>
                            Sender Truck
                        </th>
                        <th>
                            Sender Date
                        </th>
                        @*<th>
                            Received Date
                        </th>*@
                        <th>
                            FLAG
                        </th>
                       


                    </tr>
                </thead>
                <tbody id="tbody"></tbody>


            </table>

        </div>

    </div>
</div>
<hr />

<div class="row">
    <div class="col-sm-5">
        <div class="form-sm-1">


        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-sm-1">

            <button type="submit" value="Submit" id="btnComplete" class="btn btn-sm btn-light">

                COMPLETE DISPATCH

            </button>
            
            <button type="submit" value="Submit" id="btnComplete" class="btn btn-sm btn-group-toggle">

                CLEAR

            </button>
        </div>
    </div>
    <div class="col-sm-2">
        <div class="form-sm-1">

            

        </div>
    </div>
</div>
<hr />


<script src="~/assets/js/jquery-2.1.4.min.js"></script>

<script>

    bootstrap_alert = function () { }
    bootstrap_alert.warning = function (message, status) {
        if (status == "success") {
            $('#alert_placeholder').html('<div class="alert alert-success" role="alert"><a class="close" data-dismiss="alert">×</a><span>' + message + '</span></div>')
        }
        else if (status == "error") {
            $('#alert_placeholder').html('<div class="alert alert-danger" role="alert"><a class="close" data-dismiss="alert">×</a><span>' + message + '</span></div>')
        }
        $("#alert_placeholder").fadeTo(10000, 500).slideUp(500, function () {
            $("#alert_placeholder").slideUp(500);
        });
    }

    function GetCompleteData() {
        var tblContent = '';
        $.ajax({
            type: 'GET',
            url: '/VerificationCompleteDispatch/GetCompleteDispatchDetails',
            //data: { fromDate: FromDate, toDate: ToDate },
            success: function (jsonResult) {
                //$('#ddlOrgnMaster').val() = "";
                var tblContent = '';
                if (dtclstr.Rows.Count == 0 ) {
                    alert('No Data');
                }
                else {
                    let data = JSON.parse(jsonResult);
                    //alert(0); alert("Successfully");
                    for (var i = 0; i < data.length; i++) {
                        var j = i + 1;
                        //var IndexID = "" + j;
                        tblContent = tblContent + '<tr>'
                            + '<td class="trBg" style="text-align:center;" >' + j + '</td >'
                            + '<td class="trBg" style="text-align:center;">' + data[i].SHIPMENT_NO + '</td>'
                            + '<td class="trBg" style="text-align:center;">' + data[i].SENDER_ORGN_CODE + '</td>'
                            + '<td class="trBg" style="text-align:center;">' + data[i].SENDER_TRUCK_NO + '</td>'
                            + '<td class="trBg" style="text-align:center;">' + data[i].SENDER_DATE + '</td>'
                            + '<td class="trBg" style="text-align:center;">' + data[i].FLAG + '</td>'
                            + '</tr >';
                    }
                }
                var dt1 = $('#dynamic-tabl').DataTable();
                dt1.destroy();
                $('#dynamic-tabl tbody').empty();
                $('#dynamic-tabl tbody').append(tblContent);

                if (msg.startsWith("Error", 1)) {
                    bootstrap_alert.warning(msg, "error");
                }
                else if (msg.startsWith("Success", 1)) {

                    //window.location = "/GPIL_CROP_MASTER/Index";
                    bootstrap_alert.warning(msg, "success");
                }



                var myTable1 =
   $('#dynamic-tabl')
   //.wrap("<div class='dataTables_borderWrap' />")   //if you are applying horizontal scrolling (sScrollX)
 .DataTable({
     "bLengthChange": true,
     "paging": true,
     "jQueryUI": true,
     bAutoWidth: false,
     'order': [[0, 'asc']],
     "aoColumns": [
          null, null, null, null, null,
         { "bSortable": false },

        // { "bSortable": false }
     ],
     "aaSorting": [],

     //"bProcessing": true,
     //"bServerSide": true,
     //"sAjaxSource": "http://127.0.0.1/table.php"	,

     //,
     //"sScrollY": "200px",
     // "bPaginate": true,

     //"sScrollX": "100%",
     //"sScrollXInner": "120%",
     //"bScrollCollapse": true,
     //Note: if you are applying horizontal scrolling (sScrollX) on a ".table-bordered"
     //you may want to wrap the table inside a "div.dataTables_borderWrap" element

     //"iDisplayLength": 50,


     select: {
         style: 'multi'
     }
 });



                $.fn.dataTable.Buttons.defaults.dom.container.className = 'dt-buttons btn-overlap btn-group btn-overlap';

                new $.fn.dataTable.Buttons(myTable1, {
                    buttons: [
                      {
                          "extend": "colvis",
                          "text": "<i class='fa fa-search bigger-110 blue'></i> <span class='hidden'>Show/hide columns</span>",
                          "className": "btn btn-white btn-primary btn-bold",
                          columns: ':not(:first):not(:last)'
                      },
                      {
                          "extend": "copy",
                          "text": "<i class='fa fa-copy bigger-110 pink'></i> <span class='hidden'>Copy to clipboard</span>",
                          "className": "btn btn-white btn-primary btn-bold"
                      },
                      {
                          "extend": "csv",
                          "text": "<i class='fa fa-database bigger-110 orange'></i> <span class='hidden'>Export to CSV</span>",
                          "className": "btn btn-white btn-primary btn-bold"
                      },
                      {
                          "extend": "excel",
                          "text": "<i class='fa fa-file-excel-o bigger-110 green'></i> <span class='hidden'>Export to Excel</span>",
                          "className": "btn btn-white btn-primary btn-bold"
                      },
                      {
                          "extend": "pdf",
                          "text": "<i class='fa fa-file-pdf-o bigger-110 red'></i> <span class='hidden'>Export to PDF</span>",
                          "className": "btn btn-white btn-primary btn-bold"
                      },
                      {
                          "extend": "print",
                          "text": "<i class='fa fa-print bigger-110 grey'></i> <span class='hidden'>Print</span>",
                          "className": "btn btn-white btn-primary btn-bold",
                          autoPrint: false,
                          message: 'This print was produced using the Print button for DataTables'
                      }
                    ]
                });
                myTable1.buttons().container().appendTo($('.tableTools-container1'));

                //style the message box
                var defaultCopyAction = myTable1.button(1).action();
                myTable1.button(1).action(function (e, dt, button, config) {
                    defaultCopyAction(e, dt, button, config);
                    $('.dt-button-info').addClass('gritter-item-wrapper gritter-info gritter-center white');
                });


                var defaultColvisAction = myTable1.button(0).action();
                myTable1.button(0).action(function (e, dt, button, config) {

                    defaultColvisAction(e, dt, button, config);


                    if ($('.dt-button-collection > .dropdown-menu').length == 0) {
                        $('.dt-button-collection')
                        .wrapInner('<ul class="dropdown-menu dropdown-light dropdown-caret dropdown-caret" />')
                        .find('a').attr('href', '#').wrap("<li />")
                    }
                    $('.dt-button-collection').appendTo('.tableTools-container1 .dt-buttons')
                });

                ////

                setTimeout(function () {
                    $($('.tableTools-container1')).find('a.dt-button').each(function () {
                        var div = $(this).find(' > div').first();
                        if (div.length == 1) div.tooltip({ container: 'body', title: div.parent().text() });
                        else $(this).tooltip({ container: 'body', title: $(this).text() });
                    });
                }, 2000);





                myTable1.on('select', function (e, dt, type, index) {
                    if (type === 'row') {
                        $(myTable1.row(index).node()).find('input:checkbox').prop('checked', true);
                    }
                });
                myTable1.on('deselect', function (e, dt, type, index) {
                    if (type === 'row') {
                        $(myTable1.row(index).node()).find('input:checkbox').prop('checked', false);
                    }
                });




                /////////////////////////////////
                //table checkboxes
                $('th input[type=checkbox], td input[type=checkbox]').prop('checked', false);

                //select/deselect all rows according to table header checkbox
                $('#dynamic-tabl > thead > tr > th input[type=checkbox], #dynamic-tabl_wrapper input[type=checkbox]').eq(0).on('click', function () {
                    var th_checked = this.checked;//checkbox inside "TH" table header

                    $('#dynamic-tabl').find('tbody > tr').each(function () {
                        var row = this;
                        if (th_checked) myTable1.row(row).select();
                        else myTable1.row(row).deselect();
                    });
                });

                //select/deselect a row when the checkbox is checked/unchecked
                $('#dynamic-tabl').on('click', 'td input[type=checkbox]', function () {
                    var row = $(this).closest('tr').get(0);
                    if (this.checked) myTable1.row(row).deselect();
                    else myTable1.row(row).select();
                });



                $(document).on('click', '#dynamic-tabl.dropdown-toggle', function (e) {
                    e.stopImmediatePropagation();
                    e.stopPropagation();
                    e.preventDefault();
                });


            },
            error: function (msg) {

                //if (response.startsWith("Error", 1)) {
                //    bootstrap_alert.warning(response, "error");
                //}
                bootstrap_alert.warning(msg.responseText, "error");
            }

        });

       
    }


    $(document).ready(function () {
        $('.alert').hide();

        $('#btnComplete').on('click', function () {
            
            var LCD = {};
            var CompleteDispatchs = new Array();
                $("#dynamic-tabl tbody tr").each(function () {


                    var row = $(this);
                    var CompleteDispatch = {};
                    CompleteDispatch.SNo = row.find("td:eq(0)")[0].innerText;
                    CompleteDispatch.SHIPMENT_NO = row.find("td:eq(1)")[0].innerText;
                    CompleteDispatch.SENDER_ORGN_CODE = row.find("td:eq(2)")[0].innerText;
                    CompleteDispatch.SENDER_TRUCK_NO = row.find("td:eq(3)")[0].innerText;
                    CompleteDispatch.SENDER_DATE = row.find("td:eq(4)")[0].innerText;
                    CompleteDispatch.FLAG = row.find("td:eq(5)")[0].innerText;
                    

                    CompleteDispatchs.push(CompleteDispatch);
                });
                if (CompleteDispatchs.length > 0) {
                    LCD.CompleteDispatchs = CompleteDispatchs;

                    //Send the JSON array to Controller using AJAX.
                    $.ajax({
                        type: "POST",
                        url: "/VerificationCompleteDispatch/CompleteDispatchComplete",
                        data: JSON.stringify(LCD),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (msg) {
                            if (msg.startsWith("Error", 1)) {
                                bootstrap_alert.warning(msg, "error");
                            }
                            else if (msg.startsWith("Success", 1)) {

                                //window.location = "/GPIL_CROP_MASTER/Index";
                                bootstrap_alert.warning('Successful ' + msg, "success");
                            }
                        },
                        error: function (msg) {
                            bootstrap_alert.warning(msg.responseText, "error");
                        }
                    });
                }

                else {
                    bootstrap_alert.warning('Click Import and load the Excel Data!!!', "error");
                }
           
        });


        


    });



</script>