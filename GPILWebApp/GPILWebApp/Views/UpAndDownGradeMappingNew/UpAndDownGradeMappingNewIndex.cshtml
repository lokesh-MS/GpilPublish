@model IEnumerable<GPILWebApp.ViewModel.UpDownGradeMapping>
@{
    ViewBag.Root = "Master";
    ViewBag.Title = "UpAndDownGradeMappingNewIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="css/custom.css" rel="stylesheet" />
<style type="text/css">
    #loader {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        width: 100%;
        background: rgba(0,0,0,0.75) url('../../Images/Loading.gif') no-repeat center center;
        z-index: 10000;
        /*background-image: url('../../Images/Loading.gif');*/
    }
</style>

<h2 style="text-align:center; color:#438EB9"> Up And Down Grade Mapping -New </h2>
<hr />


<div class="row">


    <div class="col-md-3">
        <div class="sm-3">

            <label>CROP</label>
            @Html.DropDownList("CROP", new SelectList(ViewBag.GPIL_CROP_MASTERs, "CROP", "CROP_YEAR"), "Please select", new { @id = "ddlCropYear", @class = "form-control" })
        </div>
    </div>



    <div class="col-md-3">
        <div class="sm-3">

            <label>VARIETY</label>
            @Html.DropDownList("VARIETY", new SelectList(ViewBag.GPIL_VARIETY_MASTERs, "VARIETY", "VARIETY_NAME"), "Please select", new { @id = "ddlVariety", @class = "form-control" })
        </div>
    </div>
    <div class="col-md-3">
        <div class="sm-3">
            @*<input id="btnView" type="button" value="View" />View*@
            @*<div><label></label></div>*@


        </div>
    </div>

</div>

<div class="row">
    <div class="col-md-3">
        <div><label></label></div>
        <button type="submit" value="Submit" id="btnSubmit" class="btn btn-sm btn-success">
            VIEW
        </button>
        <button type="submit" value="Submit" id="btnSubmit" class="btn btn-sm btn-light">
            CLEAR
        </button>
        @*<button id="btnComplete" class="btn btn-success btn-sm" onclick="Complete()">Complete</button>*@
        @*<button type="submit" value="Complete" id="btnComplete" class="btn btn-sm btn-light" onclick="Complete()">
                Complete
            </button>*@
        @*onclick="GetSelectedTextValue()"*@
        <input type="submit" value="Complete" id="btnComplete" style="width:95px" class="btn btn-success btn-sm" />

    </div>
</div>

<div id="alert_placeholder"></div>
<span id="message"></span>


<div class="row">
    <div class="col-xs-12">
        <h3 class="header smaller lighter blue">Up And Grade Mapping</h3>
        <div class="clearfix">
            <div class="pull-right tableTools-container"></div>
        </div>
        <div class="table-header">
            Results for "UP AND GRADE MAPPING"
        </div>
        <div class="form-horizondal" id="frmdetl" style="overflow-y: scroll; overflow-x: scroll; height:auto">
            <table id="dynamic-tabl" class="table table-striped table-bordered table-hover alert-dark table-condensed">
                <thead>
                    <tr>
                        <th>SNO</th>
                        <th>CROP</th>
                        <th>VARIETY</th>
                        <th>BUYER_GRADE_GROUP</th>
                        <th>CLASSIFIER_GRADE_GROUP</th>
                        <th>PAIR_TYPE</th>

                        <th></th>
                    </tr>
                </thead>
                <tbody id="tbody"></tbody>
            </table>
        </div>
    </div>
</div>

<div id="loader">
</div>


<script src="~/assets/js/jquery-2.1.4.min.js"></script>
<script>
    bootstrap_alert = function () { }
    bootstrap_alert.warning = function (message, status) {
        if (status == "success") {
            $('#alert_placeholder').html('<div class="alert alert-success" role="alert"><a class="close" data-dismiss="alert">×</a><span>' + message + '</span></div>')
        }
        else if (status == "error") {
            $('#alert_placeholder').html('<div class="alert alert-danger" role="alert"><a class="close" data-dismiss="alert">×</a><span>' + message + '</span></div>')
        }
        $("#alert_placeholder").fadeTo(5000, 500).slideUp(500, function () {
            $("#alert_placeholder").slideUp(500);
        });
    }
    $(document).ready(function () {
        $('.alert').hide();
        var spinner = $('#loader');


        $('#btnSubmit').on('click', function (event) {
            var CropYearList = $('#ddlCropYear').val();
            var VarietyList = $('#ddlVariety').val();
            GetGradeMapping(CropYearList, VarietyList);
        });
        function GetGradeMapping(CropYear, Variety) {
            spinner.show();
            var tblContent = '';
            $.ajax({
                type: 'GET',
                url: '/UpAndDownGradeMappingNew/GetGradeMappingDetails',
                data: { cropYear: CropYear, variety: Variety },
                success: function (msg) {
                    let data = $.parseJSON(msg);
                    if (data == "Error: Unpair Count : 0") {

                        spinner.hide();
                    }
                    else {
                        for (var i = 0; i < data.length; i++) {
                            var j = i + 1;
                            var IndexID = "" + j;
                            tblContent = tblContent + '<tr>'
                                + '<td class="trBg" style="text-align:center;" >' + j + '</td >'
                                + '<td class="trBg">' + data[i].CROP + '</td>'
                                + '<td class="trBg" style="text-align:center;">' + data[i].VARIETY + '</td>'
                                + '<td class="trBg">' + data[i].BUYER_GRADE_GRP + '</td>'
                                + '<td class="trBg">' + data[i].CLASSIFIER_GRADE_GRP + '</td>'
                                + '<td class="trBg">' + '<select id="ddlNationality' + i + '"><option selected="selected" value="U" >UP</option><option selected="selected" value="D" >DOWN</option><option selected="selected" value="E" >EQUAL</option><option selected="selected" value="0" >None</option></select>' + '</td>'

                                + '</tr >';
                        }
                    }
                    var dt1 = $('#dynamic-tabl').DataTable();
                    dt1.destroy();
                    $('#dynamic-tabl tbody').empty();
                    $('#dynamic-tabl tbody').append(tblContent);
                    spinner.hide();


                    if (msg.startsWith("Error", 1)) {
                        bootstrap_alert.warning(msg, "error");
                    }
                    else if (msg.startsWith("Success", 1)) {

                        //window.location = "/GPIL_CROP_MASTER/Index";
                        bootstrap_alert.warning('Successful ' + msg, "success");
                    }


                    var myTable = $('#dynamic-tabl')
                      .DataTable({
                          bAutoWidth: false,
                          'order': [[0, 'asc']],
                          "aoColumns": [
                              null, null, null, null, null,
                              {},
                          ],
                          select: {
                              style: 'multi'
                          }
                      });
                    new $.fn.dataTable.Buttons(myTable, {
                        buttons: [
                                {
                                    "extend": "colvis",
                                    "text": "<i class='fa fa-search bigger-110 blue'></i> <span class='hidden'>Show/hide columns</span>",
                                    "className": "btn btn-white btn-primary btn-bold",
                                },
                                {
                                    "extend": "copy",
                                    "text": "<i class='fa fa-copy bigger-110 pink'></i> <span class='hidden'>Copy to clipboard</span>",
                                    "className": "btn btn-white btn-primary btn-bold"
                                },
                                {
                                    "extend": "csv",
                                    "text": "<i class='fa fa-database bigger-110 orange'></i> <span class='hidden'>Export to CSV</span>",
                                    "className": "btn btn-white btn-primary btn-bold"
                                },
                                {
                                    "extend": "excel",
                                    "text": "<i class='fa fa-file-excel-o bigger-110 green'></i> <span class='hidden'>Export to Excel</span>",
                                    "className": "btn btn-white btn-primary btn-bold"
                                },
                                {
                                    "extend": "pdf",
                                    "text": "<i class='fa fa-file-pdf-o bigger-110 red'></i> <span class='hidden'>Export to PDF</span>",
                                    "className": "btn btn-white btn-primary btn-bold"
                                },
                                {
                                    "extend": "print",
                                    "text": "<i class='fa fa-print bigger-110 grey'></i> <span class='hidden'>Print</span>",
                                    "className": "btn btn-white btn-primary btn-bold",
                                    autoPrint: false,
                                    message: 'This print was produced using the Print button for DataTables'
                                }
                        ]
                    });
                    myTable.buttons().container().appendTo($('.tableTools-container'));
                    //style the message box
                    var defaultCopyAction = myTable.button(1).action();
                    myTable.button(1).action(function (e, dt, button, config) {
                        defaultCopyAction(e, dt, button, config);
                        $('.dt-button-info').addClass('gritter-item-wrapper gritter-info gritter-center white');
                    });
                    var defaultColvisAction = myTable.button(0).action();
                    myTable.button(0).action(function (e, dt, button, config) {
                        defaultColvisAction(e, dt, button, config);
                        if ($('.dt-button-collection > .dropdown-menu').length == 0) {
                            $('.dt-button-collection')
                                .wrapInner('<ul class="dropdown-menu dropdown-light dropdown-caret dropdown-caret" />')
                                .find('a').attr('href', '#').wrap("<li />")
                        }
                        $('.dt-button-collection').appendTo('.tableTools-container .dt-buttons')
                    });
                    setTimeout(function () {
                        $($('.tableTools-container')).find('a.dt-button').each(function () {
                            var div = $(this).find(' > div').first();
                            if (div.length == 1) div.tooltip({ container: 'body', title: div.parent().text() });
                            else $(this).tooltip({ container: 'body', title: $(this).text() });
                        });
                    }, 2000);
                    myTable.on('select', function (e, dt, type, index) {
                        if (type === 'row') {
                            $(myTable.row(index).node()).find('input:checkbox').prop('checked', true);
                        }
                    });
                    myTable.on('deselect', function (e, dt, type, index) {
                        if (type === 'row') {
                            $(myTable.row(index).node()).find('input:checkbox').prop('checked', false);
                        }
                    });
                    /////////////////////////////////
                    //table checkboxes
                    $('th input[type=checkbox], td input[type=checkbox]').prop('checked', false);
                    //select/deselect all rows according to table header checkbox
                    $('#dynamic-tabl > thead > tr > th input[type=checkbox], #dynamic-tabl_wrapper input[type=checkbox]').eq(0).on('click', function () {
                        var th_checked = this.checked;//checkbox inside "TH" table header
                        $('#dynamic-tabl').find('tbody > tr').each(function () {
                            var row = this;
                            if (th_checked) myTable.row(row).select();
                            else myTable.row(row).deselect();
                        });
                    });
                    //select/deselect a row when the checkbox is checked/unchecked
                    $('#dynamic-tabl').on('click', 'td input[type=checkbox]', function () {
                        var row = $(this).closest('tr').get(0);
                        if (this.checked) myTable.row(row).deselect();
                        else myTable.row(row).select();
                    });
                    $(document).on('click', '#dynamic-tabl.dropdown-toggle', function (e) {
                        e.stopImmediatePropagation();
                        e.stopPropagation();
                        e.preventDefault();
                    });
                },
                error: function (msg) {
                    alert(0); alert(msg);
                }
            });
        }


        $('#btnComplete').on('click', function () {


            var LUDGM = {};
            var UpDownGradeMappingNew = new Array();
            var i = 0;
            $("#dynamic-tabl tbody tr").each(function () {


                var deptSelectedValue = $("#ddlNationality" + i).val();


                var row = $(this).closest("tr");
                var UpDownGradeMapping = {};
                UpDownGradeMapping.SNO = row.find("td:eq(0)")[0].innerText;
                UpDownGradeMapping.CROP = row.find("td:eq(1)")[0].innerText;
                UpDownGradeMapping.VARIETY = row.find("td:eq(2)")[0].innerText;
                UpDownGradeMapping.BUYER_GRADE_GRP = row.find("td:eq(3)")[0].innerText;
                UpDownGradeMapping.CLASSIFIER_GRADE_GRP = row.find("td:eq(4)")[0].innerText;
                UpDownGradeMapping.PAIR_TYPE = deptSelectedValue;
                UpDownGradeMappingNew.push(UpDownGradeMapping);
                i++;
            });
            if (UpDownGradeMappingNew.length > 0) {
                LUDGM.UpDownGradeMappingNew = UpDownGradeMappingNew;

                //Send the JSON array to Controller using AJAX.
                $.ajax({
                    type: "POST",
                    url: "/UpAndDownGradeMappingNew/UpDownGradeMappingComplete",
                    data: JSON.stringify(LUDGM),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) {
                        if (msg.startsWith("Error", 1)) {
                            bootstrap_alert.warning(msg, "error");
                        }
                        else if (msg.startsWith("Success", 1)) {

                            window.location = "/UpAndDownGradeMappingNew/UpAndDownGradeMappingNewIndex";
                            bootstrap_alert.warning('Successful ' + msg, "success");
                        }
                    },
                    error: function (msg) {
                        bootstrap_alert.warning(msg.responseText, "error");
                    }
                });
            } else {
                bootstrap_alert.warning('THERE IS NO DATA IN GRID!!', "error");
            }

        });

    });
</script>
