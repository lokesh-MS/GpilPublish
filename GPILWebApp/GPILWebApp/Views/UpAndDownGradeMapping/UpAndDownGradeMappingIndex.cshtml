
@{
    ViewBag.Root = "Master";
    ViewBag.Title = "UpAndDownGradeMappingIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2 style="text-align:center; color:#438EB9"> Up And Down Grade Mapping </h2>


<div class="row">


    <div class="col-md-3">
        <div class="sm-3">

            <label>CROP</label>
            @Html.DropDownList("CROP", new SelectList(ViewBag.GPIL_CROP_MASTERs, "CROP", "CROP_YEAR"), "Please select", new { @id = "ddlCropYear", @class = "form-control" })
        </div>
    </div>



    <div class="col-md-3">
        <div class="sm-3">

            <label>VARIETY</label>
            @Html.DropDownList("VARIETY", new SelectList(ViewBag.GPIL_VARIETY_MASTERs, "VARIETY", "VARIETY_NAME"), "Please select", new { @id = "ddlVariety", @class = "form-control" })
        </div>
    </div>
    <div class="col-md-3">
        <div class="sm-3">
            @*<input id="btnView" type="button" value="View" />View*@
            @*<div><label></label></div>*@
           

        </div>
    </div>

</div>



<div class="row">

    <div class="col-md-3">
        <div><label></label></div>
        <button type="submit" value="Submit" id="btnSubmit" class="btn btn-sm btn-success">
            View

        </button>
        <button type="reset" class="btn btn-sm btn-default">
            Clear

        </button>
        <button type="reset" class="btnSelect">
            ADD TO MASTER

        </button>
    </div>
</div>




<div id="alert_placeholder"></div>
<span id="message"></span>


<div class="row">
    <div class="col-xs-12">
        <h3 class="header smaller lighter blue"></h3>
        <div class="clearfix">
            <div class="pull-right tableTools-container"></div>
        </div>
        <div class="table-header">
            Results for "UP AND DOWN GRADE MAPPING"
        </div>
        <div class="form-horizondal" id="frmdetl" style="overflow-y: scroll; overflow-x: scroll; height:auto">
            <table id="dynamic-tabl" class="table table-striped table-bordered table-hover alert-dark table-condensed">
                <thead>
                    <tr>
                        <th>SNO</th>
                        <th>CROP</th>
                        <th>VARIETY</th>
                        <th>BUYER_GRADE_GROUP</th>
                        <th>CLASSIFIER_GRADE_GROUP</th>
                        <th>PAIR_TYPE</th>

                        <th></th>
                    </tr>
                </thead>
                <tbody id="tbody"></tbody>
            </table>
        </div>
    </div>
</div>
<div id="UnpairCount"></div>


<script src="~/assets/js/jquery-2.1.4.min.js"></script>
<script>

    bootstrap_alert = function () { }
    bootstrap_alert.warning = function (message, status) {
        if (status == "success") {
            $('#alert_placeholder').html('<div class="alert alert-success" role="alert"><a class="close" data-dismiss="alert">×</a><span>' + message + '</span></div>')
        }
        else if (status == "error") {
            $('#alert_placeholder').html('<div class="alert alert-danger" role="alert"><a class="close" data-dismiss="alert">×</a><span>' + message + '</span></div>')
        }
        $("#alert_placeholder").fadeTo(10000, 500).slideUp(500, function () {
            $("#alert_placeholder").slideUp(500);
        });
    }


    $(document).ready(function () {
        $('.alert').hide();

        $('#btnSubmit').on('click', function (event) {
            var Croplist = $('#ddlCropYear').val();
            var Varietylist = $('#ddlVariety').val();
            GetUpDownMapping(Croplist, Varietylist);
        });


        function GetUpDownMapping(Crop, Variety) {
            debugger;
            var tblContent = '';
            var tblContentLnDet = '<table id="dynamic-tabl3" class="table table-striped table-bordered table-hover alert-dark table-condensed">';
            $.ajax({
                type: 'GET',
                url: '/UpAndDownGradeMapping/GetUpAndDownMappingDetails',
                data: { crop: Crop, variety: Variety },
                success: function (msg) {
                    //$('#ddlOrgnMaster').val() = "";
                    let data = JSON.parse(msg);
                    //alert(0); alert("Successfully");
                    for (var i = 0; i < data.length; i++) {
                        var j = i + 1;
                        var IndexID = "" + j;
                        tblContent = tblContent + '<tr>'
                            + '<td class="trBg" style="text-align:center;" >' + j + '</td >'
                            + '<td class="trBg" style="text-align:center;">' + data[i].CROP + '</td>'
                            + '<td class="trBg" style="text-align:center;">' + data[i].VARIETY + '</td>'
                            + '<td class="trBg" style="text-align:center;">' + data[i].BUYER_GRADE_GRP + '</td>'
                            + '<td class="trBg" style="text-align:center;">' + data[i].CLASSIFIER_GRADE_GRP + '</td>'
                            + '<td class="trBg" style="text-align:center; width:200px">' + data[i].PAIR_TYPE + '</td>'
                            + '</tr >';
                    }

                    //dt1.destroy
                    var dt1 = $('#dynamic-tabl').DataTable();
                    dt1.destroy();
                    $('#dynamic-tabl tbody').empty();
                    $('#dynamic-tabl tbody').append(tblContent);



                    tblContentLnDet = tblContentLnDet + '<tr>'
                            + '<td class="trBg" style="text-align:center;" ><label style="text-align:center; color:red">Unpair Count : ' + data.length + '  </label></td >'

                            + '</tr ></table>';
                    $('#UnpairCount').empty();
                    $('#UnpairCount').append(tblContentLnDet);

                    if (msg.startsWith("Error", 1)) {
                        bootstrap_alert.warning(msg, "error");
                    }
                    else if (msg.startsWith("Success", 1)) {

                        //window.location = "/GPIL_CROP_MASTER/Index";
                        bootstrap_alert.warning('Successful ' + msg, "success");
                    }

                    var myTable1 =
       $('#dynamic-tabl')
       //.wrap("<div class='dataTables_borderWrap' />")   //if you are applying horizontal scrolling (sScrollX)
     .DataTable({
         "bLengthChange": true,
         "paging": true,
         "jQueryUI": true,
         bAutoWidth: false,
         'order': [[0, 'desc']],
         "aoColumns": [
              null, null, null, null, null,
             { "bSortable": false },

            // { "bSortable": false }
         ],
         "aaSorting": [],

         //"bProcessing": true,
         //"bServerSide": true,
         //"sAjaxSource": "http://127.0.0.1/table.php"	,

         //,
         //"sScrollY": "200px",
         // "bPaginate": true,

         //"sScrollX": "100%",
         //"sScrollXInner": "120%",
         //"bScrollCollapse": true,
         //Note: if you are applying horizontal scrolling (sScrollX) on a ".table-bordered"
         //you may want to wrap the table inside a "div.dataTables_borderWrap" element

         //"iDisplayLength": 50,


         select: {
             style: 'multi'
         }
     });



                    $.fn.dataTable.Buttons.defaults.dom.container.className = 'dt-buttons btn-overlap btn-group btn-overlap';

                    new $.fn.dataTable.Buttons(myTable1, {
                        buttons: [
                          {
                              "extend": "colvis",
                              "text": "<i class='fa fa-search bigger-110 blue'></i> <span class='hidden'>Show/hide columns</span>",
                              "className": "btn btn-white btn-primary btn-bold",
                              columns: ':not(:first):not(:last)'
                          },
                          {
                              "extend": "copy",
                              "text": "<i class='fa fa-copy bigger-110 pink'></i> <span class='hidden'>Copy to clipboard</span>",
                              "className": "btn btn-white btn-primary btn-bold"
                          },
                          {
                              "extend": "csv",
                              "text": "<i class='fa fa-database bigger-110 orange'></i> <span class='hidden'>Export to CSV</span>",
                              "className": "btn btn-white btn-primary btn-bold"
                          },
                          {
                              "extend": "excel",
                              "text": "<i class='fa fa-file-excel-o bigger-110 green'></i> <span class='hidden'>Export to Excel</span>",
                              "className": "btn btn-white btn-primary btn-bold"
                          },
                          {
                              "extend": "pdf",
                              "text": "<i class='fa fa-file-pdf-o bigger-110 red'></i> <span class='hidden'>Export to PDF</span>",
                              "className": "btn btn-white btn-primary btn-bold"
                          },
                          {
                              "extend": "print",
                              "text": "<i class='fa fa-print bigger-110 grey'></i> <span class='hidden'>Print</span>",
                              "className": "btn btn-white btn-primary btn-bold",
                              autoPrint: false,
                              message: 'This print was produced using the Print button for DataTables'
                          }
                        ]
                    });
                    myTable1.buttons().container().appendTo($('.tableTools-container1'));

                    //style the message box
                    var defaultCopyAction = myTable1.button(1).action();
                    myTable1.button(1).action(function (e, dt, button, config) {
                        defaultCopyAction(e, dt, button, config);
                        $('.dt-button-info').addClass('gritter-item-wrapper gritter-info gritter-center white');
                    });


                    var defaultColvisAction = myTable1.button(0).action();
                    myTable1.button(0).action(function (e, dt, button, config) {

                        defaultColvisAction(e, dt, button, config);


                        if ($('.dt-button-collection > .dropdown-menu').length == 0) {
                            $('.dt-button-collection')
                            .wrapInner('<ul class="dropdown-menu dropdown-light dropdown-caret dropdown-caret" />')
                            .find('a').attr('href', '#').wrap("<li />")
                        }
                        $('.dt-button-collection').appendTo('.tableTools-container1 .dt-buttons')
                    });

                    ////

                    setTimeout(function () {
                        $($('.tableTools-container1')).find('a.dt-button').each(function () {
                            var div = $(this).find(' > div').first();
                            if (div.length == 1) div.tooltip({ container: 'body', title: div.parent().text() });
                            else $(this).tooltip({ container: 'body', title: $(this).text() });
                        });
                    }, 2000);





                    myTable1.on('select', function (e, dt, type, index) {
                        if (type === 'row') {
                            $(myTable1.row(index).node()).find('input:checkbox').prop('checked', true);
                        }
                    });
                    myTable1.on('deselect', function (e, dt, type, index) {
                        if (type === 'row') {
                            $(myTable1.row(index).node()).find('input:checkbox').prop('checked', false);
                        }
                    });




                    /////////////////////////////////
                    //table checkboxes
                    $('th input[type=checkbox], td input[type=checkbox]').prop('checked', false);

                    //select/deselect all rows according to table header checkbox
                    $('#dynamic-tabl > thead > tr > th input[type=checkbox], #dynamic-tabl_wrapper input[type=checkbox]').eq(0).on('click', function () {
                        var th_checked = this.checked;//checkbox inside "TH" table header

                        $('#dynamic-tabl').find('tbody > tr').each(function () {
                            var row = this;
                            if (th_checked) myTable1.row(row).select();
                            else myTable1.row(row).deselect();
                        });
                    });

                    //select/deselect a row when the checkbox is checked/unchecked
                    $('#dynamic-tabl').on('click', 'td input[type=checkbox]', function () {
                        var row = $(this).closest('tr').get(0);
                        if (this.checked) myTable1.row(row).deselect();
                        else myTable1.row(row).select();
                    });



                    $(document).on('click', '#dynamic-tabl.dropdown-toggle', function (e) {
                        e.stopImmediatePropagation();
                        e.stopPropagation();
                        e.preventDefault();
                    });








                },


                error: function (response) {

                    //if (response.startsWith("Error", 1)) {
                    //    bootstrap_alert.warning(response, "error");
                    //}
                    bootstrap_alert.warning(response.responseText, "error");
                }



            });



        }




        $("#dynamic-tabl").on('click', '.btnSelect', function () {
            // get the current row
            var currentRow = $(this).closest("tr");

            //var col1 = currentRow.find("td:eq(0)").text(); // get current row 1st TD value
            //var col2 = currentRow.find("td:eq(1)").text(); // get current row 2nd TD
            var col1 = currentRow.find("td:eq(1)").text();
            var CroList = col1;
            var col2 = currentRow.find("td:eq(1)").text();
            var VarietyList = col2;
            var col3 = currentRow.find("td:eq(1)").text();
            var BuyerGradeList = col3;
            var col4 = currentRow.find("td:eq(1)").text();
            var ClassifierGradeList = col4;
            var col5 = currentRow.find("td:eq(1)").text();
            var PairTypeList = col5;

            //type: 'GET',
            //url: '/UpAndDownGradeMapping/GetUpAndDownMappingDetails',
            @*url: '@Url.Action("InvoiceVerify", "InvoiceVerification")',*@
            //dataType: 'json',
            $.ajax({

                type: 'POST',
                url: '/UpAndDownGradeMapping/AddToMasterDetails',
                data: { crop: CroList, variety: VarietyList, buyerGrade: BuyerGradeList, classifierGrade: ClassifierGradeList, pairType: PairTypeList },
                success: function (data) {
                    if (data.result == 'Redirect') {
                        window.location = data.url;
                    }
                },
                error: function (err) {

                }

            });
        });

        //    function GetSupplierVerification(PoNumber, SupplierCode) {
        //        var dt01 = $('#dynamic-tabl').DataTable();
        //        var tblContent = '';
        //        $.ajax({
        //            type: 'GET',
        //            url: '/SupplierVerification/SupplierVerification',
        //            data: { poNumber: PoNumber, supplierCode: SupplierCode },
        //            success: function (msg) {
        //                let data = $.parseJSON(msg);
        //                for (var i = 0; i < data.length; i++) {

        //                    var j = i + 1;
        //                    var IndexID = "" + j;
        //                    tblContent = tblContent + '<tr>'
        //                        + '<td class="trBg" style="text-align:center;" >' + j + '</td >'
        //                        + '<td class="trBg">' + data[i].HEADER_ID + '</td>'
        //                        + '<td class="trBg" style="text-align:center;">' + data[i].LP4_NUMBER + '</td>'
        //                        + '<td class="trBg">' + data[i].SUPP_CODE + '</td>'
        //                        + '<td class="trBg">' + data[i].SITE_NAME + '</td>'
        //                        + '<td class="trBg">' + data[i].RECEV_ORGN_CODE + '</td>'
        //                        + '<td class="trBg">' + data[i].CROP + '</td>'
        //                        + '<td class="trBg">' + data[i].VARIETY + '</td>'
        //                        + '<td class="trBg">' + data[i].BALES + '</td>'
        //                        + '<td class="trBg">' + data[i].QUANTITY + '</td>'
        //                        + '<td class="trBg">  <button class="btnSelect">Verify</button></td>'
        //                        + '</tr >';
        //                }
        //                var dt1 = $('#dynamic-tabl').DataTable();
        //                //dt1.destroy();
        //                $('#dynamic-tabl tbody').empty();
        //                $('#dynamic-tabl tbody').append(tblContent);
        //                $('#dynamic-table').DataTable({
        //                    //'paging': true,
        //                    //'pageLength': 10,
        //                    //'lengthChange': true,
        //                    // 'searching': true,
        //                    //'ordering': true,
        //                    //'info': true,
        //                    // 'autoWidth': true,
        //                    //'buttons': ['excel', 'print']
        //                });
        //            },
        //            error: function (msg) {
        //                alert(0); alert(msg);
        //            }
        //        });
        //    }






    });
</script>