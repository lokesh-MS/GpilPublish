@model GPILWebApp.Models.GPIL_SUPPLIER_MASTER

@{
    ViewBag.Root = "Master";
    ViewBag.Title = "Supplier Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 style="text-align:center; color:#438EB9">Supplier Creation</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })



        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Supplier Code </label>
                    @Html.EditorFor(model => model.SUPP_CODE, new { htmlAttributes = new { @class = "form-control", id = "txtSupplierCode", minlength="3", maxlength = "8", @onchange = "UserIDCheck();", oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);", type = "number" } })
                    @Html.ValidationMessageFor(model => model.SUPP_CODE, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Supplier Name </label>
                    @Html.EditorFor(model => model.SUPP_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtSupplierName", minlength = "3", maxlength = "40" } })
                    @Html.ValidationMessageFor(model => model.SUPP_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Site Name </label>
                    @Html.EditorFor(model => model.SITE_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtSiteName", minlength = "3", maxlength = "40" } })
                    @Html.ValidationMessageFor(model => model.SITE_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Supplier Address1 </label>
                    @Html.EditorFor(model => model.SUPP_ADDRESS1, new { htmlAttributes = new { @class = "form-control", id = "txtAdd1", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.SUPP_ADDRESS1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Supplier Address2 </label>
                    @Html.EditorFor(model => model.SUPP_ADDRESS2, new { htmlAttributes = new { @class = "form-control", id = "txtAdd2", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.SUPP_ADDRESS2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Supplier Address3 </label>
                    @Html.EditorFor(model => model.SUPP_ADDRESS3, new { htmlAttributes = new { @class = "form-control", id = "txtAdd3", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.SUPP_ADDRESS3, "", new { @class = "text-danger" })
                </div>
            </div>

            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="sm-3">
                        <label class="control-label">Supplier Address4 </label>
                        @Html.EditorFor(model => model.SUPP_ADDRESS4, new { htmlAttributes = new { @class = "form-control", id = "txtAdd4", minlength = "3", maxlength = "30" } })
                        @Html.ValidationMessageFor(model => model.SUPP_ADDRESS4, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="sm-3">
                        <label class="control-label">Supplier Address5 </label>
                        @Html.EditorFor(model => model.SUPP_ADDRESS5, new { htmlAttributes = new { @class = "form-control", id = "txtAdd5", minlength = "3", maxlength = "30" } })
                        @Html.ValidationMessageFor(model => model.SUPP_ADDRESS5, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="sm-3">
                        <label class="control-label">Supplier Address6 </label>
                        @Html.EditorFor(model => model.SUPP_ADDRESS6, new { htmlAttributes = new { @class = "form-control", id = "txtAdd6", minlength = "3", maxlength = "30" } })
                        @Html.ValidationMessageFor(model => model.SUPP_ADDRESS4, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="sm-3">
                        <label class="control-label">Supplier Address7 </label>
                        @Html.EditorFor(model => model.SUPP_ADDRESS7, new { htmlAttributes = new { @class = "form-control", id = "txtAdd7", minlength = "3", maxlength = "30" } })
                        @Html.ValidationMessageFor(model => model.SUPP_ADDRESS7, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="sm-3">
                        <label class="control-label">PIN Code </label>

                        @Html.EditorFor(model => model.SUPP_ADDRESS8, new { htmlAttributes = new { @class = "form-control", id = "txtAdd8", minlength = "6", maxlength = "6" } })
                        @Html.ValidationMessageFor(model => model.SUPP_ADDRESS8, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="sm-3">
                        <label class="control-label">Telephone Number </label>
                        @*//oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" ,   type = "number"   , maxlength = "10"*@
                        @Html.EditorFor(model => model.TEL_NO, new
               {
                   htmlAttributes = new
                   {
                       id = "txtTelNo",
                       @class = "form-control",
                       oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",
                       type = "number",
                       minlength = "10",
                       maxlength = "10"
                   }
               })
                        @Html.ValidationMessageFor(model => model.TEL_NO, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Mobile Number </label>
                    @*//oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" ,   type = "number"   , maxlength = "10"*@
                    @Html.EditorFor(model => model.MOBILE_NO, new
               {
                   htmlAttributes = new
                   {
                       id = "txtMobNo",
                       @class = "form-control",
                       oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",
                       type = "number",
                       maxlength = "10"
                   }
               })
                    @Html.ValidationMessageFor(model => model.MOBILE_NO, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Email ID </label>

                    @Html.EditorFor(model => model.EMAIL_ID, new { htmlAttributes = new { @class = "form-control", id = "txtEmailID", type = "email", minlength = "5", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.EMAIL_ID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Status </label>
                    @Html.DropDownListFor(model => model.STATUS, new List<SelectListItem> {
                    new SelectListItem {Text="Y" ,Value="Y" },
                    new SelectListItem {Text="N" ,Value="N" }
               }, "SELECT STATUS", new { @class = "form-control", @id = "ddlStatus" })
                    @Html.ValidationMessageFor(model => model.STATUS, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Gpil Supplier Code </label>

                    @Html.EditorFor(model => model.GPIL_SUPP_CODE, new { htmlAttributes = new { @class = "form-control", id = "txtGpilSuppCode", minlength = "3", maxlength = "15 " } })
                    @Html.ValidationMessageFor(model => model.GPIL_SUPP_CODE, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">GST Provisional ID </label>

                    @Html.EditorFor(model => model.ATTRIBUTE1, new { htmlAttributes = new { @class = "form-control", id = "txtGstProvID", minlength = "5", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.ATTRIBUTE1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">GST Register No </label>

                    @Html.EditorFor(model => model.ATTRIBUTE2, new { htmlAttributes = new { @class = "form-control", id = "txtGstRegNo", minlength = "5", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.ATTRIBUTE2, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">

                    <br />
                    <input type="submit" id="btnSubmit" value="Create" style="width:95px" class="btn btn-success btn-sm" />
                    <input type="button" id="btnView" value="View" style="width:95px" onclick=@("window.location.href='" + @Url.Action("Index", "GPIL_SUPPLIER_MASTER") + "'") ; class="btn btn-primary btn-sm" />

                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label"></label>
                </div>
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>

    function UserIDCheck() {
        var SuppID = $("#txtSupplierCode").val();
        $.ajax({
            url: '@Url.Action("CheckSupplierAvailability", "GPIL_SUPPLIER_MASTER")',
            type: "POST",
            datatype: 'json',
            data: { 'Supplirerdata': SuppID },
            success: function (data) {
                if (data != '') {
                    var user = JSON.parse(data);
                    $("#Status").html('<font color="Green"></font>');
                    $("#txtSupplierCode").css("border-color", "Green");
                    $('#txtSupplierName').val(user[0].SUPP_NAME);
                    $('#txtSiteName').val(user[0].SITE_NAME);
                    $('#txtAdd1').val(user[0].SUPP_ADDRESS1);
                    $('#txtAdd2').val(user[0].SUPP_ADDRESS2);
                    $('#txtAdd3').val(user[0].SUPP_ADDRESS3);
                    $('#txtAdd4').val(user[0].SUPP_ADDRESS4);
                    $('#txtAdd5').val(user[0].SUPP_ADDRESS5);
                    $('#txtAdd6').val(user[0].SUPP_ADDRESS6);
                    $('#txtAdd7').val(user[0].SUPP_ADDRESS7);
                    $('#txtAdd8').val(user[0].SUPP_ADDRESS8);
                    $('#txtTelNo').val(user[0].TEL_NO);
                    $('#txtMobNo').val(user[0].MOBILE_NO);
                    $('#txtEmailID').val(user[0].EMAIL_ID);
                    $('#ddlStatus').val(user[0].STATUS);
                    $('#txtGpilSuppCode').val(user[0].GPIL_SUPP_CODE);
                    $('#txtGstProvID').val(user[0].ATTRIBUTE1);
                    $('#txtGstRegNo').val(user[0].ATTRIBUTE2);
                    $('#btnSubmit').val("Update");
                }
                if (data == 0) {
                    $("#Status").html('<font color="Green"> Taken !. you can create ID.</font>');
                    $("#txtSupplierCode").css("border-color", "Green");
                    $('#txtSupplierName').val('');
                    $('#txtSiteName').val('');
                    $('#txtAdd1').val('');
                    $('#txtAdd2').val('');
                    $('#txtAdd3').val('');
                    $('#txtAdd4').val('');
                    $('#txtAdd5').val('');
                    $('#txtAdd6').val('');
                    $('#txtAdd7').val('');
                    $('#txtAdd8').val('');
                    $('#txtTelNo').val('');
                    $('#txtMobNo').val('');
                    $('#txtEmailID').val('');
                    $('#ddlStatus').val('');
                    $('#txtGpilSuppCode').val('');
                    $('#txtGstProvID').val('');
                    $('#txtGstRegNo').val('');
                    $('#btnSubmit').val("Create");
                }
            },
            error: function () { alert("Huh? What? What did you need?.") }
        });
    }




</script>