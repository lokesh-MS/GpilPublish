@model GPILWebApp.ViewModel.FarmerMaster_FarmerCropHistory

@{
    ViewBag.Root = "Master";
    ViewBag.Title = "Farmer Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 style="text-align:center; color:#438EB9">Farmer Creation</h2>

@using (Html.BeginForm("Create", "GPIL_FARMER_MASTER", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Farmer Code </label>

                    @Html.EditorFor(model => model.User.FARM_CODE, new { htmlAttributes = new { @class = "form-control", id = "txtFarmerCode", @onchange = "UserIDCheck();" } })
                    @Html.ValidationMessageFor(model => model.User.FARM_CODE, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Farmer Category </label>
                    @Html.EditorFor(model => model.User.FARM_CATEGORY, new { htmlAttributes = new { @class = "form-control", id = "txtFARM_CATEGORY", placeholder = "REGISTERED" } })
                    @*@Html.DropDownListFor(model => model.User.FARM_CATEGORY, new List<SelectListItem> {
                             new SelectListItem {Text="REGISTERED" ,Value="REGISTERED" },
                             //new SelectListItem {Text="UNREGISTERED" ,Value="UNREGISTERED" }
                        }, new { @class = "form-control", id = "txtFarmerCategory" })*@
                    @Html.ValidationMessageFor(model => model.User.FARM_CATEGORY, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Farmer Name </label>

                    @Html.EditorFor(model => model.User.FARM_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtFarmerName", } })
                    @Html.ValidationMessageFor(model => model.User.FARM_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Farmer Father Name </label>

                    @Html.EditorFor(model => model.User.FARM_FATHER_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtFarmerFatherName", } })
                    @Html.ValidationMessageFor(model => model.User.FARM_FATHER_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Village Code </label>
                    @Html.DropDownListFor(model => model.User.VILLAGE_CODE, (IEnumerable<SelectListItem>)ViewData["GPIL_VILLAGE_MASTER"] as SelectList, "SELECT VILLAGE CODE", new { @class = "form-control", @id = "ddlVillageCode" })
                    @Html.ValidationMessageFor(model => model.User.VILLAGE_CODE, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Soil Type </label>

                    @Html.DropDownListFor(model => model.User.SOIL_TYPE, (IEnumerable<SelectListItem>)ViewData["GPIL_SOIL_MASTER"] as SelectList, "SELECT SOIL TYPE", new { @class = "form-control", @id = "ddlSoilType" })
                    @Html.ValidationMessageFor(model => model.User.SOIL_TYPE, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Address 1 </label>

                    @Html.EditorFor(model => model.User.FARM_ADDRESS1, new { htmlAttributes = new { @class = "form-control", id = "txtAdd1", } })
                    @Html.ValidationMessageFor(model => model.User.FARM_ADDRESS1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Address 2 </label>

                    @Html.EditorFor(model => model.User.FARM_ADDRESS2, new { htmlAttributes = new { @class = "form-control", id = "txtAdd2", } })
                    @Html.ValidationMessageFor(model => model.User.FARM_ADDRESS2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Address 3 </label>

                    @Html.EditorFor(model => model.User.FARM_ADDRESS3, new { htmlAttributes = new { @class = "form-control", id = "txtAdd3", } })
                    @Html.ValidationMessageFor(model => model.User.FARM_ADDRESS3, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Address 4 </label>

                    @Html.EditorFor(model => model.User.FARM_ADDRESS4, new { htmlAttributes = new { @class = "form-control", id = "txtAdd4", } })
                    @Html.ValidationMessageFor(model => model.User.FARM_ADDRESS4, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Address 5 </label>

                    @Html.EditorFor(model => model.User.FARM_ADDRESS5, new { htmlAttributes = new { @class = "form-control", id = "txtAdd5", } })
                    @Html.ValidationMessageFor(model => model.User.FARM_ADDRESS5, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Address 6 </label>

                    @Html.EditorFor(model => model.User.FARM_ADDRESS6, new { htmlAttributes = new { @class = "form-control", id = "txtAdd6", } })
                    @Html.ValidationMessageFor(model => model.User.FARM_ADDRESS6, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Country </label>

                    @Html.EditorFor(model => model.User.COUNTRY, new { htmlAttributes = new { @class = "form-control", id = "txtCountry", placeholder = "India" } })
                    @Html.ValidationMessageFor(model => model.User.COUNTRY, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Pin Code </label>                                    @*oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",*@

                    @Html.EditorFor(model => model.User.PIN_CODE, new { htmlAttributes = new { @class = "form-control", id = "txtPinCode", type = "number", maxlength = "6", oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);", } })
                    @Html.ValidationMessageFor(model => model.User.PIN_CODE, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Telephone Number </label>   @*oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",*@

                    @Html.EditorFor(model => model.User.TEL_NO, new { htmlAttributes = new { @class = "form-control", id = "txtTelNo", type = "number", maxlength = "10", oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);", } })
                    @Html.ValidationMessageFor(model => model.User.TEL_NO, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Mobile Number </label>
                    @*//oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" ,   type = "number"   , maxlength = "10"*@
                    @Html.EditorFor(model => model.User.MOBILE_NO, new
               {
                   htmlAttributes = new
                   {
                       id = "txtMobNo",
                       @class = "form-control",
                       oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",
                       type = "number",
                       maxlength = "10"
                   }
               })
                    @Html.ValidationMessageFor(model => model.User.MOBILE_NO, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Email ID </label>

                    @Html.EditorFor(model => model.User.EMAIL_ID, new { htmlAttributes = new { @class = "form-control", id = "txtEmailID", type = "email", } })
                    @Html.ValidationMessageFor(model => model.User.EMAIL_ID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Status </label>

                    @Html.DropDownListFor(model => model.User.STATUS, new List<SelectListItem> {
                    new SelectListItem {Text="Y" ,Value="Y" },
                    new SelectListItem {Text="N" ,Value="N" }
               }, "SELECT STATUS", new { @class = "form-control", @id = "ddlStatus" })
                    @Html.ValidationMessageFor(model => model.User.STATUS, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Bank Account Number </label>     @*oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",*@

                    @Html.EditorFor(model => model.User.BANK_ACCOUNT_NO, new { htmlAttributes = new { @class = "form-control", id = "txtBankAccNo", type = "number" } })
                    @Html.ValidationMessageFor(model => model.User.BANK_ACCOUNT_NO, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Bank Name </label>

                    @Html.EditorFor(model => model.User.BANK_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtBankName", } })
                    @Html.ValidationMessageFor(model => model.User.BANK_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Branch Name </label>

                    @Html.EditorFor(model => model.User.BRANCH_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtBranchName", } })
                    @Html.ValidationMessageFor(model => model.User.BRANCH_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*IFSC Code </label>

                    @Html.EditorFor(model => model.User.IFSC_CODE, new { htmlAttributes = new { @class = "form-control", id = "txtIFSCCode", } })
                    @Html.ValidationMessageFor(model => model.User.IFSC_CODE, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*CROP</label>

                    @Html.DropDownListFor(model => model.Login.CROP, new SelectList(ViewBag.GPIL_CROP_MASTER, "CROP", "CROP1"), "SELECT CROP CODE", new { @class = "form-control", @id = "ddlCropCode" })
                    @Html.ValidationMessageFor(model => model.Login.CROP, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Variety</label>

                    @Html.DropDownListFor(model => model.Login.VARIETY, new SelectList(ViewBag.GPIL_VARIETY_MASTER, "VARIETY", "VARIETY1"), "SELECT VARIETY CODE", new { @class = "form-control", @id = "ddlVarietyCode" })
                    @Html.ValidationMessageFor(model => model.Login.VARIETY, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Authorized Qty </label>

                    @Html.EditorFor(model => model.Login.ATTRIBUTE1, new { htmlAttributes = new { @class = "form-control", id = "txtAuthorizedQty", } })
                    @Html.ValidationMessageFor(model => model.Login.ATTRIBUTE1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Bright </label>

                    @Html.EditorFor(model => model.Login.ATTRIBUTE2, new { htmlAttributes = new { @class = "form-control", id = "txtBright", } })
                    @Html.ValidationMessageFor(model => model.Login.ATTRIBUTE2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Medium </label>

                    @Html.EditorFor(model => model.Login.ATTRIBUTE3, new { htmlAttributes = new { @class = "form-control", id = "txtMedium", } })
                    @Html.ValidationMessageFor(model => model.Login.ATTRIBUTE3, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Low </label>

                    @Html.EditorFor(model => model.Login.ATTRIBUTE4, new { htmlAttributes = new { @class = "form-control", id = "txtLow", } })
                    @Html.ValidationMessageFor(model => model.Login.ATTRIBUTE4, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Others </label>

                    @Html.EditorFor(model => model.Login.ATTRIBUTE5, new { htmlAttributes = new { @class = "form-control", id = "txtOthers", } })
                    @Html.ValidationMessageFor(model => model.Login.ATTRIBUTE5, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Aadhaar </label>                @*oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",*@

                    @Html.EditorFor(model => model.User.ATTRIBUTE3, new { htmlAttributes = new { @class = "form-control", id = "txtAddhar", minlength = "12", maxlength = "12", type = "number" } })
                    @Html.ValidationMessageFor(model => model.User.ATTRIBUTE3, "", new { @class = "text-danger" })
                    @Html.ValidationMessage("AadhaarNumber", new { @class = "text-danger" })


                </div>
            </div>
            @*red-mark*@
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Red-mark (Fine / Alert)</label>
                    @Html.DropDownListFor(model => model.User.ALERT_MSG, new List<SelectListItem> {
             new SelectListItem {Text="Fine" ,Value="Fine" },
             new SelectListItem {Text="NTRM-Alert" ,Value="NTRM-Alert" },
              new SelectListItem {Text="H.MOIS-Alert" ,Value="H.MOIS-Alert" }
        }, "SELECT RED-MARK ", new { @class = "form-control", @id = "txtRedMark" })
                    @Html.ValidationMessageFor(model => model.User.ALERT_MSG, "", new { @class = "text-danger" })

                    @*@Html.DropDownListFor(model => model.User.STATUS, new List<SelectListItem> {
                             new SelectListItem {Text="Y" ,Value="Y" },
                             new SelectListItem {Text="N" ,Value="N" }
                        }, "SELECT STATUS", new { @class = "form-control", @id = "ddlStatus" })
                               @Html.ValidationMessageFor(model => model.User.STATUS, "", new { @class = "text-danger" })*@
                </div>
            </div>

        </div>




        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <br />
                    <input type="submit" id="btnSubmit" value="Create" style="width:95px" class="btn btn-success btn-sm" />

                    @*<input type="button" id="btnClear" value="Clear" style="width:95px" onclick=@("window.location.href='" + @Url.Action("Index", "GPIL_FARMER_MASTER") + "'") ; class="btn btn-primary btn-sm" />*@
                    <input type="button" id="btnClear" value="Clear" style="width:95px" class="btn btn-primary btn-sm" />
                </div>
            </div>
            @*<div class="col-sm-6">
            <div class="sm-3">
                <label class="control-label"></label>


            </div>
        </div>*@
            <div class="col-sm-6">
                <p id="notify" style="display:none"> @TempData["SuccessMessage"]</p>

            </div>
        </div>






    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/assets/js/jquery-2.1.4.min.js"></script>

<script src="~/assets/js/sweetalert.min.js"></script>
<link href="~/assets/css/sweetalert.css" rel="stylesheet" />
<script>
    var mes = document.getElementById("notify").innerHTML
    if (mes.startsWith("Success", 1)) {
        sweetAlert("Done", mes, "success");
        setTimeout(function () {
            window.location = "/GPIL_FARMER_MASTER/Index";
        }, 2000)
    }
    function UserIDCheck() {
        var FarmerID = $("#txtFarmerCode").val();
        $.ajax({
            url: '@Url.Action("CheckFarmerAvailability", "GPIL_FARMER_MASTER")',
            type: "POST",
            datatype: 'json',
            data: { 'Farmerdata': FarmerID },
            success: function (data) {
                if (data.hasOwnProperty('VillageCode')) {
                    // Farmer code not found in the database, show the village code
                    $('#ddlVillageCode').val(data.VillageCode);
                    $("#Status").html('<font color="Green"> Taken! You can create ID.</font>');
                    $("#txtFarmerCode").css("border-color", "Green");
                    $('#txtFarmerCategory').val('REGISTERED');
                    $('#txtFarmerName').val('');
                    $('#txtFarmerFatherName').val('');
                    $('#ddlSoilType').val('');
                    $('#txtAdd1').val('');
                    $('#txtAdd2').val('');
                    $('#txtAdd3').val('');
                    $('#txtAdd4').val('');
                    $('#txtAdd5').val('');
                    $('#txtAdd6').val('');
                    $('#txtCountry').val('');
                    $('#txtPinCode').val('');
                    $('#txtTelNo').val('');
                    $('#txtMobNo').val('');
                    $('#txtEmailID').val('');
                    $('#ddlStatus').val('');
                    $('#txtBankAccNo').val('');
                    $('#txtBankName').val('');
                    $('#txtBranchName').val('');
                    $('#txtIFSCCode').val('');
                    $('#txtAddhar').val('');
                    $('#btnSubmit').val("Create");
                }
                if (data != '') {
                    var user = JSON.parse(data);
                    $("#Status").html('<font color="Green"></font>');
                    $("#txtFarmerCode").css("border-color", "Green");
                    //$('#txtUserCode').val(user.EMP_ID);
                    $('#txtFarmerCategory').val(user[0].FARM_CATEGORY);
                    $('#txtFarmerName').val(user[0].FARM_NAME);
                    $('#txtFarmerFatherName').val(user[0].FARM_FATHER_NAME);
                    $('#ddlVillageCode').val(user[0].VILLAGE_CODE);
                    $('#ddlSoilType').val(user[0].SOIL_TYPE);
                    $('#txtAdd1').val(user[0].FARM_ADDRESS1);
                    $('#txtAdd2').val(user[0].FARM_ADDRESS2);
                    $('#txtAdd3').val(user[0].FARM_ADDRESS3);
                    $('#txtAdd4').val(user[0].FARM_ADDRESS4);
                    $('#txtAdd5').val(user[0].FARM_ADDRESS5);
                    $('#txtAdd6').val(user[0].FARM_ADDRESS6);
                    $('#txtCountry').val(user[0].COUNTRY);
                    $('#txtPinCode').val(user[0].PIN_CODE);
                    $('#txtTelNo').val(user[0].TEL_NO);
                    $('#txtMobNo').val(user[0].MOBILE_NO);
                    $('#txtEmailID').val(user[0].EMAIL_ID);
                    $('#ddlStatus').val(user[0].STATUS);
                    $('#txtBankAccNo').val(user[0].BANK_ACCOUNT_NO);
                    $('#txtBankName').val(user[0].BANK_NAME);
                    $('#txtBranchName').val(user[0].BRANCH_NAME);
                    $('#txtIFSCCode').val(user[0].IFSC_CODE);

                    $('#txtAddhar').val(user[0].A3);
                    $('#ddlCropCode').val(user[0].CROP);
                    $('#ddlVarietyCode').val(user[0].VARIETY);
                    $('#txtAuthorizedQty').val(user[0].A1);
                    $('#txtBright').val(user[0].A2);
                    $('#txtMedium').val(user[0].ATTRIBUTE3);
                    $('#txtLow').val(user[0].A4);
                    $('#txtOthers').val(user[0].A5);

                    $('#btnSubmit').val("Update");
                }
                if (data == 0) {
                    $("#Status").html('<font color="Green"> Taken !. you can create ID.</font>');
                    $("#txtFarmerCode").css("border-color", "Green");
                    $('#txtFarmerCategory').val('REGISTERED');
                    $('#txtFarmerName').val('');
                    $('#txtFarmerFatherName').val('');
                    $('#ddlVillageCode').val('');
                    $('#ddlSoilType').val('');
                    $('#txtAdd1').val('');
                    $('#txtAdd2').val('');
                    $('#txtAdd3').val('');
                    $('#txtAdd4').val('');
                    $('#txtAdd5').val('');
                    $('#txtAdd6').val('');
                    $('#txtCountry').val('');
                    $('#txtPinCode').val('');
                    $('#txtTelNo').val('');
                    $('#txtMobNo').val('');
                    $('#txtEmailID').val('');
                    $('#ddlStatus').val('');
                    $('#txtBankAccNo').val('');
                    $('#txtBankName').val('');
                    $('#txtBranchName').val('');
                    $('#txtIFSCCode').val('');
                    $('#txtAddhar').val('');
                    $('#btnSubmit').val("Create");
                }
            },
            error: function () { alert("Huh? What? What did you need?.") }
        });
    }

    function UserIDCheck() {
    var FarmerID = $("#txtFarmerCode").val();
    $.ajax({
         url: '@Url.Action("CheckFarmerAvailability", "GPIL_FARMER_MASTER")', // Replace 'ControllerName' with the actual name of your controller
        type: "POST",
        dataType: 'json', // Fix the typo 'datatype' to 'dataType'
        data: { 'Farmerdata': FarmerID },
        success: function (data) {

            if (data.hasOwnProperty('VillageCode')) {
                // Farmer code not found in the database, show the village code
                $('#ddlVillageCode').val(data.VillageCode);
                $("#Status").html('<font color="Green"> Taken! You can create ID.</font>');
                $("#txtFarmerCode").css("border-color", "Green");
                $('#txtFarmerCategory').val('REGISTERED');
                $('#txtFarmerName').val('');
                $('#txtFarmerFatherName').val('');
                $('#ddlSoilType').val('');
                $('#txtAdd1').val('');
                $('#txtAdd2').val('');
                $('#txtAdd3').val('');
                $('#txtAdd4').val('');
                $('#txtAdd5').val('');
                $('#txtAdd6').val('');
                $('#txtCountry').val('');
                $('#txtPinCode').val('');
                $('#txtTelNo').val('');
                $('#txtMobNo').val('');
                $('#txtEmailID').val('');
                $('#ddlStatus').val('');
                $('#txtBankAccNo').val('');
                $('#txtBankName').val('');
                $('#txtBranchName').val('');
                $('#txtIFSCCode').val('');
                $('#txtAddhar').val('');
                $('#btnSubmit').val("Create");
            } else {
                // Farmer code found in the database, update the fields with fetched data

                var user = JSON.parse(data);
                $("#Status").html('<font color="Green"></font>');
                $("#txtFarmerCode").css("border-color", "Green");
                $('#txtFarmerCategory').val(user[0].FARM_CATEGORY);
                $('#txtFarmerName').val(user[0].FARM_NAME);
                $('#txtFarmerFatherName').val(user[0].FARM_FATHER_NAME);
                $('#ddlVillageCode').val(user[0].VILLAGE_CODE);
                $('#ddlSoilType').val(user[0].SOIL_TYPE);
                $('#txtAdd1').val(user[0].FARM_ADDRESS1);
                $('#txtAdd2').val(user[0].FARM_ADDRESS2);
                $('#txtAdd3').val(user[0].FARM_ADDRESS3);
                $('#txtAdd4').val(user[0].FARM_ADDRESS4);
                $('#txtAdd5').val(user[0].FARM_ADDRESS5);
                $('#txtAdd6').val(user[0].FARM_ADDRESS6);
                $('#txtCountry').val(user[0].COUNTRY);
                $('#txtPinCode').val(user[0].PIN_CODE);
                $('#txtTelNo').val(user[0].TEL_NO);
                $('#txtMobNo').val(user[0].MOBILE_NO);
                $('#txtEmailID').val(user[0].EMAIL_ID);
                $('#ddlStatus').val(user[0].STATUS);
                $('#txtBankAccNo').val(user[0].BANK_ACCOUNT_NO);
                $('#txtBankName').val(user[0].BANK_NAME);
                $('#txtBranchName').val(user[0].BRANCH_NAME);
                $('#txtIFSCCode').val(user[0].IFSC_CODE);
                $('#txtAddhar').val(user[0].A3);
                $('#ddlCropCode').val(user[0].CROP);
                $('#ddlVarietyCode').val(user[0].VARIETY);
                $('#txtAuthorizedQty').val(user[0].A1);
                $('#txtBright').val(user[0].A2);
                $('#txtMedium').val(user[0].ATTRIBUTE3);
                $('#txtLow').val(user[0].A4);
                $('#txtOthers').val(user[0].A5);
                $('#btnSubmit').val("Update");
            }
        },
        error: function () {
            alert("Error fetching data.");
        }
    });
}
    $(document).ready(function () {
        $('#btnClear').on('click', function (event) {

            $("#txtFarmerCode").val('');
            $('#txtFarmerCategory').val('');
            $('#txtFarmerName').val('');
            $('#txtFarmerFatherName').val('');
            $('#ddlVillageCode').val('');
            $('#ddlSoilType').val('');
            $('#txtAdd1').val('');
            $('#txtAdd2').val('');
            $('#txtAdd3').val('');
            $('#txtAdd4').val('');
            $('#txtAdd5').val('');
            $('#txtAdd6').val('');
            $('#txtCountry').val('');
            $('#txtPinCode').val('');
            $('#txtTelNo').val('');
            $('#txtMobNo').val('');
            $('#txtEmailID').val('');
            $('#ddlStatus').val('');
            $('#txtBankAccNo').val('');
            $('#txtBankName').val('');
            $('#txtBranchName').val('');
            $('#txtIFSCCode').val('');
            $('#ddlCropCode').val('');
            $('#ddlVarietyCode').val('');
            $('#txtAuthorizedQty').val('');
            $('#txtBright').val('');
            $('#txtMedium').val('');
            $('#txtLow').val('');
            $('#txtOthers').val('');
            $('#txtAddhar').val('');
        });


    });

</script>