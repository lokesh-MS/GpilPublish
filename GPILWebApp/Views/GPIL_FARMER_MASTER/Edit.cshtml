@model GPILWebApp.Models.GPIL_FARMER_MASTER

@{
    ViewBag.Root = "Master";
    ViewBag.Title = "Farmer Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 style="text-align:center; color:#438EB9"> Farmer Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.FARM_CODE)
        @Html.HiddenFor(model => model.CREATED_BY)
        @Html.HiddenFor(model => model.CREATED_DATE)
        @*@Html.HiddenFor(model => model.GPIL_SUPP_CODE)*@




        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Farmer Category </label>

                    @Html.EditorFor(model => model.FARM_CATEGORY, new { htmlAttributes = new { @class = "form-control", id = "txtFarmerCategory", minlength = "5", maxlength = "10" } })
                    @Html.ValidationMessageFor(model => model.FARM_CATEGORY, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Farmer Name </label>

                    @Html.EditorFor(model => model.FARM_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtFarmerName", minlength = "5", maxlength = "40" } })
                    @Html.ValidationMessageFor(model => model.FARM_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Farmer Father Name </label>

                    @Html.EditorFor(model => model.FARM_FATHER_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtFarmerFatherName", minlength = "5", maxlength = "40" } })
                    @Html.ValidationMessageFor(model => model.FARM_FATHER_NAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Village Code </label>

                    @Html.DropDownListFor(model => model.VILLAGE_CODE, (IEnumerable<SelectListItem>)ViewData["GPIL_VILLAGE_MASTER"] as SelectList, "SELECT Village Code", new { @class = "form-control", @id = "ddlClusterCode" })
                    @Html.ValidationMessageFor(model => model.VILLAGE_CODE, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Soil Type </label>

                    @Html.DropDownListFor(model => model.SOIL_TYPE, (IEnumerable<SelectListItem>)ViewData["GPIL_SOIL_MASTER"] as SelectList, "SELECT SOIL TYPE", new { @class = "form-control", @id = "ddlSoilType" })
                    @Html.ValidationMessageFor(model => model.SOIL_TYPE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Address 1 </label>

                    @Html.EditorFor(model => model.FARM_ADDRESS1, new { htmlAttributes = new { @class = "form-control", id = "txtAdd1", minlength = "5", maxlength = "40" } })
                    @Html.ValidationMessageFor(model => model.FARM_ADDRESS1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Address 2 </label>

                    @Html.EditorFor(model => model.FARM_ADDRESS2, new { htmlAttributes = new { @class = "form-control", id = "txtAdd2", minlength = "5", maxlength = "40" } })
                    @Html.ValidationMessageFor(model => model.FARM_ADDRESS2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Telephone Number </label>

                    @Html.EditorFor(model => model.TEL_NO, new { htmlAttributes = new { @class = "form-control", id = "txtTelNo", oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);", minlength = "6", maxlength = "10", type = "number" } })
                    @Html.ValidationMessageFor(model => model.TEL_NO, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Address 3 </label>

                    @Html.EditorFor(model => model.FARM_ADDRESS3, new { htmlAttributes = new { @class = "form-control", id = "txtAdd3", } })
                    @Html.ValidationMessageFor(model => model.FARM_ADDRESS3, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Address 4 </label>

                    @Html.EditorFor(model => model.FARM_ADDRESS4, new { htmlAttributes = new { @class = "form-control", id = "txtAdd4", } })
                    @Html.ValidationMessageFor(model => model.FARM_ADDRESS4, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Address 5 </label>

                    @Html.EditorFor(model => model.FARM_ADDRESS5, new { htmlAttributes = new { @class = "form-control", id = "txtAdd5", } })
                    @Html.ValidationMessageFor(model => model.FARM_ADDRESS5, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Address 6 </label>

                    @Html.EditorFor(model => model.FARM_ADDRESS6, new { htmlAttributes = new { @class = "form-control", id = "txtAdd6", } })
                    @Html.ValidationMessageFor(model => model.FARM_ADDRESS6, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Country </label>

                    @Html.EditorFor(model => model.COUNTRY, new { htmlAttributes = new { @class = "form-control", id = "txtCountry", placeholder = "India" } })
                    @Html.ValidationMessageFor(model => model.COUNTRY, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Pin Code </label>                                    @*oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",*@

                    @Html.EditorFor(model => model.PIN_CODE, new { htmlAttributes = new { @class = "form-control", id = "txtPinCode", type = "number" } })
                    @Html.ValidationMessageFor(model => model.PIN_CODE, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Mobile Number </label>
                    @*//oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" ,   type = "number"   , maxlength = "10"*@
                    @Html.EditorFor(model => model.MOBILE_NO, new
                    {
                        htmlAttributes = new
                        {
                            id = "txtMobNo",
                            @class = "form-control",
                            oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",
                            type = "number",
                            maxlength = "10"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.MOBILE_NO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Email ID </label>

                    @Html.EditorFor(model => model.EMAIL_ID, new { htmlAttributes = new { @class = "form-control", id = "txtEmailID", type = "email", maxlength = "25" } })
                    @Html.ValidationMessageFor(model => model.EMAIL_ID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Bank Account Number </label>

                    @Html.EditorFor(model => model.BANK_ACCOUNT_NO, new { htmlAttributes = new { @class = "form-control", id = "txtBankAccNo", minlength = "10", maxlength = "25" } })
                    @Html.ValidationMessageFor(model => model.BANK_ACCOUNT_NO, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Bank Name </label>

                    @Html.EditorFor(model => model.BANK_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtBankName", minlength = "3", maxlength = "25" } })
                    @Html.ValidationMessageFor(model => model.BANK_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Branch Name </label>

                    @Html.EditorFor(model => model.BRANCH_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtBranchName", minlength = "5", maxlength = "20" } })
                    @Html.ValidationMessageFor(model => model.BRANCH_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*IFSC Code </label>

                    @Html.EditorFor(model => model.IFSC_CODE, new { htmlAttributes = new { @class = "form-control", id = "txtIFSCCode", minlength = "5", maxlength = "20" } })
                    @Html.ValidationMessageFor(model => model.IFSC_CODE, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Authorized Qty </label>

                    @Html.EditorFor(model => model.ATTRIBUTE1, new { htmlAttributes = new { @class = "form-control", id = "txtAuthorizedQty", } })
                    @Html.ValidationMessageFor(model => model.ATTRIBUTE1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Bright </label>

                    @Html.EditorFor(model => model.ATTRIBUTE2, new { htmlAttributes = new { @class = "form-control", id = "txtBright", } })
                    @Html.ValidationMessageFor(model => model.ATTRIBUTE2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Medium </label>

                    @Html.EditorFor(model => model.ATTRIBUTE3, new { htmlAttributes = new { @class = "form-control", id = "txtMedium", } })
                    @Html.ValidationMessageFor(model => model.ATTRIBUTE3, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Low </label>

                    @Html.EditorFor(model => model.ATTRIBUTE4, new { htmlAttributes = new { @class = "form-control", id = "txtLow", } })
                    @Html.ValidationMessageFor(model => model.ATTRIBUTE4, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Status </label>

                    @Html.DropDownListFor(model => model.STATUS, new List<SelectListItem> {
                    new SelectListItem {Text="Y" ,Value="Y" },
                    new SelectListItem {Text="N" ,Value="N" }
               }, "SELECT STATUS", new { @class = "form-control", @id = "ddlStatus" })
                    @Html.ValidationMessageFor(model => model.STATUS, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Aadhaar </label>                @*oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",*@

                    @Html.EditorFor(model => model.ATTRIBUTE3, new { htmlAttributes = new { @class = "form-control", id = "txtAddhar", minlength = "12", maxlength = "12", type = "number" } })
                    @Html.ValidationMessageFor(model => model.ATTRIBUTE3, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Others </label>

                    @Html.EditorFor(model => model.ATTRIBUTE5, new { htmlAttributes = new { @class = "form-control", id = "txtOthers", } })
                    @Html.ValidationMessageFor(model => model.ATTRIBUTE5, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Red-mark (Fine / Alert)</label>
                    @Html.DropDownListFor(model => model.ALERT_MSG, new List<SelectListItem> {
             new SelectListItem {Text="Fine" ,Value="Fine" },
             new SelectListItem {Text="NTRM-Alert" ,Value="NTRM-Alert" },
              new SelectListItem {Text="H.MOIS-Alert" ,Value="H.MOIS-Alert" }
        }, "SELECT RED-MARK ", new { @class = "form-control", @id = "txtRedMark" })
                    @Html.ValidationMessageFor(model => model.ALERT_MSG, "", new { @class = "text-danger" })

                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <br />

                    <input type="submit" value="Save" style="width:95px" class="btn btn-success btn-sm" />
                </div>
            </div>
            <div class="col-sm-6">
                <p id="notify" style="display:none"> @TempData["SuccessMessage"]</p>

            </div>
        </div>









    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/assets/js/jquery-2.1.4.min.js"></script>
<script src="~/assets/js/sweetalert.min.js"></script>
<link href="~/assets/css/sweetalert.css" rel="stylesheet" />
<script>

    var mes = document.getElementById("notify").innerHTML
    if (mes.startsWith("Success", 1)) {
        sweetAlert("Done", mes, "success");
        setTimeout(function () {
            window.location = "/GPIL_FARMER_MASTER/Index";
        }, 2000)
    }

</script>