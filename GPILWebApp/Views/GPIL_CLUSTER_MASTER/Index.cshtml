@model IEnumerable<GPILWebApp.Models.GPIL_CLUSTER_MASTER>

@{
    ViewBag.Root = "Master";
    ViewBag.Title = "Cluster List";

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 style="text-align:center; color:#438EB9">Cluster Index</h2>



<p>
    <button type="button" role="button" onclick="@("window.location.href='" + @Url.Action("Create", "GPIL_CLUSTER_MASTER") + "'");" class="btn btn-success btn-sm"> Create New Item </button>
    <button type="button" role="button" onclick="@("window.location.href='" + @Url.Action("ExcelIndex", "GPIL_CLUSTER_MASTER") + "'");" class="btn btn-success btn-sm"> Excel Upload</button>
    
</p>



<div class="row">
    <div class="col-xs-12">
        <h3 class="header smaller lighter blue">Cluster List</h3>


        <div class="clearfix">
            <div class="pull-right tableTools-container"></div>
        </div>
        <div class="table-header">
            Results for "CLUSTER DETAILS"
        </div>


        <div class="form-horizondal" id="frmdetl">
            <table id="dynamic-tabl" class="table table-striped table-bordered table-hover alert-dark table-condensed">
                <thead>
                    <tr>
                        @*<th>
                                @Html.DisplayNameFor(model => model.SNO)
                            </th>*@
                        <th>
                            @Html.DisplayNameFor(model => model.CLUSTER_CODE)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CLUSTER_NAME)
                        </th>
                        <th>EDIT/UPDATE/DELETE</th>
                       
                    </tr>
                </thead>


                <tbody id="tbody">
                    @foreach (var item in Model)
            {
                    <tr>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.SNO)
                            </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.CLUSTER_CODE)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CLUSTER_NAME)
                        </td>

                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.CLUSTER_CODE }) |
                            @Html.ActionLink("Details", "Details", new { id = item.CLUSTER_CODE }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.CLUSTER_CODE })
                        </td>
                    </tr>
                    }

                </tbody>
            </table>

        </div>
    </div>
</div>



<script src="~/assets/js/jquery-2.1.4.min.js"></script>





<script>

    $(document).ready(function () {
        $('#dynamic-tabl').dataTable(
        );
        /// sri start
        var myTable = $('#dynamic-tabl')
            .DataTable({
                bAutoWidth: false,
                'order': [[0, 'asc']],
                "aoColumns": [
                    null, null, null, null,
                    {},
                ],
                select: {
                    style: 'multi'
                }
            });
        new $.fn.dataTable.Buttons(myTable, {
            buttons: [
                {
                    "extend": "csv",
                    "text": "<i class='fa fa-file-excel-o'></i> <span class='hidden'>Excel Export Farmat</span>",
                    "className": "btn btn-white btn-primary btn-bold"
                },
            ]
        });
        myTable.buttons().container().appendTo($('.tableTools-container'));
        //style the message box
        var defaultCopyAction = myTable.button(1).action();
        myTable.button(1).action(function (e, dt, button, config) {
            defaultCopyAction(e, dt, button, config);
            $('.dt-button-info').addClass('gritter-item-wrapper gritter-info gritter-center white');
        });
        var defaultColvisAction = myTable.button(0).action();
        myTable.button(0).action(function (e, dt, button, config) {
            defaultColvisAction(e, dt, button, config);
            if ($('.dt-button-collection > .dropdown-menu').length == 0) {
                $('.dt-button-collection')
                    .wrapInner('<ul class="dropdown-menu dropdown-light dropdown-caret dropdown-caret" />')
                    .find('a').attr('href', '#').wrap("<li />")
            }
            $('.dt-button-collection').appendTo('.tableTools-container .dt-buttons')
        });
        setTimeout(function () {
            $($('.tableTools-container')).find('a.dt-button').each(function () {
                var div = $(this).find(' > div').first();
                if (div.length == 1) div.tooltip({ container: 'body', title: div.parent().text() });
                else $(this).tooltip({ container: 'body', title: $(this).text() });
            });
        }, 2000);
        myTable.on('select', function (e, dt, type, index) {
            if (type === 'row') {
                $(myTable.row(index).node()).find('input:checkbox').prop('checked', true);
            }
        });
        myTable.on('deselect', function (e, dt, type, index) {
            if (type === 'row') {
                $(myTable.row(index).node()).find('input:checkbox').prop('checked', false);
            }
        });
        /////////////////////////////////
        //table checkboxes
        $('th input[type=checkbox], td input[type=checkbox]').prop('checked', false);
        //select/deselect all rows according to table header checkbox
        $('#dynamic-tabl > thead > tr > th input[type=checkbox], #dynamic-tabl_wrapper input[type=checkbox]').eq(0).on('click', function () {
            var th_checked = this.checked;//checkbox inside "TH" table header
            $('#dynamic-tabl').find('tbody > tr').each(function () {
                var row = this;
                if (th_checked) myTable.row(row).select();
                else myTable.row(row).deselect();
            });
        });
        //select/deselect a row when the checkbox is checked/unchecked
        $('#dynamic-tabl').on('click', 'td input[type=checkbox]', function () {
            var row = $(this).closest('tr').get(0);
            if (this.checked) myTable.row(row).deselect();
            else myTable.row(row).select();
        });
        $(document).on('click', '#dynamic-tabl.dropdown-toggle', function (e) {
            e.stopImmediatePropagation();
            e.stopPropagation();
            e.preventDefault();
        });
        /// sri end

    });





    //$(document).ready(function () {


    //    var dt0 = $('#dynamic-tabl').DataTable();
    //    //dt0.destroy();
    //    //$('#dynamic-tabl tbody').empty();



    //    function Send() {
    //        var dt01 = $('#dynamic-tabl').DataTable();
    //        var tblContent = '';
    //        $.ajax({
    //            url: '/GPIL_CLUSTER_MASTER/Index',
    //            type: "GET",
    //            data: $("#frmdetl").serialize(),
    //            cache: false,
    //            asynce: false,
    //            success: function (msg) {
    //                let data = JSON.parse(msg);
    //                var dt1 = $('#dynamic-tabl').DataTable();
    //                dt01.destroy();
    //                $('#dynamic-tabl tbody').empty();
    //                $('#dynamic-tabl tbody').append(tblContent);

    //               $('#dynamic-table').DataTable({
    //                    //'retrieve': true,
    //                    'paging': false,
    //                    'pageLength': 10,
    //                    'lengthChange': false,
    //                    'searching': false,
    //                    'ordering': true,
    //                    'info': true,
    //                    'autoWidth': false,
    //                    'dom': 'Bfrtip',
    //                    buttons: [
    //            'copy', 'csv', 'excel', 'pdf', 'print'
    //                    ]
    //                });

    //            },
    //            error: function (msg) {
    //                //alert(0); alert(msg);
    //            }
    //        });




    //    }

    //    var myTable =
    //     $('#dynamic-tabl')
    //     //.wrap("<div class='dataTables_borderWrap' />")   //if you are applying horizontal scrolling (sScrollX)
    //   .DataTable({
    //       "bLengthChange": true,
    //       "paging": false,
    //       "jQueryUI": true,
    //       bAutoWidth: false,
    //       'order': [[0, 'desc']],
    //       "aoColumns": [
    //            null, null, null,
    //           { "bSortable": false },

    //          // { "bSortable": false }
    //       ],
    //       "aaSorting": [],

    //       //"bProcessing": true,
    //       //"bServerSide": true,
    //       //"sAjaxSource": "http://127.0.0.1/table.php"	,

    //       //,
    //       //"sScrollY": "200px",
    //       // "bPaginate": true,

    //       //"sScrollX": "100%",
    //       //"sScrollXInner": "120%",
    //       //"bScrollCollapse": true,
    //       //Note: if you are applying horizontal scrolling (sScrollX) on a ".table-bordered"
    //       //you may want to wrap the table inside a "div.dataTables_borderWrap" element

    //       //"iDisplayLength": 50,


    //       select: {
    //           style: 'multi'
    //       }
    //   });



    //    $.fn.dataTable.Buttons.defaults.dom.container.className = 'dt-buttons btn-overlap btn-group btn-overlap';

    //    new $.fn.dataTable.Buttons(myTable, {
    //        buttons: [
    //          {
    //              "extend": "colvis",
    //              "text": "<i class='fa fa-search bigger-110 blue'></i> <span class='hidden'>Show/hide columns</span>",
    //              "className": "btn btn-white btn-primary btn-bold",
    //              columns: ':not(:first):not(:last)'
    //          },
    //          {
    //              "extend": "copy",
    //              "text": "<i class='fa fa-copy bigger-110 pink'></i> <span class='hidden'>Copy to clipboard</span>",
    //              "className": "btn btn-white btn-primary btn-bold"
    //          },
    //          {
    //              "extend": "csv",
    //              "text": "<i class='fa fa-database bigger-110 orange'></i> <span class='hidden'>Export to CSV</span>",
    //              "className": "btn btn-white btn-primary btn-bold"
    //          },
    //          {
    //              "extend": "excel",
    //              "text": "<i class='fa fa-file-excel-o bigger-110 green'></i> <span class='hidden'>Export to Excel</span>",
    //              "className": "btn btn-white btn-primary btn-bold"
    //          },
    //          {
    //              "extend": "pdf",
    //              "text": "<i class='fa fa-file-pdf-o bigger-110 red'></i> <span class='hidden'>Export to PDF</span>",
    //              "className": "btn btn-white btn-primary btn-bold"
    //          },
    //          {
    //              "extend": "print",
    //              "text": "<i class='fa fa-print bigger-110 grey'></i> <span class='hidden'>Print</span>",
    //              "className": "btn btn-white btn-primary btn-bold",
    //              autoPrint: false,
    //              message: 'This print was produced using the Print button for DataTables'
    //          }
    //        ]
    //    });
    //    myTable.buttons().container().appendTo($('.tableTools-container'));

    //    //style the message box
    //    var defaultCopyAction = myTable.button(1).action();
    //    myTable.button(1).action(function (e, dt, button, config) {
    //        defaultCopyAction(e, dt, button, config);
    //        $('.dt-button-info').addClass('gritter-item-wrapper gritter-info gritter-center white');
    //    });


    //    var defaultColvisAction = myTable.button(0).action();
    //    myTable.button(0).action(function (e, dt, button, config) {

    //        defaultColvisAction(e, dt, button, config);


    //        if ($('.dt-button-collection > .dropdown-menu').length == 0) {
    //            $('.dt-button-collection')
    //            .wrapInner('<ul class="dropdown-menu dropdown-light dropdown-caret dropdown-caret" />')
    //            .find('a').attr('href', '#').wrap("<li />")
    //        }
    //        $('.dt-button-collection').appendTo('.tableTools-container .dt-buttons')
    //    });

    //    ////

    //    setTimeout(function () {
    //        $($('.tableTools-container')).find('a.dt-button').each(function () {
    //            var div = $(this).find(' > div').first();
    //            if (div.length == 1) div.tooltip({ container: 'body', title: div.parent().text() });
    //            else $(this).tooltip({ container: 'body', title: $(this).text() });
    //        });
    //    }, 2000);





    //    myTable.on('select', function (e, dt, type, index) {
    //        if (type === 'row') {
    //            $(myTable.row(index).node()).find('input:checkbox').prop('checked', true);
    //        }
    //    });
    //    myTable.on('deselect', function (e, dt, type, index) {
    //        if (type === 'row') {
    //            $(myTable.row(index).node()).find('input:checkbox').prop('checked', false);
    //        }
    //    });




    //    /////////////////////////////////
    //    //table checkboxes
    //    $('th input[type=checkbox], td input[type=checkbox]').prop('checked', false);

    //    //select/deselect all rows according to table header checkbox
    //    $('#dynamic-tabl > thead > tr > th input[type=checkbox], #dynamic-tabl_wrapper input[type=checkbox]').eq(0).on('click', function () {
    //        var th_checked = this.checked;//checkbox inside "TH" table header

    //        $('#dynamic-tabl').find('tbody > tr').each(function () {
    //            var row = this;
    //            if (th_checked) myTable.row(row).select();
    //            else myTable.row(row).deselect();
    //        });
    //    });

    //    //select/deselect a row when the checkbox is checked/unchecked
    //    $('#dynamic-tabl').on('click', 'td input[type=checkbox]', function () {
    //        var row = $(this).closest('tr').get(0);
    //        if (this.checked) myTable.row(row).deselect();
    //        else myTable.row(row).select();
    //    });



    //    $(document).on('click', '#dynamic-tabl.dropdown-toggle', function (e) {
    //        e.stopImmediatePropagation();
    //        e.stopPropagation();
    //        e.preventDefault();
    //    });




    //})
</script>





