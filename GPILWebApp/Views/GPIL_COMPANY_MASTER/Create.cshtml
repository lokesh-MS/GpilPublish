@model GPILWebApp.Models.GPIL_COMPANY_MASTER

@{
    ViewBag.Root = "Master";
    ViewBag.Title = "COMPANY CREATION";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 style="text-align:center; color:#438EB9">Company Creation</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()






    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Company Code </label>

                    @Html.EditorFor(model => model.COMPANY_CODE, new { htmlAttributes = new { @class = "form-control", id = "txtCompCode", minlength = "3", maxlength = "4", @onchange = "UserIDCheck();" } })
                    @Html.ValidationMessageFor(model => model.COMPANY_CODE, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Company Name </label>

                    @Html.EditorFor(model => model.COMPANY_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtCompName", minlength = "5", maxlength = "40" } })
                    @Html.ValidationMessageFor(model => model.COMPANY_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Supplier Flag </label>

                    @Html.DropDownListFor(model => model.SUPPLIER_FLAG, new List<SelectListItem> {
                    new SelectListItem {Text="Y" ,Value="Y" },
                    new SelectListItem {Text="N" ,Value="N" }
               }, "SELECT STATUS", new { @class = "form-control", @id = "ddlSupplierFlag" })
                    @Html.ValidationMessageFor(model => model.SUPPLIER_FLAG, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Supplied To </label>

                    @Html.EditorFor(model => model.SUPPLIED_TO, new { htmlAttributes = new { @class = "form-control", id = "txtSuppliedTo", minlength = "3", maxlength = "10" } })
                    @Html.ValidationMessageFor(model => model.SUPPLIED_TO, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Status </label>

                    @Html.DropDownListFor(model => model.STATUS, new List<SelectListItem> {
                    new SelectListItem {Text="Y" ,Value="Y" },
                    new SelectListItem {Text="N" ,Value="N" }
               }, "SELECT STATUS", new { @class = "form-control", @id = "ddlStatus" })
                    @Html.ValidationMessageFor(model => model.STATUS, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Company ShortName </label>

                    @Html.EditorFor(model => model.COMP_SHORT_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtCompShortName", minlength = "3", maxlength = "10" } })
                    @Html.ValidationMessageFor(model => model.COMP_SHORT_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Company Group Code </label>

                    @Html.EditorFor(model => model.COMP_GROUP_CODE, new { htmlAttributes = new { @class = "form-control", id = "txtCompGroupCode", minlength = "3", maxlength = "10" } })
                    @Html.ValidationMessageFor(model => model.COMP_GROUP_CODE, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label"></label>

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <br />
                    <input type="submit" value="Create" id="btnSubmit" style="width:95px" class="btn btn-success btn-sm" />
                    <input type="button" id="btnView" value="Cancel" style="width:95px" onclick=@("window.location.href='" + @Url.Action("Index", "GPIL_COMPANY_MASTER") + "'") ; class="btn btn-primary btn-sm" />

                </div>
                <div class="col-sm-6">
                    <p id="notify" style="display:none"> @TempData["SuccessMessage"]</p>

                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">

                </div>
            </div>
        </div>






    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



<script src="~/assets/js/jquery-2.1.4.min.js"></script>
<script src="~/assets/js/sweetalert.min.js"></script>
<link href="~/assets/css/sweetalert.css" rel="stylesheet" />
<script>
        var mes = document.getElementById("notify").innerHTML
    if (mes.startsWith("Success", 1)) {
        sweetAlert("Done", mes, "success");
        setTimeout(function () {
            window.location = "/GPIL_COMPANY_MASTER/Index";
        }, 2000)
    }

 
  function UserIDCheck() {
      var CompID = $("#txtCompCode").val();
      $.ajax({
          url: '@Url.Action("CheckCompanyAvailability", "GPIL_COMPANY_MASTER")',
          type: "POST",
          datatype: 'json',
          data: { 'Companydata': CompID },
          success: function (data) {
              if (data != '') {
                  var user = JSON.parse(data);
                  $("#Status").html('<font color="Green"></font>');
                  $("#txtCompCode").css("border-color", "Green");
                  //$('#txtUserCode').val(user.EMP_ID);
                  $('#txtCompName').val(user[0].COMPANY_NAME);
                  $('#ddlSupplierFlag').val(user[0].SUPPLIER_FLAG);
                  $('#txtSuppliedTo').val(user[0].SUPPLIED_TO);
                  $('#ddlStatus').val(user[0].STATUS);
                  $('#txtCompShortName').val(user[0].COMP_SHORT_NAME);
                  $('#txtCompGroupCode').val(user[0].COMP_GROUP_CODE);
                  $('#btnSubmit').val("Update");
              }
              if (data == 0) {
                  $("#Status").html('<font color="Green"> Taken !. you can create ID.</font>');
                  $("#txtCompCode").css("border-color", "Green");
                  $('#txtCompName').val('');
                  $('#ddlSupplierFlag').val('');
                  $('#txtSuppliedTo').val('');
                  $('#ddlStatus').val('');
                  $('#txtCompShortName').val('');
                  $('#txtCompGroupCode').val('');
                  $('#btnSubmit').val("Create");
              }
          },
          error: function () { alert("Huh? What? What did you need?.") }
      });
  }

</script>