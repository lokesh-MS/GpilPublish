@model GPILWebApp.Models.GPIL_SUPPLIER_MASTER

@{
    ViewBag.Root = "Master";
    ViewBag.Title = "Supplier Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 style="text-align:center; color:#438EB9">Supplier Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.SUPP_CODE)
        @Html.HiddenFor(model => model.CREATED_BY)
        @Html.HiddenFor(model => model.CREATED_DATE)
        @Html.HiddenFor(model => model.GPIL_SUPP_CODE)

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Supplier Name </label>

                    @Html.EditorFor(model => model.SUPP_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtSupplierName", minlength = "3", maxlength = "40" } })
                    @Html.ValidationMessageFor(model => model.SUPP_NAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Site Name </label>

                    @*@Html.EditorFor(model => model.SITE_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtSiteName", minlength = "3", maxlength = "40", @disabled = "disabled" } })*@
                    @Html.EditorFor(model => model.SITE_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtSiteName", minlength = "3", maxlength = "40", } }) @*lokesh*@
                    @Html.ValidationMessageFor(model => model.SITE_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Supplier Address1 </label>

                    @Html.EditorFor(model => model.SUPP_ADDRESS1, new { htmlAttributes = new { @class = "form-control", id = "txtAdd1", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.SUPP_ADDRESS1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Supplier Address2 </label>

                    @Html.EditorFor(model => model.SUPP_ADDRESS2, new { htmlAttributes = new { @class = "form-control", id = "txtAdd2", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.SUPP_ADDRESS2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="row">

            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Supplier Address3 </label>

                    @Html.EditorFor(model => model.SUPP_ADDRESS3, new { htmlAttributes = new { @class = "form-control", id = "txtAdd3", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.SUPP_ADDRESS3, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Supplier Address4 </label>

                    @Html.EditorFor(model => model.SUPP_ADDRESS4, new { htmlAttributes = new { @class = "form-control", id = "txtAdd4", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.SUPP_ADDRESS4, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>



        <div class="row">

            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Supplier Address5 </label>

                    @Html.EditorFor(model => model.SUPP_ADDRESS5, new { htmlAttributes = new { @class = "form-control", id = "txtAdd5", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.SUPP_ADDRESS5, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Supplier Address6 </label>

                    @Html.EditorFor(model => model.SUPP_ADDRESS6, new { htmlAttributes = new { @class = "form-control", id = "txtAdd6", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.SUPP_ADDRESS4, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>


        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Supplier Address7 </label>

                    @Html.EditorFor(model => model.SUPP_ADDRESS7, new { htmlAttributes = new { @class = "form-control", id = "txtAdd7", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.SUPP_ADDRESS7, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="sm-3">
                        <label class="control-label">PIN Code </label>

                        @Html.EditorFor(model => model.SUPP_ADDRESS8, new { htmlAttributes = new { @class = "form-control", id = "txtAdd8", minlength = "6", maxlength = "6" } })
                        @Html.ValidationMessageFor(model => model.SUPP_ADDRESS8, "", new { @class = "text-danger" })
                    </div>
                </div>


            </div>

        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Telephone Number </label>
                    @*//oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" ,   type = "number"   , maxlength = "10"*@
                    @Html.EditorFor(model => model.TEL_NO, new
               {
                   htmlAttributes = new
                   {
                       id = "txtMobNo",
                       @class = "form-control",
                       oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",
                       type = "number",
                       maxlength = "10"
                   }
               })
                    @Html.ValidationMessageFor(model => model.TEL_NO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Mobile Number </label>
                    @*//oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" ,   type = "number"   , maxlength = "10"*@
                    @Html.EditorFor(model => model.MOBILE_NO, new
               {
                   htmlAttributes = new
                   {
                       id = "txtMobNo",
                       @class = "form-control",
                       oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",
                       type = "number",
                       minlength = "10",
                       maxlength = "10"
                   }
               })
                    @Html.ValidationMessageFor(model => model.MOBILE_NO, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">Email ID </label>

                    @Html.EditorFor(model => model.EMAIL_ID, new { htmlAttributes = new { @class = "form-control", id = "txtEmail", maxlength = "30", type = "email" } })
                    @Html.ValidationMessageFor(model => model.EMAIL_ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Status </label>

                    @Html.DropDownListFor(model => model.STATUS, new List<SelectListItem> {
                    new SelectListItem {Text="Y" ,Value="Y" },
                    new SelectListItem {Text="N" ,Value="N" }
               }, "SELECT STATUS", new { @class = "form-control", @id = "ddlStatus" })
                    @Html.ValidationMessageFor(model => model.STATUS, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Gpil Supplier Code </label>

                    @Html.EditorFor(model => model.GPIL_SUPP_CODE, new { htmlAttributes = new { @class = "form-control", id = "txtGpilSuppCode", minlength = "3", maxlength = "15 " } })
                    @Html.ValidationMessageFor(model => model.GPIL_SUPP_CODE, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">GST Provisional ID </label>

                    @Html.EditorFor(model => model.ATTRIBUTE1, new { htmlAttributes = new { @class = "form-control", id = "txtGstProvID", minlength = "5", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.ATTRIBUTE1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">GST Register No </label>

                    @Html.EditorFor(model => model.ATTRIBUTE2, new { htmlAttributes = new { @class = "form-control", id = "txtGstRegNo", minlength = "5", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.ATTRIBUTE2, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>


        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label"></label>

                    <br />

                    <input type="submit" value="Save" style="width:95px" class="btn btn-success btn-sm" />
                </div>
            </div>

            <div class="col-sm-6">
                <p id="notify" style="display:none"> @TempData["SuccessMessage"]</p>

            </div>
        </div>





    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/assets/js/jquery-2.1.4.min.js"></script>
<script src="~/assets/js/sweetalert.min.js"></script>
<link href="~/assets/css/sweetalert.css" rel="stylesheet" />
<script>

    var mes = document.getElementById("notify").innerHTML
    if (mes.startsWith("Success", 1)) {
        sweetAlert("Done", mes, "success");
        setTimeout(function () {
            window.location = "/GPIL_SUPPLIER_MASTER/Index";
        }, 2000)
        // window.location.href = "Index";
    }
</script>
