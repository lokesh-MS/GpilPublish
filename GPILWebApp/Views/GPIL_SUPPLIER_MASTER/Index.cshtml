@model IEnumerable<GPILWebApp.Models.GPIL_SUPPLIER_MASTER>

@{
    ViewBag.Root = "Master";
    ViewBag.Title = "Supplier List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 style="text-align:center; color:#438EB9">Supplier Index</h2>



<p>
    <button type="button" role="button" onclick="@("window.location.href='" + @Url.Action("Create", "GPIL_SUPPLIER_MASTER") + "'");" class="btn btn-success btn-sm"> Create New Item </button>
    <button type="button" role="button" onclick="@("window.location.href='" + @Url.Action("ExcelIndex", "GPIL_SUPPLIER_MASTER") + "'");" class="btn btn-success btn-sm"> Excel Upload</button>
   
</p>






<div class="row">
    <div class="col-xs-12">
        <h3 class="header smaller lighter blue">Supplier List</h3>
        <div class="clearfix">
            <div class="pull-right tableTools-container"></div>
        </div>
        <div class="table-header">
            Results for "SUPPLIER DETAILS"
        </div>
        <div class="form-horizondal" id="frmdetl">
            <table id="dynamic-tabl" class="table table-striped table-bordered table-hover alert-dark table-condensed">
                <thead>
                    <tr>
                        <th style="text-align:center">
                            @Html.DisplayNameFor(model => model.SUPP_CODE)
                        </th>
                        <th style="text-align:center">
                            @Html.DisplayNameFor(model => model.SUPP_NAME)
                        </th>
                        <th style="text-align:center">
                            @Html.DisplayNameFor(model => model.SITE_NAME)
                        </th>
                        <th style="text-align:center">
                            @Html.DisplayNameFor(model => model.SUPP_ADDRESS1)
                        </th>
                        <th style="text-align:center">
                            @Html.DisplayNameFor(model => model.SUPP_ADDRESS2)
                        </th>
                        
                        <th style="text-align:center">
                            @Html.DisplayNameFor(model => model.TEL_NO)
                        </th>
                        <th style="text-align:center">
                            @Html.DisplayNameFor(model => model.MOBILE_NO)
                        </th>
                        <th style="text-align:center">
                            @Html.DisplayNameFor(model => model.EMAIL_ID)
                        </th>
                        
                        <th style="text-align:center">
                            @Html.DisplayNameFor(model => model.STATUS)
                        </th>
                      
                        <th>EDIT/UPDATE/DELETE</th>
                    </tr>
                </thead>
                <tbody id="tbody">

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.SUPP_CODE)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SUPP_NAME)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SITE_NAME)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SUPP_ADDRESS1)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SUPP_ADDRESS2)
                            </td>
                            
                            <td>
                                @Html.DisplayFor(modelItem => item.TEL_NO)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.MOBILE_NO)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EMAIL_ID)
                            </td>
                            
                            
                            <td>
                                @Html.DisplayFor(modelItem => item.STATUS)
                            </td>
                            
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.SUPP_CODE }) |
                                @Html.ActionLink("Details", "Details", new { id = item.SUPP_CODE }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.SUPP_CODE })
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>



<script src="~/assets/js/jquery-2.1.4.min.js"></script>





<script>

    $(document).ready(function () {
        $('#dynamic-tabl').dataTable(
        );
        /// sri start
        var myTable = $('#dynamic-tabl')
            .DataTable({
                bAutoWidth: false,
                'order': [[0, 'asc']],
                "aoColumns": [
                    null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null,
                    {},
                ],
                select: {
                    style: 'multi'
                }
            });
        new $.fn.dataTable.Buttons(myTable, {
            buttons: [
                {
                    "extend": "csv",
                    "text": "<i class='fa fa-file-excel-o'></i> <span class='hidden'>Excel Export Farmat</span>",
                    "className": "btn btn-white btn-primary btn-bold"
                },
            ]
        });
        myTable.buttons().container().appendTo($('.tableTools-container'));
        //style the message box
        var defaultCopyAction = myTable.button(1).action();
        myTable.button(1).action(function (e, dt, button, config) {
            defaultCopyAction(e, dt, button, config);
            $('.dt-button-info').addClass('gritter-item-wrapper gritter-info gritter-center white');
        });
        var defaultColvisAction = myTable.button(0).action();
        myTable.button(0).action(function (e, dt, button, config) {
            defaultColvisAction(e, dt, button, config);
            if ($('.dt-button-collection > .dropdown-menu').length == 0) {
                $('.dt-button-collection')
                    .wrapInner('<ul class="dropdown-menu dropdown-light dropdown-caret dropdown-caret" />')
                    .find('a').attr('href', '#').wrap("<li />")
            }
            $('.dt-button-collection').appendTo('.tableTools-container .dt-buttons')
        });
        setTimeout(function () {
            $($('.tableTools-container')).find('a.dt-button').each(function () {
                var div = $(this).find(' > div').first();
                if (div.length == 1) div.tooltip({ container: 'body', title: div.parent().text() });
                else $(this).tooltip({ container: 'body', title: $(this).text() });
            });
        }, 2000);
        myTable.on('select', function (e, dt, type, index) {
            if (type === 'row') {
                $(myTable.row(index).node()).find('input:checkbox').prop('checked', true);
            }
        });
        myTable.on('deselect', function (e, dt, type, index) {
            if (type === 'row') {
                $(myTable.row(index).node()).find('input:checkbox').prop('checked', false);
            }
        });
        /////////////////////////////////
        //table checkboxes
        $('th input[type=checkbox], td input[type=checkbox]').prop('checked', false);
        //select/deselect all rows according to table header checkbox
        $('#dynamic-tabl > thead > tr > th input[type=checkbox], #dynamic-tabl_wrapper input[type=checkbox]').eq(0).on('click', function () {
            var th_checked = this.checked;//checkbox inside "TH" table header
            $('#dynamic-tabl').find('tbody > tr').each(function () {
                var row = this;
                if (th_checked) myTable.row(row).select();
                else myTable.row(row).deselect();
            });
        });
        //select/deselect a row when the checkbox is checked/unchecked
        $('#dynamic-tabl').on('click', 'td input[type=checkbox]', function () {
            var row = $(this).closest('tr').get(0);
            if (this.checked) myTable.row(row).deselect();
            else myTable.row(row).select();
        });
        $(document).on('click', '#dynamic-tabl.dropdown-toggle', function (e) {
            e.stopImmediatePropagation();
            e.stopPropagation();
            e.preventDefault();
        });
        /// sri end
    });

</script>
