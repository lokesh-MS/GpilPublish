@model GPILWebApp.Models.GPIL_ORGN_MASTER

@{
    ViewBag.Root = "Master";
    ViewBag.Title = "Organization Creation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 style="text-align:center; color:#438EB9">Organization Creation</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })



        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*organization Code </label>

                    @Html.EditorFor(model => model.ORGN_CODE, new { htmlAttributes = new { @class = "form-control", id = "txtOrgnCode", minlength = "3", maxlength = "3", @onchange = "UserIDCheck();" } })
                    @Html.ValidationMessageFor(model => model.ORGN_CODE, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Organization Name </label>

                    @Html.EditorFor(model => model.ORGN_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtOrgnName", minlength = "3", maxlength = "40" } })
                    @Html.ValidationMessageFor(model => model.ORGN_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Organization Type </label>

                    @Html.EditorFor(model => model.ORGN_TYPE, new { htmlAttributes = new { @class = "form-control", id = "txtOrgnType", minlength = "3", maxlength = "8" } })
                    @Html.ValidationMessageFor(model => model.ORGN_TYPE, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Organization Address1 </label>

                    @Html.EditorFor(model => model.ORGN_ADDRESS1, new { htmlAttributes = new { @class = "form-control", id = "txtOrgnAdd1", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.ORGN_ADDRESS1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Organization Address2 </label>

                    @Html.EditorFor(model => model.ORGN_ADDRESS2, new { htmlAttributes = new { @class = "form-control", id = "txtOrgnAdd2", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.ORGN_ADDRESS2, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Organization Address3 </label>

                    @Html.EditorFor(model => model.ORGN_ADDRESS3, new { htmlAttributes = new { @class = "form-control", id = "txtOrgnAdd3", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.ORGN_ADDRESS3, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="row">

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Organization Address4 </label>

                    @Html.EditorFor(model => model.ORGN_ADDRESS4, new { htmlAttributes = new { @class = "form-control", id = "txtOrgnAdd4", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.ORGN_ADDRESS4, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Organization Address5 </label>

                    @Html.EditorFor(model => model.ORGN_ADDRESS5, new { htmlAttributes = new { @class = "form-control", id = "txtOrgnAdd5", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.ORGN_ADDRESS5, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Organization Address6 </label>

                    @Html.EditorFor(model => model.ORGN_ADDRESS6, new { htmlAttributes = new { @class = "form-control", id = "txtOrgnAdd6", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.ORGN_ADDRESS6, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Organization Country </label>

                    @Html.EditorFor(model => model.ORGN_COUNTRY, new { htmlAttributes = new { @class = "form-control", id = "txtOrgnCountry", type = "text", minlength = "3", maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.ORGN_COUNTRY, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>




        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Pin-Code </label>

                    @Html.EditorFor(model => model.PIN_CODE, new
               {
                   htmlAttributes = new
                   {
                       id = "txtPinCode",
                       @class = "form-control",
                       oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",
                       type = "number",
                       maxlength = "6"
                   }
               })
                    @Html.ValidationMessageFor(model => model.PIN_CODE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Telephone Number </label>

                    @Html.EditorFor(model => model.TEL_NO, new
               {
                   htmlAttributes = new
                   {
                       id = "txtTellNo",
                       @class = "form-control",
                       oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",
                       type = "number",
                       maxlength = "10"
                   }
               })
                    @Html.ValidationMessageFor(model => model.TEL_NO, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Mobile Number </label>

                    @Html.EditorFor(model => model.MOBILE_NO, new
               {
                   htmlAttributes = new
                   {
                       id = "txtMobNo",
                       @class = "form-control",
                       oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",
                       type = "number",
                       maxlength = "10"
                   }
               })
                    @Html.ValidationMessageFor(model => model.MOBILE_NO, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Email ID </label>

                    @Html.EditorFor(model => model.EMAIL_ID, new
               {
                   htmlAttributes = new
                   {
                       id = "txtEmailID",
                       @class = "form-control",
                       type = "email",
                       maxlength = "25"
                   }
               })
                    @Html.ValidationMessageFor(model => model.EMAIL_ID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">Insurance Vlaue </label>

                    @Html.EditorFor(model => model.INSURANCE_VAL, new
               {
                   htmlAttributes = new
                   {
                       id = "txtInsuranceValue",
                       @class = "form-control",
                       oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",
                       type = "number",
                       step = "0.0001",
                       maxlength = "15"
                   }
               })
                    @Html.ValidationMessageFor(model => model.INSURANCE_VAL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                <div class="sm-3">
                    <label class="control-label">*Variety </label>
                    @Html.DropDownList("VARIETY", new SelectList(ViewBag.GPIL_VARIETY_MASTER, "VARIETY", "VARIETY1"), "Please select", new { @id = "ddlVariety", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.VARIETY, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="row">

            <div class="col-sm-6">
                <div class="sm-3">


                    <label class="control-label">*Status </label>

                    @Html.DropDownListFor(model => model.STATUS, new List<SelectListItem> {
                    new SelectListItem {Text="Y" ,Value="Y" },
                    new SelectListItem {Text="N" ,Value="N" }
               }, "SELECT STATUS", new { @class = "form-control", @id = "ddlStatus" })
                    @Html.ValidationMessageFor(model => model.STATUS, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>



        <div class="row">
            <div class="col-sm-6">
                <div class="sm-3">

                    <label class="control-label"></label>

                    <br />
                    <input type="submit" id="btnSubmit" value="Create" style="width:95px" class="btn btn-success btn-sm" />
                    <input type="button" id="btnView" value="View" style="width:95px" onclick=@("window.location.href='" + @Url.Action("Index", "GPIL_ORGN_MASTER") + "'") ; class="btn btn-primary btn-sm" />


                </div>
            </div>
            @*<div class="col-sm-6">
                    <div class="sm-3">
                        <label class="control-label"> </label>


                    </div>
                </div>*@

            <div class="col-sm-6">
                <p id="notify" style="display:none"> @TempData["SuccessMessage"]</p>

            </div>

        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/assets/js/sweetalert.min.js"></script>
<link href="~/assets/css/sweetalert.css" rel="stylesheet" />

<script>
    var mes = document.getElementById("notify").innerHTML
    if (mes.startsWith("Success", 1)) {
        sweetAlert("Done", mes, "success");
        setTimeout(function () {
            window.location = "/GPIL_ORGN_MASTER/Index";
        }, 2000)
    }
    function UserIDCheck() {
        //$('#txtEmailID').attr('required', true);
        var OrgnID = $("#txtOrgnCode").val();
        $.ajax({
            url: '@Url.Action("CheckOrgnAvailability", "GPIL_ORGN_MASTER")',
            type: "POST",
            datatype: 'json',
            data: { 'Orgndata': OrgnID },
            success: function (data) {
                if (data != '') {
                    var user = JSON.parse(data);
                    $("#Status").html('<font color="Green"></font>');
                    $("#txtOrgnCode").css("border-color", "Green");
                    //$('#txtUserCode').val(user.EMP_ID);
                    $('#txtOrgnName').val(user[0].ORGN_NAME);
                    $('#txtOrgnType').val(user[0].ORGN_TYPE);
                    $('#txtOrgnAdd1').val(user[0].ORGN_ADDRESS1);
                    $('#txtOrgnAdd2').val(user[0].ORGN_ADDRESS2);
                    $('#txtOrgnAdd3').val(user[0].ORGN_ADDRESS3);
                    $('#txtOrgnAdd4').val(user[0].ORGN_ADDRESS4);
                    $('#txtOrgnAdd5').val(user[0].ORGN_ADDRESS5);
                    $('#txtOrgnAdd6').val(user[0].ORGN_ADDRESS6);
                    $('#txtOrgnCountry').val(user[0].ORGN_COUNTRY);

                    $('#txtPinCode').val(user[0].PIN_CODE);
                    $('#txtTellNo').val(user[0].TEL_NO);
                    $('#txtMobNo').val(user[0].MOBILE_NO);
                    $('#txtEmailID').val(user[0].EMAIL_ID);
                    $('#txtInsuranceValue').val(user[0].INSURANCE_VAL);
                    $('#txtSyncID').val(user[0].SYNC_ID);
                    $('#txtSyncPSwd').val(user[0].SYNC_PASSWORD);
                    $('#ddlVariety').val(user[0].VARIETY);
                    $('#ddlStatus').val(user[0].STATUS);
                    $('#btnSubmit').val("Update");
                }
                if (data == 0) {
                    $("#Status").html('<font color="Green"> Taken !. you can create ID.</font>');
                    $("#txtOrgnCode").css("border-color", "Green");
                    $('#txtOrgnName').val('');
                    $('#txtOrgnType').val('');
                    $('#txtOrgnAdd1').val('');
                    $('#txtOrgnAdd2').val('');
                    $('#txtOrgnAdd3').val('');
                    $('#txtOrgnAdd4').val('');
                    $('#txtOrgnAdd5').val('');
                    $('#txtOrgnAdd6').val('');
                    $('#txtOrgnCountry').val('');
                    $('#txtPinCode').val('');
                    $('#txtTellNo').val('');
                    $('#txtMobNo').val('');
                    $('#txtEmailID').val('');
                    $('#txtInsuranceValue').val('');
                    $('#txtSyncID').val('');
                    $('#txtSyncPSwd').val('');
                    $('#ddlVariety').val('');
                    $('#ddlStatus').val('');
                    $('#btnSubmit').val("Create");
                }
            },
            error: function () { alert("Huh? What? What did you need?.") }
        });
    }
</script>