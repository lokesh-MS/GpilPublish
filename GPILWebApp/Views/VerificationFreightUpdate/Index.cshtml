
@{
    ViewBag.Root = "Verification";
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 style="text-align:center; color:#438EB9">FREIGHT UPDATE</h2>
<hr />

<div class="row">
    <div id="alert_placeholder"></div>
    <span id="message"></span>
</div>

<div class="row">
    <div class="col-xs-12">        
        <div class="clearfix">
            <div class="pull-right tableTools-container"></div>
        </div>
        <div class="table-header">
            RESULT FOR "FREIGHT UPDATION DETAILS"
        </div>
        <div class="form-horizondal" id="frmdetl" style="overflow-y: scroll; overflow-x: scroll; height:auto">
            <table id="dynamic-table" class="table table-striped table-bordered table-hover alert-dark table-condensed">
                <thead class="thead-dark">
                    <tr>
                        <th>SNO</th>
                        <th>SHIPMENT_NO</th>
                        <th>FRIEGHT_CHARGES</th>
                        <th>TOT_NO_OF_BALES</th>
                        <th>QTY</th>
                        <th>FreightValue</th>
                        <th>UOM</th>
                        <th>EDIT/DELETE</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="tbody"></tbody>
            </table>
        </div>
    </div>
</div>

<script src="~/assets/js/jquery-2.1.4.min.js"></script>
<script>


    bootstrap_alert = function () { }
    bootstrap_alert.warning = function (message, status) {
        if (status == "success") {
            $('#alert_placeholder').html('<div class="alert alert-success" role="alert"><a class="close" data-dismiss="alert">×</a><span>' + message + '</span></div>')
        }
        else if (status == "error") {
            $('#alert_placeholder').html('<div class="alert alert-danger" role="alert"><a class="close" data-dismiss="alert">×</a><span>' + message + '</span></div>')
        }
        $("#alert_placeholder").fadeTo(10000, 500).slideUp(500, function () {
            $("#alert_placeholder").slideUp(500);
        });
    }



    $(document).ready(function () {


        GetCropExcel();
        $('.alert').hide();
        //Create event handler
        $('#btnCreate').on('click', function (event) {

            var hdnHEADER_ID = $('#hdnHEADER_ID').val();
            window.location = '/Verification/Create?HEADER_ID=' + hdnHEADER_ID

        });

        //Edit event handler.
        $("#dynamic-table").on('click', '.btnEdit', function () {
            var row = $(this).closest("tr");
            $("td", row).each(function () {
                if ($(this).find(".text").length > 0) {
                    $(this).find(".text").show();
                    $(this).find(".trBg").hide();
                }
            });
            row.find(".btnUpdate").show();
            row.find(".btnCancel").show();
            row.find(".btnDelete").hide();
            $(this).hide();
        });

        //Cancel event handler.
        $("#dynamic-table").on('click', '.btnCancel', function () {
            var row = $(this).closest("tr");
            $("td", row).each(function () {
                if ($(this).find(".text").length > 0) {
                    var span = $(this).find(".trBg");
                    var input = $(this).find(".text");
                    input.val(span.html());
                    span.show();
                    input.hide();
                }
            });
            row.find(".btnEdit").show();
            row.find(".btnDelete").show();
            row.find(".btnCancel").hide();
            row.find(".btnUpdate").hide();
            $(this).hide();
        });

        //Update event handler.
        $("#dynamic-table").on('click', '.btnUpdate', function () {
            var row = $(this).closest("tr");
            $("td", row).each(function () {
                if ($(this).find("input").length > 0) {
                    var span = $(this).find("span");
                    var input = $(this).find("input");
                    span.html(input.val());
                    span.show();
                    input.hide();
                }
            });

            row.find(".btnEdit").show();
            row.find(".btnDelete").show();
            row.find(".btnCancel").hide();
            row.find(".btnUpdate").hide();
            $(this).hide();
        });

        //Delete event handler.
        $("#dynamic-table").on('click', '.btnDelete', function () {
            if (confirm("Do you want to delete this row?")) {
                var row = $(this).closest("tr");
                row.remove();
            }
        });


        function GetCropExcel() {
            //var dt01 = $('#dynamic-table').DataTable();
            var tblContent = '';
            $.ajax({
                type: 'GET',
                url: '/VerificationFreightUpdate/GetFreightUpdationDetails',
                contentType: false,
                processData: false,
                success: function (msg) {
                    let data = $.parseJSON(msg);

                    var gethdnSHIPMENT_NO = "";
                    for (var i = 0; i < data.length; i++) {
                        var j = i + 1;
                        var SHIPMENT_NO = (data[i].SHIPMENT_NO == null) ? "" : data[i].SHIPMENT_NO;
                        gethdnSHIPMENT_NO = SHIPMENT_NO; // this gives textbox value
                        var FRIEGHT_CHARGES = (data[i].FRIEGHT_CHARGES == null) ? "" : data[i].FRIEGHT_CHARGES;                        
                        var TOT_NO_OF_BALES = (data[i].TOT_NO_OF_BALES == null) ? "" : data[i].TOT_NO_OF_BALES;
                        var QTY = (data[i].QTY == null) ? "" : data[i].QTY;
                        var FreightValue = (data[i].FreightValue == null) ? "" : data[i].FreightValue;
                        var UOM = (data[i].UOM == null) ? "" : data[i].UOM;

                        tblContent = tblContent + '<tr>'
                            + '<td class="trBg" style="text-align:center;" >' + j + '</td >'
                            + '<td class="trBg"><span class="trBg1">' + SHIPMENT_NO + '</span></td>'
                            + '<td class="trBg"><span class="trBg">' + FRIEGHT_CHARGES + '</span><input class="text" oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);", minlength = "4", maxlength = "4", type = "number" value="' + FRIEGHT_CHARGES + '" style="display:none"/></span></td>'
                            + '<td class="trBg"><span class="trBg1">' + TOT_NO_OF_BALES + '</span></td>'
                            + '<td class="trBg"><span class="trBg1">' + QTY + '</span></td>'
                            + '<td class="trBg"><span class="trBg1">' + FreightValue + '</span></td>'
                            + '<td class="trBg"><span class="trBg1">' + UOM + '</span></td>'
                            + '<td class="trBg"><input class="text1" type="hidden" value="' + SHIPMENT_NO + '"/></span>  <button class="btnEdit">Edit</button><button class="btnDelete">Delete</button><button class="btnUpdate" style="display:none">Update</button><button class="btnCancel" style="display:none">Cancel</button></td>'
                            + '</tr >';
                    }
                    $('#dynamic-table tbody').empty();
                    $('#dynamic-table tbody').append(tblContent);


                    var myTable =
                        $('#dynamic-table')
                            //.wrap("<div class='dataTables_borderWrap' />")   //if you are applying horizontal scrolling (sScrollX)
                            .DataTable({
                                "bLengthChange": true,
                                "paging": false,
                                "jQueryUI": true,
                                bAutoWidth: false,
                                'order': [[0, 'asc']],
                                "aoColumns": [
                                    null, null, null, null, null, null, null,
                                    { "bSortable": false },

                                    // { "bSortable": false }
                                ],
                                "aaSorting": [],

                                //"bProcessing": true,
                                //"bServerSide": true,
                                //"sAjaxSource": "http://127.0.0.1/table.php"	,

                                //,
                                "sScrollY": "400px",
                                // "bPaginate": true,

                                //"sScrollX": "100%",
                                //"sScrollXInner": "120%",
                                //"bScrollCollapse": true,
                                //Note: if you are applying horizontal scrolling (sScrollX) on a ".table-bordered"
                                //you may want to wrap the table inside a "div.dataTables_borderWrap" element

                                //"iDisplayLength": 50,


                                select: {
                                    style: 'multi'
                                }
                            });



                    $.fn.dataTable.Buttons.defaults.dom.container.className = 'dt-buttons btn-overlap btn-group btn-overlap';

                    new $.fn.dataTable.Buttons(myTable, {
                        buttons: [
                            {
                                "extend": "colvis",
                                "text": "<i class='fa fa-search bigger-110 blue'></i> <span class='hidden'>Show/hide columns</span>",
                                "className": "btn btn-white btn-primary btn-bold",
                                columns: ':not(:first):not(:last)'
                            },
                            {
                                "extend": "copy",
                                "text": "<i class='fa fa-copy bigger-110 pink'></i> <span class='hidden'>Copy to clipboard</span>",
                                "className": "btn btn-white btn-primary btn-bold"
                            },
                            {
                                "extend": "csv",
                                "text": "<i class='fa fa-database bigger-110 orange'></i> <span class='hidden'>Export to CSV</span>",
                                "className": "btn btn-white btn-primary btn-bold"
                            },
                            {
                                "extend": "excel",
                                "text": "<i class='fa fa-file-excel-o bigger-110 green'></i> <span class='hidden'>Export to Excel</span>",
                                "className": "btn btn-white btn-primary btn-bold"
                            },
                            {
                                "extend": "pdf",
                                "text": "<i class='fa fa-file-pdf-o bigger-110 red'></i> <span class='hidden'>Export to PDF</span>",
                                "className": "btn btn-white btn-primary btn-bold"
                            },
                            {
                                "extend": "print",
                                "text": "<i class='fa fa-print bigger-110 grey'></i> <span class='hidden'>Print</span>",
                                "className": "btn btn-white btn-primary btn-bold",
                                autoPrint: false,
                                message: 'This print was produced using the Print button for DataTables'
                            }
                        ]
                    });
                    myTable.buttons().container().appendTo($('.tableTools-container1'));

                    //style the message box
                    var defaultCopyAction = myTable.button(1).action();
                    myTable.button(1).action(function (e, dt, button, config) {
                        defaultCopyAction(e, dt, button, config);
                        $('.dt-button-info').addClass('gritter-item-wrapper gritter-info gritter-center white');
                    });


                    var defaultColvisAction = myTable.button(0).action();
                    myTable.button(0).action(function (e, dt, button, config) {

                        defaultColvisAction(e, dt, button, config);


                        if ($('.dt-button-collection > .dropdown-menu').length == 0) {
                            $('.dt-button-collection')
                                .wrapInner('<ul class="dropdown-menu dropdown-light dropdown-caret dropdown-caret" />')
                                .find('a').attr('href', '#').wrap("<li />")
                        }
                        $('.dt-button-collection').appendTo('.tableTools-container1 .dt-buttons')
                    });

                    ////

                    setTimeout(function () {
                        $($('.tableTools-container1')).find('a.dt-button').each(function () {
                            var div = $(this).find(' > div').first();
                            if (div.length == 1) div.tooltip({ container: 'body', title: div.parent().text() });
                            else $(this).tooltip({ container: 'body', title: $(this).text() });
                        });
                    }, 2000);





                    myTable.on('select', function (e, dt, type, index) {
                        if (type === 'row') {
                            $(myTable.row(index).node()).find('input:checkbox').prop('checked', true);
                        }
                    });
                    myTable.on('deselect', function (e, dt, type, index) {
                        if (type === 'row') {
                            $(myTable.row(index).node()).find('input:checkbox').prop('checked', false);
                        }
                    });




                    /////////////////////////////////
                    //table checkboxes
                    $('th input[type=checkbox], td input[type=checkbox]').prop('checked', false);

                    //select/deselect all rows according to table header checkbox
                    $('#dynamic-table > thead > tr > th input[type=checkbox], #dynamic-table_wrapper input[type=checkbox]').eq(0).on('click', function () {
                        var th_checked = this.checked;//checkbox inside "TH" table header

                        $('#dynamic-table').find('tbody > tr').each(function () {
                            var row = this;
                            if (th_checked) myTable.row(row).select();
                            else myTable.row(row).deselect();
                        });
                    });

                    //select/deselect a row when the checkbox is checked/unchecked
                    $('#dynamic-table').on('click', 'td input[type=checkbox]', function () {
                        var row = $(this).closest('tr').get(0);
                        if (this.checked) myTable.row(row).deselect();
                        else myTable.row(row).select();
                    });



                    $(document).on('click', '#dynamic-table.dropdown-toggle', function (e) {
                        e.stopImmediatePropagation();
                        e.stopPropagation();
                        e.preventDefault();
                    });

                },
                error: function (msg) {
                    bootstrap_alert.warning(msg.responseText, "error");
                }
            });
        }



        $("#dynamic-table").on('click', '.btnUpdate', function () {
            // get the current row
            var currentRow = $(this).closest("tr");

            var col1 = currentRow.find("td:eq(1)").text(); // get current row 3rd TD
            var ShipmentNumberList = col1;
            var col2 = currentRow.find("td:eq(2)").text(); // get current row 3rd TD
            var FreighrChargeList = col2;

            $.ajax({
                url: '@Url.Action("FreightUpdation", "VerificationFreightUpdate")',
                type: 'POST',
                data: { shipmentNumber: ShipmentNumberList, freighrCharge: FreighrChargeList },
                success: function (msg) {
                    let data = JSON.parse(msg);
                    if (msg.startsWith("Error", 1)) {
                        bootstrap_alert.warning(msg, "error");
                    }
                    else if (msg.startsWith("Success", 1)) {

                        //window.location = "/GPIL_CROP_MASTER/Index";
                        bootstrap_alert.warning(msg, "success");
                    }
                },
                error: function (msg) {

                    //if (response.startsWith("Error", 1)) {
                    //    bootstrap_alert.warning(response, "error");
                    //}
                    bootstrap_alert.warning(msg.responseText, "error");
                }

            });
        });



    });





    
</script>